<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jaxws="http://cxf.apache.org/jaxws"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://cxf.apache.org/jaxws
           http://cxf.apache.org/schemas/jaxws.xsd">

  <import resource="classpath:/META-INF/cxf/cxf.xml" />
  <import resource="classpath:/META-INF/cxf/cxf-extension-soap.xml" />
  <import resource="classpath:/META-INF/cxf/cxf-servlet.xml" />

  <!--Bean to load tipInterface.properties file -->
  <bean id="tipInterfaceProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:/tipInterface.properties">  <!--reads tipInterface.properties file-->
      <!-- this should define the following properties -->
      <!-- http://<hostAddress>:<hostPort>/<systemName>/<serviceContext>/<InterfaceName> -->
      <!-- <InterfaceName> is standardised in the build for the particular interface     -->
      <!-- ${org.openoss.tip.interface.hostAddress}     -->
      <!-- ${org.openoss.tip.interface.hostPort}        -->
      <!-- ${org.openoss.tip.interface.systemName}      -->
      <!-- ${org.openoss.tip.interface.serviceContext}  -->
    </property>
  </bean>

  <context:annotation-config />

  <!--  Required: Set up a TransactionManager for use by OpenEJB or Spring. -->
  <!--  The Spring PlatformTransactionManager may be used instead.          -->
  <!--  In future versions this will not be a required step.                -->
  <bean name="TransactionManager" class="org.apache.geronimo.transaction.manager.GeronimoTransactionManager" />

  <!--  Required:  Set up a SecurityService for use by OpenEJB.-->
  <!--  In future versions this will not be a required step.-->
  <bean name="SecurityService" class="org.apache.openejb.core.security.SecurityServiceImpl" />

  <bean id="tipInterfaceLog" class="org.springframework.beans.factory.config.CommonsLogFactoryBean">
    <property name="logName" value="tipInterfaceTestLog" />
  </bean>

  <bean id="tipTestLog" class="org.springframework.beans.factory.config.CommonsLogFactoryBean">
    <property name="logName" value="tipTestNGTestLog" />
  </bean>

  <bean name="tipObjectFactory" class="org.openoss.tip.util.impl.TipObjectFactoryImpl">
    <property name="log">
      <ref bean="tipTestLog" />
    </property>
  </bean>

  <!-- THIS OPTION LOADS LOCAL EJB'S -->
  <!--    Loads the EJBs from the classpath just as when embedding -->
  <!--    OpenEJB via the org.apache.openejb.client.LocalInitialContextFactory. -->
  <!--    All the discovered EJBs are imported into this context and available for injection here.-->
  <bean name="classPathApplication" class="org.apache.openejb.spring.ClassPathApplication" />

  <bean name="ManagedEntityDatabase" class="org.apache.openejb.spring.Resource">
    <property name="type" value="DataSource" />
    <property name="properties">
      <props>
        <prop key="JdbcDriver">org.hsqldb.jdbcDriver</prop>
        <prop key="JdbcUrl">jdbc:hsqldb:mem:testdb</prop>
      </props>
    </property>
  </bean>

  <!-- This sets up openejb network services to allow remote access to beans  -->
  <!-- see http://www.mail-archive.com/dev@openejb.apache.org/msg03800.html   -->
  <!-- NOTE this MUST be after classPathApplication as it expects OpenEJB to be already running -->
  <bean name="networkServices" class="org.openoss.tip.ri.NetworkServices">
    <property name="log">
      <ref bean="tipInterfaceLog" />
    </property>
  </bean>

  <bean id="logInbound" class="org.apache.cxf.interceptor.LoggingInInterceptor" >
    <property name="prettyLogging" value="true"/>
  </bean>

  <bean id="logOutbound" class="org.apache.cxf.interceptor.LoggingOutInterceptor">
    <property name="prettyLogging" value="true"/>
  </bean>

  <import resource="classpath*:META-INF/Dependencies_WSAppContext.xml"/>
  <import resource="classpath*:META-INF/Model_WSAppContext.xml"/>

</beans>

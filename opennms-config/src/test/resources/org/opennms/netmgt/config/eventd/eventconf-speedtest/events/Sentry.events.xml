<!-- Start of auto generated data from MIB: Sentry3-MIB -->
<events xmlns="http://xmlns.opennms.org/xsd/eventconf">
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/towerStatusEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: towerStatusEvent-Normal</event-label>
	<descr>
&lt;p&gt;Tower status event.  If enabled, this trap is sent when the
towerStatus indicates an error state ('noComm', 'fanFail',
or 'overTemp').  This trap is repeated periodically while the
towerStatus remains in an error state.  If the towerStatus
returns to a non-error state ('normal'), this trap is sent
once more with the non-error towerStatus, and then stops
being repeated.

While the towerStatus indicates a 'noComm' error state, all
status and load traps are suppressed for input feeds and
outlets on the tower.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		noComm(1)
		fanFail(2)
		overTemp(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: towerStatus is now normal trap received 
			systemLocation=%parm[#1]% 
			towerID=%parm[#2]% 
			towerName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/towerStatusEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/towerStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: towerStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Tower status event.  If enabled, this trap is sent when the
towerStatus indicates an error state ('noComm', 'fanFail',
or 'overTemp').  This trap is repeated periodically while the
towerStatus remains in an error state.  If the towerStatus
returns to a non-error state ('normal'), this trap is sent
once more with the non-error towerStatus, and then stops
being repeated.

While the towerStatus indicates a 'noComm' error state, all
status and load traps are suppressed for input feeds and
outlets on the tower.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		noComm(1)
		fanFail(2)
		overTemp(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: towerStatus comm failure trap received 
			systemLocation=%parm[#1]% 
			towerID=%parm[#2]% 
			towerName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/towerStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: towerStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Tower status event.  If enabled, this trap is sent when the
towerStatus indicates an error state ('noComm', 'fanFail',
or 'overTemp').  This trap is repeated periodically while the
towerStatus remains in an error state.  If the towerStatus
returns to a non-error state ('normal'), this trap is sent
once more with the non-error towerStatus, and then stops
being repeated.

While the towerStatus indicates a 'noComm' error state, all
status and load traps are suppressed for input feeds and
outlets on the tower.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		noComm(1)
		fanFail(2)
		overTemp(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: towerStatus fan failure trap received 
			systemLocation=%parm[#1]% 
			towerID=%parm[#2]% 
			towerName=%parm[#3]% 
		</logmsg>
	<severity>Major</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/towerStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: towerStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Tower status event.  If enabled, this trap is sent when the
towerStatus indicates an error state ('noComm', 'fanFail',
or 'overTemp').  This trap is repeated periodically while the
towerStatus remains in an error state.  If the towerStatus
returns to a non-error state ('normal'), this trap is sent
once more with the non-error towerStatus, and then stops
being repeated.

While the towerStatus indicates a 'noComm' error state, all
status and load traps are suppressed for input feeds and
outlets on the tower.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		noComm(1)
		fanFail(2)
		overTemp(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: towerStatus over temperature trap received 
			systemLocation=%parm[#1]% 
			towerID=%parm[#2]% 
			towerName=%parm[#3]% 
		</logmsg>
	<severity>Major</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/towerStatusEvent</uei>
	<event-label>Sentry3-MIB defined trap event: towerStatusEvent</event-label>
	<descr>
&lt;p&gt;Tower status event.  If enabled, this trap is sent when the
towerStatus indicates an error state ('noComm', 'fanFail',
or 'overTemp').  This trap is repeated periodically while the
towerStatus remains in an error state.  If the towerStatus
returns to a non-error state ('normal'), this trap is sent
once more with the non-error towerStatus, and then stops
being repeated.

While the towerStatus indicates a 'noComm' error state, all
status and load traps are suppressed for input feeds and
outlets on the tower.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	towerStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		noComm(1)
		fanFail(2)
		overTemp(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: towerStatusEvent trap received 
			systemLocation=%parm[#1]% 
			towerID=%parm[#2]% 
			towerName=%parm[#3]% 
			towerStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: infeedStatusEvent-Normal</event-label>
	<descr>
&lt;p&gt;Input feed status event.  If enabled, this trap is sent when
the infeedStatus indicates an error state ('offError',
'onError', or 'noComm').  This trap is repeated periodically
while the infeedStatus remains in an error state.  If the
infeedStatus returns to a non-error state ('off' or 'on'),
this trap is sent once more with the non-error infeedStatus,
and then stops being repeated.

While the infeedStatus indicates an error state, load
traps are suppressed for the input feed, and, if the
infeedCapabilities 'failSafe' bit is FALSE, all status and
load traps are suppressed for outlets on the input feed.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: Input Feed Status off (normal)
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: infeedStatusEvent-Normal</event-label>
	<descr>
&lt;p&gt;Input feed status event.  If enabled, this trap is sent when
the infeedStatus indicates an error state ('offError',
'onError', or 'noComm').  This trap is repeated periodically
while the infeedStatus remains in an error state.  If the
infeedStatus returns to a non-error state ('off' or 'on'),
this trap is sent once more with the non-error infeedStatus,
and then stops being repeated.

While the infeedStatus indicates an error state, load
traps are suppressed for the input feed, and, if the
infeedCapabilities 'failSafe' bit is FALSE, all status and
load traps are suppressed for outlets on the input feed.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: Input Feed Status on (normal)
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed status event.  If enabled, this trap is sent when
the infeedStatus indicates an error state ('offError',
'onError', or 'noComm').  This trap is repeated periodically
while the infeedStatus remains in an error state.  If the
infeedStatus returns to a non-error state ('off' or 'on'),
this trap is sent once more with the non-error infeedStatus,
and then stops being repeated.

While the infeedStatus indicates an error state, load
traps are suppressed for the input feed, and, if the
infeedCapabilities 'failSafe' bit is FALSE, all status and
load traps are suppressed for outlets on the input feed.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: Input Feed Status offWait (error)
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>3</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed status event.  If enabled, this trap is sent when
the infeedStatus indicates an error state ('offError',
'onError', or 'noComm').  This trap is repeated periodically
while the infeedStatus remains in an error state.  If the
infeedStatus returns to a non-error state ('off' or 'on'),
this trap is sent once more with the non-error infeedStatus,
and then stops being repeated.

While the infeedStatus indicates an error state, load
traps are suppressed for the input feed, and, if the
infeedCapabilities 'failSafe' bit is FALSE, all status and
load traps are suppressed for outlets on the input feed.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: Input Feed Status onWait (error)
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>4</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed status event.  If enabled, this trap is sent when
the infeedStatus indicates an error state ('offError',
'onError', or 'noComm').  This trap is repeated periodically
while the infeedStatus remains in an error state.  If the
infeedStatus returns to a non-error state ('off' or 'on'),
this trap is sent once more with the non-error infeedStatus,
and then stops being repeated.

While the infeedStatus indicates an error state, load
traps are suppressed for the input feed, and, if the
infeedCapabilities 'failSafe' bit is FALSE, all status and
load traps are suppressed for outlets on the input feed.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: Input Feed Status offError (error)
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>5</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed status event.  If enabled, this trap is sent when
the infeedStatus indicates an error state ('offError',
'onError', or 'noComm').  This trap is repeated periodically
while the infeedStatus remains in an error state.  If the
infeedStatus returns to a non-error state ('off' or 'on'),
this trap is sent once more with the non-error infeedStatus,
and then stops being repeated.

While the infeedStatus indicates an error state, load
traps are suppressed for the input feed, and, if the
infeedCapabilities 'failSafe' bit is FALSE, all status and
load traps are suppressed for outlets on the input feed.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: Input Feed Status onError (error)
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>6</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed status event.  If enabled, this trap is sent when
the infeedStatus indicates an error state ('offError',
'onError', or 'noComm').  This trap is repeated periodically
while the infeedStatus remains in an error state.  If the
infeedStatus returns to a non-error state ('off' or 'on'),
this trap is sent once more with the non-error infeedStatus,
and then stops being repeated.

While the infeedStatus indicates an error state, load
traps are suppressed for the input feed, and, if the
infeedCapabilities 'failSafe' bit is FALSE, all status and
load traps are suppressed for outlets on the input feed.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: Input Feed Status noComm (error)
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedStatusEvent</uei>
	<event-label>Sentry3-MIB defined trap event: infeedStatusEvent</event-label>
	<descr>
&lt;p&gt;Input feed status event.  If enabled, this trap is sent when
the infeedStatus indicates an error state ('offError',
'onError', or 'noComm').  This trap is repeated periodically
while the infeedStatus remains in an error state.  If the
infeedStatus returns to a non-error state ('off' or 'on'),
this trap is sent once more with the non-error infeedStatus,
and then stops being repeated.

While the infeedStatus indicates an error state, load
traps are suppressed for the input feed, and, if the
infeedCapabilities 'failSafe' bit is FALSE, all status and
load traps are suppressed for outlets on the input feed.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedStatusEvent trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent-Normal</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent normal trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent-Normal</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent notOn trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent reading trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Warning</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>3</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent low load trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>4</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent high load trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>5</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent over load trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>6</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent read error trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>7</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent noComm trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/infeedLoadEvent</uei>
	<event-label>Sentry3-MIB defined trap event: infeedLoadEvent</event-label>
	<descr>
&lt;p&gt;Input feed load event.  If enabled, this trap is sent when
the infeedLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the infeedLoadStatus
remains in an error state.  If the infeedLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error infeedLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	infeedLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: infeedLoadEvent trap received 
			systemLocation=%parm[#1]% 
			infeedID=%parm[#2]% 
			infeedName=%parm[#3]% 
			infeedLoadStatus=%parm[#4]% 
			infeedLoadValue=%parm[#5]% 
			infeedLoadHighThresh=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Normal</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent off trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Normal</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent on trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent offWait trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>3</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent onWait trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>4</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent offError trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>5</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent onError trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>6</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent noComm trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>7</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent reading trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>8</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent offFuse trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>9</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent onFuse trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletStatusEvent</uei>
	<event-label>Sentry3-MIB defined trap event: outletStatusEvent</event-label>
	<descr>
&lt;p&gt;Outlet status event.  If enabled, this trap is sent when the
outletStatus indicates an error state ('offError', 'onError',
'noComm', 'offFuse', or 'onFuse').  This trap is repeated
periodically while the outletStatus remains in an error state.
If the outletStatus returns to a non-error state ('off' or
'on'), this trap is sent once more with the non-error
outletStatus, and then stops being repeated.

While the outletStatus indicates an error state, load traps
are suppressed for the outlet.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletStatusEvent trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent-Normal</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent normal trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent-Normal</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent notOn trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent reading trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>3</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent low load trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>4</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent high load trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>5</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent over load trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>6</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent read error trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>7</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent-Error</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent noComm trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletLoadEvent</uei>
	<event-label>Sentry3-MIB defined trap event: outletLoadEvent</event-label>
	<descr>
&lt;p&gt;Outlet load event.  If enabled, this trap is sent when the
outletLoadStatus indicates an error state ('loadLow',
'loadHigh', 'overLoad', 'readError', or 'noComm').  This
trap is repeated periodically while the outletLoadStatus
remains in an error state.  If the outletLoadStatus returns
to a non-error state ('normal' or 'notOn'), this trap is
sent once more with the non-error outletLoadStatus, and then
stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notOn(1)
		reading(2)
		loadLow(3)
		loadHigh(4)
		overLoad(5)
		readError(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletLoadHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletLoadEvent trap received 
			systemLocation=%parm[#1]% 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
			outletLoadStatus=%parm[#4]% 
			outletLoadValue=%parm[#5]% 
			outletLoadLowThresh=%parm[#6]% 
			outletLoadHighThresh=%parm[#7]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>6</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/outletChangeEvent</uei>
	<event-label>Sentry3-MIB defined trap event: outletChangeEvent</event-label>
	<descr>
&lt;p&gt;Outlet on/off change event.  If enabled, this trap is sent
when the outletStatus changes from any 'on' state ('on',
'onWait', 'onError', or 'onFuse') to any 'off' state ('off',
'offWait', 'offError', or 'offFuse'), and vice-versa.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		off(0)
		on(1)
		offWait(2)
		onWait(3)
		offError(4)
		onError(5)
		noComm(6)
		reading(7)
		offFuse(8)
		onFuse(9)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	outletControlState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		idleOff(0)
		idleOn(1)
		wakeOff(2)
		wakeOn(3)
		off(4)
		on(5)
		lockedOff(6)
		lockedOn(7)
		reboot(8)
		shutdown(9)
		pendOn(10)
		pendOff(11)
		minimumOff(12)
		minimumOn(13)
		eventOff(14)
		eventOn(15)
		eventReboot(16)
		eventShutdown(17)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: outletChangeEvent trap received 
			outletID=%parm[#2]% 
			outletName=%parm[#3]% 
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>7</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonStatusEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: envMonStatusEvent-Normal</event-label>
	<descr>
&lt;p&gt;Environmental monitor status event.  If enabled, this trap
is sent when the envMonStatus indicates an error state
('noComm').  This trap is repeated periodically while the
envMonStatus remains in an error state.  If the envMonStatus
returns to a non-error state ('normal'), this trap is sent
once more with the non-error envMonStatus, and then stops
being repeated.

While the envMonStatus indicates an error state, all status
traps are suppressed for the water sensor, ADC, temperature/
humudity sensors, and contact closures on the environmental
monitor.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		noComm(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonStatusEvent normal trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/envMonStatusEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>7</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: envMonStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Environmental monitor status event.  If enabled, this trap
is sent when the envMonStatus indicates an error state
('noComm').  This trap is repeated periodically while the
envMonStatus remains in an error state.  If the envMonStatus
returns to a non-error state ('normal'), this trap is sent
once more with the non-error envMonStatus, and then stops
being repeated.

While the envMonStatus indicates an error state, all status
traps are suppressed for the water sensor, ADC, temperature/
humudity sensors, and contact closures on the environmental
monitor.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		noComm(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonStatusEvent noComm trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>7</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonStatusEvent</uei>
	<event-label>Sentry3-MIB defined trap event: envMonStatusEvent</event-label>
	<descr>
&lt;p&gt;Environmental monitor status event.  If enabled, this trap
is sent when the envMonStatus indicates an error state
('noComm').  This trap is repeated periodically while the
envMonStatus remains in an error state.  If the envMonStatus
returns to a non-error state ('normal'), this trap is sent
once more with the non-error envMonStatus, and then stops
being repeated.

While the envMonStatus indicates an error state, all status
traps are suppressed for the water sensor, ADC, temperature/
humudity sensors, and contact closures on the environmental
monitor.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		noComm(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonStatusEvent trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonName=%parm[#3]% 
			envMonStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>8</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonWaterSensorEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: envMonWaterSensorEvent-Normal</event-label>
	<descr>
&lt;p&gt;Environmental monitor water sensor event.  If enabled, this
trap is sent when the envMonWaterSensorStatus indicates an
error state ('alarm').  This trap is repeated periodically
while the envMonWaterSensorStatus remains in an error state.
If the envMonWaterSensorStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
envMonWaterSensorStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonWaterSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonWaterSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		alarm(1)
		noComm(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonWaterSensorEvent normal trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonWaterSensorName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/envMonWaterSensorEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>8</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonWaterSensorEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: envMonWaterSensorEvent-Error</event-label>
	<descr>
&lt;p&gt;Environmental monitor water sensor event.  If enabled, this
trap is sent when the envMonWaterSensorStatus indicates an
error state ('alarm').  This trap is repeated periodically
while the envMonWaterSensorStatus remains in an error state.
If the envMonWaterSensorStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
envMonWaterSensorStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonWaterSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonWaterSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		alarm(1)
		noComm(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonWaterSensorEvent error trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonWaterSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>8</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonWaterSensorEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: envMonWaterSensorEvent-Error</event-label>
	<descr>
&lt;p&gt;Environmental monitor water sensor event.  If enabled, this
trap is sent when the envMonWaterSensorStatus indicates an
error state ('alarm').  This trap is repeated periodically
while the envMonWaterSensorStatus remains in an error state.
If the envMonWaterSensorStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
envMonWaterSensorStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonWaterSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonWaterSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		alarm(1)
		noComm(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonWaterSensorEvent noComm trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonWaterSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>8</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonWaterSensorEvent</uei>
	<event-label>Sentry3-MIB defined trap event: envMonWaterSensorEvent</event-label>
	<descr>
&lt;p&gt;Environmental monitor water sensor event.  If enabled, this
trap is sent when the envMonWaterSensorStatus indicates an
error state ('alarm').  This trap is repeated periodically
while the envMonWaterSensorStatus remains in an error state.
If the envMonWaterSensorStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
envMonWaterSensorStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonWaterSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonWaterSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		alarm(1)
		noComm(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonWaterSensorEvent trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonWaterSensorName=%parm[#3]% 
			envMonWaterSensorStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonADCEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: envMonADCEvent-Normal</event-label>
	<descr>
&lt;p&gt;Environmental monitor analog-to-digital converter event.
If enabled, this trap is sent when the envMonADCStatus
indicates an error state ('countLow' or 'countHigh').  This
trap is repeated periodically while the envMonADCStatus
remains in an error state.  If the envMonADCStatus returns
to a non-error state ('normal'), this trap is sent once more
with the non-error envMonADCStatus, and then stops being
repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		reading(1)
		countLow(2)
		countHigh(3)
		readError(4)
		noComm(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonADCEvent normal trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonADCName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/envMonADCEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonADCEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: envMonADCEvent-Error</event-label>
	<descr>
&lt;p&gt;Environmental monitor analog-to-digital converter event.
If enabled, this trap is sent when the envMonADCStatus
indicates an error state ('countLow' or 'countHigh').  This
trap is repeated periodically while the envMonADCStatus
remains in an error state.  If the envMonADCStatus returns
to a non-error state ('normal'), this trap is sent once more
with the non-error envMonADCStatus, and then stops being
repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		reading(1)
		countLow(2)
		countHigh(3)
		readError(4)
		noComm(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonADCEvent reading trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonADCName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonADCEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: envMonADCEvent-Error</event-label>
	<descr>
&lt;p&gt;Environmental monitor analog-to-digital converter event.
If enabled, this trap is sent when the envMonADCStatus
indicates an error state ('countLow' or 'countHigh').  This
trap is repeated periodically while the envMonADCStatus
remains in an error state.  If the envMonADCStatus returns
to a non-error state ('normal'), this trap is sent once more
with the non-error envMonADCStatus, and then stops being
repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		reading(1)
		countLow(2)
		countHigh(3)
		readError(4)
		noComm(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonADCEvent countLow trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonADCName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>3</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonADCEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: envMonADCEvent-Error</event-label>
	<descr>
&lt;p&gt;Environmental monitor analog-to-digital converter event.
If enabled, this trap is sent when the envMonADCStatus
indicates an error state ('countLow' or 'countHigh').  This
trap is repeated periodically while the envMonADCStatus
remains in an error state.  If the envMonADCStatus returns
to a non-error state ('normal'), this trap is sent once more
with the non-error envMonADCStatus, and then stops being
repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		reading(1)
		countLow(2)
		countHigh(3)
		readError(4)
		noComm(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonADCEvent countHigh trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonADCName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>4</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonADCEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: envMonADCEvent-Error</event-label>
	<descr>
&lt;p&gt;Environmental monitor analog-to-digital converter event.
If enabled, this trap is sent when the envMonADCStatus
indicates an error state ('countLow' or 'countHigh').  This
trap is repeated periodically while the envMonADCStatus
remains in an error state.  If the envMonADCStatus returns
to a non-error state ('normal'), this trap is sent once more
with the non-error envMonADCStatus, and then stops being
repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		reading(1)
		countLow(2)
		countHigh(3)
		readError(4)
		noComm(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonADCEvent readError trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonADCName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>5</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonADCEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: envMonADCEvent-Error</event-label>
	<descr>
&lt;p&gt;Environmental monitor analog-to-digital converter event.
If enabled, this trap is sent when the envMonADCStatus
indicates an error state ('countLow' or 'countHigh').  This
trap is repeated periodically while the envMonADCStatus
remains in an error state.  If the envMonADCStatus returns
to a non-error state ('normal'), this trap is sent once more
with the non-error envMonADCStatus, and then stops being
repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		reading(1)
		countLow(2)
		countHigh(3)
		readError(4)
		noComm(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonADCEvent noComm trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonADCName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/envMonADCEvent</uei>
	<event-label>Sentry3-MIB defined trap event: envMonADCEvent</event-label>
	<descr>
&lt;p&gt;Environmental monitor analog-to-digital converter event.
If enabled, this trap is sent when the envMonADCStatus
indicates an error state ('countLow' or 'countHigh').  This
trap is repeated periodically while the envMonADCStatus
remains in an error state.  If the envMonADCStatus returns
to a non-error state ('normal'), this trap is sent once more
with the non-error envMonADCStatus, and then stops being
repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		reading(1)
		countLow(2)
		countHigh(3)
		readError(4)
		noComm(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	envMonADCHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: envMonADCEvent trap received 
			systemLocation=%parm[#1]% 
			envMonID=%parm[#2]% 
			envMonADCName=%parm[#3]% 
			envMonADCStatus=%parm[#4]% 
			envMonADCCount=%parm[#5]% 
			envMonADCLowThresh=%parm[#6]% 
			envMonADCHighThresh=%parm[#7]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>10</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorStatusEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorStatusEvent-Normal</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor status event.  If enabled, this
trap is sent when the tempHumidSensorStatus indicates an
error state ('lost').  This trap is repeated periodically
while the tempHumidSensorStatus remains in an error state.
If the tempHumidSensorStatus returns to a non-error state
('found'), this trap is sent once more with the non-error
tempHumidSensorStatus, and then stops being repeated.

While the tempHumidSensorStatus indicates an error state, all
temperature and humidity status traps are suppressed for the
temperature/humudity sensor.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		found(0)
		notFound(1)
		lost(2)
		noComm(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorStatusEvent found trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorStatusEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>10</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorStatusEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorStatusEvent-Normal</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor status event.  If enabled, this
trap is sent when the tempHumidSensorStatus indicates an
error state ('lost').  This trap is repeated periodically
while the tempHumidSensorStatus remains in an error state.
If the tempHumidSensorStatus returns to a non-error state
('found'), this trap is sent once more with the non-error
tempHumidSensorStatus, and then stops being repeated.

While the tempHumidSensorStatus indicates an error state, all
temperature and humidity status traps are suppressed for the
temperature/humudity sensor.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		found(0)
		notFound(1)
		lost(2)
		noComm(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorStatusEvent not found trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorStatusEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>10</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor status event.  If enabled, this
trap is sent when the tempHumidSensorStatus indicates an
error state ('lost').  This trap is repeated periodically
while the tempHumidSensorStatus remains in an error state.
If the tempHumidSensorStatus returns to a non-error state
('found'), this trap is sent once more with the non-error
tempHumidSensorStatus, and then stops being repeated.

While the tempHumidSensorStatus indicates an error state, all
temperature and humidity status traps are suppressed for the
temperature/humudity sensor.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		found(0)
		notFound(1)
		lost(2)
		noComm(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorStatusEvent lost trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>10</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>3</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorStatusEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorStatusEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor status event.  If enabled, this
trap is sent when the tempHumidSensorStatus indicates an
error state ('lost').  This trap is repeated periodically
while the tempHumidSensorStatus remains in an error state.
If the tempHumidSensorStatus returns to a non-error state
('found'), this trap is sent once more with the non-error
tempHumidSensorStatus, and then stops being repeated.

While the tempHumidSensorStatus indicates an error state, all
temperature and humidity status traps are suppressed for the
temperature/humudity sensor.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		found(0)
		notFound(1)
		lost(2)
		noComm(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorStatusEvent noComm trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>10</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorStatusEvent</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorStatusEvent</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor status event.  If enabled, this
trap is sent when the tempHumidSensorStatus indicates an
error state ('lost').  This trap is repeated periodically
while the tempHumidSensorStatus remains in an error state.
If the tempHumidSensorStatus returns to a non-error state
('found'), this trap is sent once more with the non-error
tempHumidSensorStatus, and then stops being repeated.

While the tempHumidSensorStatus indicates an error state, all
temperature and humidity status traps are suppressed for the
temperature/humudity sensor.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		found(0)
		notFound(1)
		lost(2)
		noComm(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorStatusEvent trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
			tempHumidSensorStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent-Normal</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent normal trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent-Normal</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent notFound trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent reading trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>3</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent low temp trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>4</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent high temp trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>5</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent readError trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>6</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent lost trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>7</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent noComm trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorTempEvent</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorTempEvent</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor temperature event.  If enabled,
this trap is sent when the tempHumidSensorTempStatus
indicates an error state ('tempLow' or 'tempHigh').
This trap is repeated periodically while the
tempHumidSensorTempStatus remains in an error state.  If
the tempHumidSensorTempStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorTempStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		tempLow(3)
		tempHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorTempScale&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		celsius(0)
		fahrenheit(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorTempEvent trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
			tempHumidSensorTempStatus=%parm[#4]% 
			tempHumidSensorTempValue=%parm[#5]% 
			tempHumidSensorTempLowThresh=%parm[#6]% 
			tempHumidSensorTempHighThresh=%parm[#7]% 
			tempHumidSensorTempScale=%parm[#8]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent-Normal</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent normal trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent-Normal</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent notFound trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent reading trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>3</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent humidLow trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>4</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent humidHigh trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>5</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent readError trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>6</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent lost trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>7</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent-Error</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent noComm trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/tempHumidSensorHumidEvent</uei>
	<event-label>Sentry3-MIB defined trap event: tempHumidSensorHumidEvent</event-label>
	<descr>
&lt;p&gt;Temperature/humidity sensor humidity event.  If enabled,
this trap is sent when the tempHumidSensorHumidStatus
indicates an error state ('humidLow' or 'humidHigh').
This trap is repeated periodically while the
tempHumidSensorHumidStatus remains in an error state.  If
the tempHumidSensorHumidStatus returns to a non-error state
('normal'), this trap is sent once more with the non-error
tempHumidSensorHumidStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		notFound(1)
		reading(2)
		humidLow(3)
		humidHigh(4)
		readError(5)
		lost(6)
		noComm(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidValue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidLowThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	tempHumidSensorHumidHighThresh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: tempHumidSensorHumidEvent trap received 
			systemLocation=%parm[#1]% 
			tempHumidSensorID=%parm[#2]% 
			tempHumidSensorName=%parm[#3]% 
			tempHumidSensorHumidStatus=%parm[#4]% 
			tempHumidSensorHumidValue=%parm[#5]% 
			tempHumidSensorHumidLowThresh=%parm[#6]% 
			tempHumidSensorHumidHighThresh=%parm[#7]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>13</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>0</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/contactClosureEvent-Normal</uei>
	<event-label>Sentry3-MIB defined trap event: contactClosureEvent-Normal</event-label>
	<descr>
&lt;p&gt;Contact closure event.  If enabled, this trap is sent when
the contactClosureStatus indicates an error state ('alarm').
This trap is repeated periodically while the
contactClosureStatus remains in an error state.  If the
contactClosureStatus returns to a non-error state ('normal'),
this trap is sent once more with the non-error
contactClosureStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		alarm(1)
		noComm(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: contactClosureEvent normal trap received 
			systemLocation=%parm[#1]% 
			contactClosureID=%parm[#2]% 
			contactClosureName=%parm[#3]% 
		</logmsg>
	<severity>Normal</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="2" clear-key="uei.opennms.org/vendor/ServerTech/traps/contactClosureEvent-Error:%dpname%:%nodeid%:%interface%:%parm[#2]%i:%parm[#3]%" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>13</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>1</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/contactClosureEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: contactClosureEvent-Error</event-label>
	<descr>
&lt;p&gt;Contact closure event.  If enabled, this trap is sent when
the contactClosureStatus indicates an error state ('alarm').
This trap is repeated periodically while the
contactClosureStatus remains in an error state.  If the
contactClosureStatus returns to a non-error state ('normal'),
this trap is sent once more with the non-error
contactClosureStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		alarm(1)
		noComm(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: contactClosureEvent alarm trap received 
			systemLocation=%parm[#1]% 
			contactClosureID=%parm[#2]% 
			contactClosureName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>13</mevalue>
		</maskelement>
		<varbind>
			<vbnumber>4</vbnumber>
			<vbvalue>2</vbvalue>
		</varbind>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/contactClosureEvent-Error</uei>
	<event-label>Sentry3-MIB defined trap event: contactClosureEvent-Error</event-label>
	<descr>
&lt;p&gt;Contact closure event.  If enabled, this trap is sent when
the contactClosureStatus indicates an error state ('alarm').
This trap is repeated periodically while the
contactClosureStatus remains in an error state.  If the
contactClosureStatus returns to a non-error state ('normal'),
this trap is sent once more with the non-error
contactClosureStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		alarm(1)
		noComm(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: contactClosureEvent noComm trap received 
			systemLocation=%parm[#1]% 
			contactClosureID=%parm[#2]% 
			contactClosureName=%parm[#3]% 
		</logmsg>
	<severity>Minor</severity>
        <alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%parm[#2]%:%parm[#3]%" alarm-type="1" auto-clean="false"/>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.1718.3.100</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>13</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/ServerTech/traps/contactClosureEvent</uei>
	<event-label>Sentry3-MIB defined trap event: contactClosureEvent</event-label>
	<descr>
&lt;p&gt;Contact closure event.  If enabled, this trap is sent when
the contactClosureStatus indicates an error state ('alarm').
This trap is repeated periodically while the
contactClosureStatus remains in an error state.  If the
contactClosureStatus returns to a non-error state ('normal'),
this trap is sent once more with the non-error
contactClosureStatus, and then stops being repeated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemLocation&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	contactClosureStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		normal(0)
		alarm(1)
		noComm(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			Sentry Event: contactClosureEvent trap received 
			systemLocation=%parm[#1]% 
			contactClosureID=%parm[#2]% 
			contactClosureName=%parm[#3]% 
			contactClosureStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Indeterminate</severity>
</event>
</events>
<!-- End of auto generated data from MIB: Sentry3-MIB -->

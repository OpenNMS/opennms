<events xmlns="http://xmlns.opennms.org/xsd/eventconf">
<!-- Start of auto generated data from MIB: ALCATEL-IND1-CHASSIS-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsStr</uei>
	<event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsStr</event-label>
	<descr>
&lt;p&gt;A Software Trouble report is sent by whatever application
encountering a problem during its execution and would
want to aware the user of for maintenance purpose.	&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsStrLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		strNotFatal(1)
		strApplicationFatal(2)
		strFatal(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsStrAppID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsStrSnapID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsStrfileName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsStrfileLineNb&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsStrErrorNb&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsStrcomments&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsStrdataInfo&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			chassisTrapsStr trap received 
			chassisTrapsStrLevel=%parm[#1]% 
			chassisTrapsStrAppID=%parm[#2]% 
			chassisTrapsStrSnapID=%parm[#3]% 
			chassisTrapsStrfileName=%parm[#4]% 
			chassisTrapsStrfileLineNb=%parm[#5]% 
			chassisTrapsStrErrorNb=%parm[#6]% 
			chassisTrapsStrcomments=%parm[#7]% 
			chassisTrapsStrdataInfo=%parm[#8]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlert</uei>
	<event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert</event-label>
	<descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not				&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		chassis(1)
		ni(2)
		powerSuply(3)
		fan(4)
		cmm(5)
		fabric(6)
		gbic(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		runningWorking(1)
		runningCertified(2)
		certifyStarted(3)
		certifyFlashSyncStarted(4)
		certifyCompleted(5)
		certifyFailed(6)
		synchroStarted(7)
		synchroCompleted(8)
		synchroFailed(9)
		restoreStarted(10)
		restoreCompleted(11)
		restoreFailed(12)
		takeoverStarted(13)
		takeoverDeferred(14)
		takeoverCompleted(15)
		macAllocFailed(16)
		macRangeFailed(17)
		fanFailed(18)
		fanOk(19)
		fansOk(20)
		tempOverThreshold(21)
		tempUnderThreshold(22)
		tempOverDangerThreshold(23)
		powerMissing(24)
		psNotOperational(25)
		psOperational(26)
		psAllOperational(27)
		redundancyNotSupported(28)
		redundancyDisabledCertifyNeeded(29)
		cmmStartingAsPrimary(30)
		cmmStartingAsSecondary(31)
		cmmStartupCompleted(32)
		cmmAPlugged(33)
		cmmBPlugged(34)
		cmmAUnPlugged(35)
		cmmBUnPlugged(36)
		lowNvramBattery(37)
		notEnoughFabricsOperational(38)
		simplexNoSynchro(39)
		secAutoActivate(40)
		secAutoCertifyStarted(41)
		secAutoCertifyCompleted(42)
		secInactiveReset(43)
		activateScheduled(44)
		activateStarted(45)
		getAfileCompleted(46)
		getAfileFailed(47)
		sysUpdateStart(48)
		sysUpdateInProgress(49)
		sysUpdateError(50)
		sysUpdateEnd(51)
		reloadInProgress(52)
		c20UpgradeOk(53)
		c20UpgradeFailed(54)
		c20RestoreOk(55)
		c20RestoreFailed(56)
		c20NiFailed(57)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			chassisTrapsAlert trap received 
			physicalIndex=%parm[#1]% 
			chassisTrapsObjectType=%parm[#2]% 
			chassisTrapsObjectNumber=%parm[#3]% 
			chassisTrapsAlertNumber=%parm[#4]% 
			chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsStateChange</uei>
	<event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsStateChange</event-label>
	<descr>
&lt;p&gt;A status change was detected&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		chassis(1)
		ni(2)
		powerSuply(3)
		fan(4)
		cmm(5)
		fabric(6)
		gbic(7)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	chasEntPhysOperStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		up(1)
		down(2)
		testing(3)
		unknown(4)
		secondary(5)
		notPresent(6)
		unpowered(7)
		master(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			chassisTrapsStateChange trap received 
			physicalIndex=%parm[#1]% 
			chassisTrapsObjectType=%parm[#2]% 
			chassisTrapsObjectNumber=%parm[#3]% 
			chasEntPhysOperStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-CHASSIS-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-GROUP-MOBILITY-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.13.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/gmBindRuleViolation</uei>
	<event-label>ALCATEL-IND1-GROUP-MOBILITY-MIB defined trap event: gmBindRuleViolation</event-label>
	<descr>
&lt;p&gt;A bind-violation trap occurs whenever
a binding rule which has been configured gets violated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		macPortIp(9)
		portIp(10)
		macIp(11)
		macPort(12)
		macPortProto(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleVlanId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleIPAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleMacAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRulePortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleProtoClass&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		ipE2(1)
		ipSnap(2)
		ipxE2(3)
		ipxNov(4)
		ipxLlc(5)
		ipxSnap(6)
		decnet(7)
		appletalk(8)
		ethertypeE2(9)
		dsapSsap(10)
		ethertypeSnap(11)
		ipv6(12)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleEthertype&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleDsapSsap&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			gmBindRuleViolation trap received 
			gmBindRuleType=%parm[#1]% 
			gmBindRuleVlanId=%parm[#2]% 
			gmBindRuleIPAddress=%parm[#3]% 
			gmBindRuleMacAddress=%parm[#4]% 
			gmBindRulePortIfIndex=%parm[#5]% 
			gmBindRuleProtoClass=%parm[#6]% 
			gmBindRuleEthertype=%parm[#7]% 
			gmBindRuleDsapSsap=%parm[#8]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.13.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/gmHwVlanRuleTableOverloadAlert</uei>
	<event-label>ALCATEL-IND1-GROUP-MOBILITY-MIB defined trap event: gmHwVlanRuleTableOverloadAlert</event-label>
	<descr>
&lt;p&gt;An overload trap occurs whenever
a new entry to the HW vlan rule table gets dropped
due to the overload of the table.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleTable&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		macVlanTable(1)
		subnetVlanTable(2)
		protocolVlanTable(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		macPortIpBinding(1)
		macPortBinding(2)
		portProtocolBinding(3)
		macRule(4)
		macRangeRule(5)
		avlan(6)
		dot1x(7)
		ipSubnetRule(8)
		ipxNetworkRule(9)
		protocolRule(10)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleVlanId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleMacAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleIpAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleProtocol&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		ipE2(1)
		ipSnap(2)
		ipxE2(3)
		ipxNov(4)
		ipxLlc(5)
		ipxSnap(6)
		decnet(7)
		appletalk(8)
		ethertypeE2(9)
		dsapSsap(10)
		ethertypeSnap(11)
		ipv6(12)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleIpxNetwork&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			gmHwVlanRuleTableOverloadAlert trap received 
			gmOverloadRuleTable=%parm[#1]% 
			gmOverloadRuleType=%parm[#2]% 
			gmOverloadRuleVlanId=%parm[#3]% 
			gmOverloadRuleMacAddress=%parm[#4]% 
			gmOverloadRuleIpAddress=%parm[#5]% 
			gmOverloadRuleProtocol=%parm[#6]% 
			gmOverloadRuleIpxNetwork=%parm[#7]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.13.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/gmHwMixModeSubnetRuleTableOverloadAlert</uei>
	<event-label>ALCATEL-IND1-GROUP-MOBILITY-MIB defined trap event: gmHwMixModeSubnetRuleTableOverloadAlert</event-label>
	<descr>
&lt;p&gt;An subnet overload trap occurs in mixed mode whenever
a new entry to the HW subnet rule table gets dropped
in OS6800 due to the overload of the table.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmSubnetRuleTable&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleSlice&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			gmHwMixModeSubnetRuleTableOverloadAlert trap received 
			gmSubnetRuleTable=%parm[#1]% 
			gmOverloadRuleSlice=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-GROUP-MOBILITY-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-GVRP-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.36.1.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/gvrpVlanLimitReachedEvent</uei>
	<event-label>ALCATEL-IND1-GVRP-MIB defined trap event: gvrpVlanLimitReachedEvent</event-label>
	<descr>
&lt;p&gt;The number of vlans learnt dynamically by GVRP has
reached a configured limit. Notify the management
entity with number of vlans learnt dynamically by
GVRP and the configured GVRP vlan limit.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaGvrpMaxVlanLimit&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			gvrpVlanLimitReachedEvent trap received 
			alaGvrpMaxVlanLimit=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-GVRP-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-HEALTH-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/healthMonDeviceTrap</uei>
	<event-label>ALCATEL-IND1-HEALTH-MIB defined trap event: healthMonDeviceTrap</event-label>
	<descr>
&lt;p&gt;Device-level rising/falling threshold crossing trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonMemoryStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonCpuStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonCmmTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonCmmCpuTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			healthMonDeviceTrap trap received 
			healthMonRxStatus=%parm[#1]% 
			healthMonRxTxStatus=%parm[#2]% 
			healthMonMemoryStatus=%parm[#3]% 
			healthMonCpuStatus=%parm[#4]% 
			healthMonCmmTempStatus=%parm[#5]% 
			healthMonCmmCpuTempStatus=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/healthMonModuleTrap</uei>
	<event-label>ALCATEL-IND1-HEALTH-MIB defined trap event: healthMonModuleTrap</event-label>
	<descr>
&lt;p&gt;Module-level rising/falling threshold crossing trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthModuleSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonMemoryStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonCpuStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonPrimaryFabricRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonPrimaryFabricRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonSecondaryFabricRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonSecondaryFabricRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#9]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			healthMonModuleTrap trap received 
			healthModuleSlot=%parm[#1]% 
			healthMonRxStatus=%parm[#2]% 
			healthMonRxTxStatus=%parm[#3]% 
			healthMonMemoryStatus=%parm[#4]% 
			healthMonCpuStatus=%parm[#5]% 
			healthMonPrimaryFabricRxStatus=%parm[#6]% 
			healthMonPrimaryFabricRxTxStatus=%parm[#7]% 
			healthMonSecondaryFabricRxStatus=%parm[#8]% 
			healthMonSecondaryFabricRxTxStatus=%parm[#9]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/healthMonPortTrap</uei>
	<event-label>ALCATEL-IND1-HEALTH-MIB defined trap event: healthMonPortTrap</event-label>
	<descr>
&lt;p&gt;Port-level rising/falling threshold crossing trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthPortSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthPortIF&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			healthMonPortTrap trap received 
			healthPortSlot=%parm[#1]% 
			healthPortIF=%parm[#2]% 
			healthMonRxStatus=%parm[#3]% 
			healthMonRxTxStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-HEALTH-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-INLINE-POWER-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.17</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pethPwrSupplyConflict</uei>
	<event-label>ALCATEL-IND1-INLINE-POWER-MIB defined trap event: pethPwrSupplyConflict</event-label>
	<descr>
&lt;p&gt;Power supply type conflict trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pethSourceSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pethPwrSupplyConflict trap received 
			pethSourceSlot=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.17</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pethPwrSupplyNotSupported</uei>
	<event-label>ALCATEL-IND1-INLINE-POWER-MIB defined trap event: pethPwrSupplyNotSupported</event-label>
	<descr>
&lt;p&gt;Power supply not supported trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pethSourceSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pethPwrSupplyNotSupported trap received 
			pethSourceSlot=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-INLINE-POWER-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-INTERSWITCH-PROTOCOL-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/aipAMAPStatusTrap</uei>
	<event-label>ALCATEL-IND1-INTERSWITCH-PROTOCOL-MIB defined trap event: aipAMAPStatusTrap</event-label>
	<descr>
&lt;p&gt;An AMAP port status change and reason.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipAMAPLastTrapReason&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		add(1)
		change(2)
		remove(3)
		none(4)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipAMAPLastTrapPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			aipAMAPStatusTrap trap received 
			aipAMAPLastTrapReason=%parm[#1]% 
			aipAMAPLastTrapPort=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/aipGMAPConflictTrap</uei>
	<event-label>ALCATEL-IND1-INTERSWITCH-PROTOCOL-MIB defined trap event: aipGMAPConflictTrap</event-label>
	<descr>
&lt;p&gt;A GMAP update conflict.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapReason&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		authenticatedVlan(1)
		conflictingBindingRule(2)
		sameProtoDifferentVlansConflict(3)
		sameVlanDifferentProtocolsConflict(4)
		nonMobileVlan(5)
		none(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapProtocol&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapVlan&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			aipGMAPConflictTrap trap received 
			aipGMAPLastTrapReason=%parm[#1]% 
			aipGMAPLastTrapPort=%parm[#2]% 
			aipGMAPLastTrapMac=%parm[#3]% 
			aipGMAPLastTrapProtocol=%parm[#4]% 
			aipGMAPLastTrapVlan=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-INTERSWITCH-PROTOCOL-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-IP-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrap</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDrop</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-IP-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-ISIS-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisDatabaseOverload</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisDatabaseOverload</event-label>
	<descr>
&lt;p&gt;This notification is generated when the system enters or leaves the
Overload state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	isisSysL1State&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	isisSysL2State&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisDatabaseOverload trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			isisSysL1State=%parm[#2]% 
			isisSysL2State=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisManualAddressDrops</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisManualAddressDrops</event-label>
	<descr>
&lt;p&gt;This notification is generated when one of the manual areaAddresses
assigned to this system is ignored when computing routes. The object
vRtrIsisManAreaAddrExistState describes the area that has been 
dropped.

This notification is edge triggered, and should not be regenerated
until an address that was used in the previous computation has been 
dropped.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	isisManAreaAddrExistState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisManualAddressDrops trap received 
			isisManAreaAddrExistState=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisCorruptedLSPDetected</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisCorruptedLSPDetected</event-label>
	<descr>
&lt;p&gt;This notification is generated when we find that and LSP that was 
stored in memory has become corrupted.  

We forward an LSP ID. We may have independent knowledge of the ID,
but in some implementations there is a chance that the ID itself will
be corrupted.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisCorruptedLSPDetected trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisTrapLSPID=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisMaxSeqExceedAttempt</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisMaxSeqExceedAttempt</event-label>
	<descr>
&lt;p&gt;When the sequence number on an LSP we generate wraps the 32 bit
sequence counter, we purge and wait to re-announce this information.
This notification describes that event.  Since these should not be 
generated rapidly, we generate an event each time this happens.

While the first 6 bytes of the LSPID are ours, the other two contain
useful information.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisMaxSeqExceedAttempt trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisTrapLSPID=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisIDLenMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisIDLenMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with a different value of 
the System ID Length. This notification includes the an index to 
identify the circuit where we saw the PDU and the header of the PDU 
which may help a network manager identify the source of the confusion.

This should be an edge-triggered notification. We should not send a
second notification about PDUs received from what seem to be the same
source. This decision is up to the agent to make, and may be based on
the circuit or on some MAC level information.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisFieldLen&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisIDLenMismatch trap received 
			vRtrIsisFieldLen=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisPDUFragment=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>6</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisMaxAreaAddrsMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisMaxAreaAddrsMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with a different value of 
the Maximum Area Addresses.  This notification includes the header of
the packet, which may help a network manager identify the source of 
the confusion.

This should be an edge-triggered notification. We should not send a 
second notification about PDUs received from what seem to be the same
source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisMaxAreaAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisMaxAreaAddrsMismatch trap received 
			vRtrIsisMaxAreaAddress=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisPDUFragment=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>7</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisOwnLSPPurge</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisOwnLSPPurge</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with our systemID and zero
age.  This notification includes the circuit Index if available, 
which may help a network manager identify the source of the 
confusion.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisOwnLSPPurge trap received 
			vRtrIsisIfIndex=%parm[#1]% 
			vRtrIsisTrapLSPID=%parm[#2]% 
			vRtrIsisSystemLevel=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>8</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisSequenceNumberSkip</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisSequenceNumberSkip</event-label>
	<descr>
&lt;p&gt;When we recieve an LSP with out System ID and different contents, we
may need to reissue the LSP with a higher sequence number.

We send this notification if we need to increase the sequence number 
by more than one.  If two Intermediate Systems are configured with 
the same System ID, this notification will fire.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisSequenceNumberSkip trap received 
			vRtrIsisTrapLSPID=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisSystemLevel=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAutTypeFail</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAutTypeFail</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with the wrong 
authentication type field. This notification includes the header of 
the packet, which may help a network manager identify the source of 
the confusion.

This should be an edge-triggered notification. We should not send a 
second notification about PDUs received from what seem to be the 
same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAutTypeFail trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisPDUFragment=%parm[#2]% 
			vRtrIsisIfIndex=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>10</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAuthFail</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAuthFail</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with incorrent 
authentication information field. This notification includes the 
header of the packet, which may help a network manager
identify the source of the confusion.

This should be an edge-triggered notification. We should not send a 
second notification about PDUs received from what seem to be the same
source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAuthFail trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisPDUFragment=%parm[#2]% 
			vRtrIsisIfIndex=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisVersionSkew</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisVersionSkew</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a Hello
PDU from an IS running a different version
of the protocol. This notification includes
the header of the packet, which may help a
network manager identify the source of the
confusion.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from what seem to be the same source.
This decision is up to the agent to make, and may
be based on the circuit or on some MAC level
information.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisProtocolVersion&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisVersionSkew trap received 
			vRtrIsisProtocolVersion=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisPDUFragment=%parm[#3]% 
			vRtrIsisIfIndex=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAreaMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAreaMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a Hello
PDU from an IS which does not share any
area address. This notification includes
the header of the packet, which may help a
network manager identify the source of the
confusion.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from what seem to be the same source.
This decision is up to the agent to make, and may
be based on the circuit or on some MAC level
information.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisLSPSize&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAreaMismatch trap received 
			vRtrIsisLSPSize=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisIfIndex=%parm[#3]% 
			vRtrIsisPDUFragment=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>13</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisRejectedAdjacency</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisRejectedAdjacency</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a Hello
PDU from an IS, but do not establish an
adjacency due to a lack of resources.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from the same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisRejectedAdjacency trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>14</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisLSPTooLargeToPropagate</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisLSPTooLargeToPropagate</event-label>
	<descr>
&lt;p&gt;A notification sent when we attempt to propagate
an LSP which is larger than the dataLinkBlockSize
for a circuit.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from the same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisLSPSize&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisLSPTooLargeToPropagate trap received 
			vRtrIsisLSPSize=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisTrapLSPID=%parm[#3]% 
			vRtrIsisIfIndex=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>15</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisOrigLSPBufSizeMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisOrigLSPBufSizeMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when a Level 1 LSP or Level
2 LSP is received which is larger than the local
value for originatingL1LSPBufferSize or
originatingL2LSPBufferSize respectively, or when
a Level 1 LSP or Level2 LSP is received containing
the originatingLSPBufferSize option and the value in
the PDU option field does not match the local value
for originatingL1LSPBufferSize or originatingL2LSPBufferSize
respectively.  We pass up the size from the option
field or the size of the LSP that exceeds our
configuration.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from the same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisOriginatingBufferSize&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisOrigLSPBufSizeMismatch trap received 
			vRtrIsisOriginatingBufferSize=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisTrapLSPID=%parm[#3]% 
			vRtrIsisIfIndex=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>16</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisProtoSuppMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisProtoSuppMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when a non-pseudonode
segment 0 LSP is received that has no matching
protocols supported.
This may be because the system does not generate
the field, or because there are no common elements.
The list of protocols supported should be included
in the notification: it may be empty if the TLV
is not supported, or if the TLV is empty.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from the same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisProtocolsSupported&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisProtoSuppMismatch trap received 
			vRtrIsisProtocolsSupported=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisTrapLSPID=%parm[#3]% 
			vRtrIsisIfIndex=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>17</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAdjacencyChange</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAdjacencyChange</event-label>
	<descr>
&lt;p&gt;A notification sent when an adjacency changes state, 
entering or leaving state up. The first 6 bytes of the
vRtrIsisTrapLSPID are the SystemID of the adjacent IS.
The isisISAdjState is the new state of the adjacency.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	isisISAdjState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAdjacencyChange trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisTrapLSPID=%parm[#3]% 
			isisISAdjState=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>18</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisCircIdExhausted</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisCircIdExhausted</event-label>
	<descr>
&lt;p&gt;A notification sent when ISIS cannot be started on a 
LAN interface as a unique circid could not be assigned
due to the exhaustion of the circId space.

This could happen only on the broadcast interfaces.

In such a case the interface is marked operationally 
down. When an operationally up interface is deleted, the 
circId can be reused by any interface which is waiting to
receive a unique circId.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisCircIdExhausted trap received 
			vRtrIsisIfIndex=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>19</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAdjRestartStatusChange</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAdjRestartStatusChange</event-label>
	<descr>
&lt;p&gt;A notification sent when an adjancency's
graceful restart status changes.
The vRtrIsisISAdjRestartStatus is the new 
graceful restart state of the adjacency.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisISAdjRestartStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		notHelping(1)
		restarting(2)
		restart-complete(3)
		helping(4)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAdjRestartStatusChange trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisISAdjRestartStatus=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-ISIS-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-LAG-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggAggUp</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggAggUp</event-label>
	<descr>
&lt;p&gt;The Link Aggregation  is  active .
This trap is sent when any one port of the link aggregation 
	goes to attached state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggAggUp trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggAggDown</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggAggDown</event-label>
	<descr>
&lt;p&gt;The Link Aggregation  is  not active .
This trap is sent when all  ports of the link aggregation 
	goes out of attached state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggAggDown trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggPortJoin</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggPortJoin</event-label>
	<descr>
&lt;p&gt;The Link Aggregation port  joins  the aggregate .
This trap is sent when given  port of the link aggregation 
	goes to attached state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggPortJoin trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggPortLeave</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggPortLeave</event-label>
	<descr>
&lt;p&gt;The Link Aggregation port  leaves  the aggregate .
This trap is sent when given  port of the link aggregation 
	goes out of  attached state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggPortLeave trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggPortRemove</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggPortRemove</event-label>
	<descr>
&lt;p&gt;The Link Aggregation port removed from the aggregate  .
This trap is sent when given  port of the link aggregation 
	removed due to invalid configuration .&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggPortRemove trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-LAG-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-LPS-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.9.0.2.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lpsViolationTrap</uei>
	<event-label>ALCATEL-IND1-LPS-MIB defined trap event: lpsViolationTrap</event-label>
	<descr>
&lt;p&gt;Learned Port Security Violation Trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchSlice&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapViolatingMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapViolationType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		learnWindowExpired(1)
		macOutOfRange(2)
		macsLearnLimitReached(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesDate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lpsViolationTrap trap received 
			lpsTrapSwitchName=%parm[#1]% 
			lpsTrapSwitchIpAddr=%parm[#2]% 
			lpsTrapSwitchSlice=%parm[#3]% 
			lpsTrapSwitchPort=%parm[#4]% 
			lpsTrapViolatingMac=%parm[#5]% 
			lpsTrapViolationType=%parm[#6]% 
			systemServicesDate=%parm[#7]% 
			systemServicesTime=%parm[#8]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.9.0.2.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lpsPortUpAfterLearningWindowExpiredTrap</uei>
	<event-label>ALCATEL-IND1-LPS-MIB defined trap event: lpsPortUpAfterLearningWindowExpiredTrap</event-label>
	<descr>
&lt;p&gt;When an LPS port joins or is enabled after the Learning Window is expired,
the MAC address learning on the port will be disabled, and this trap is 
generated as a notification. This trap will also be generated at the time
 the Learning Window expires, with a slice and port value of 0&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchSlice&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesDate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lpsPortUpAfterLearningWindowExpiredTrap trap received 
			lpsTrapSwitchName=%parm[#1]% 
			lpsTrapSwitchSlice=%parm[#2]% 
			lpsTrapSwitchPort=%parm[#3]% 
			systemServicesDate=%parm[#4]% 
			systemServicesTime=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.9.0.2.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lpsLearnMac</uei>
	<event-label>ALCATEL-IND1-LPS-MIB defined trap event: lpsLearnMac</event-label>
	<descr>
&lt;p&gt;When an LPS port learns a bridged MAC, this trap will be generated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchSlice&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchVlan&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesDate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lpsLearnMac trap received 
			lpsTrapSwitchName=%parm[#1]% 
			lpsTrapSwitchSlice=%parm[#2]% 
			lpsTrapSwitchPort=%parm[#3]% 
			lpsTrapSwitchVlan=%parm[#4]% 
			systemServicesDate=%parm[#5]% 
			systemServicesTime=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-LPS-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-MAC-ADDRESS-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.9</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/slPCAMStatusTrap</uei>
	<event-label>ALCATEL-IND1-MAC-ADDRESS-MIB defined trap event: slPCAMStatusTrap</event-label>
	<descr>
&lt;p&gt;Trap Status of Layer 2 pesudoCAM on this Coronado.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slPCAMSlotNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slPCAMSliceNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slPCAMStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		lowWaterMark(1)
		highWaterMark(2)
		floodWaterMark(3)
		full(4)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			slPCAMStatusTrap trap received 
			slPCAMSlotNumber=%parm[#1]% 
			slPCAMSliceNumber=%parm[#2]% 
			slPCAMStatus=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-MAC-ADDRESS-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-NETSEC-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.20.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaNetSecPortTrapAnomaly</uei>
	<event-label>ALCATEL-IND1-NETSEC-MIB defined trap event: alaNetSecPortTrapAnomaly</event-label>
	<descr>
&lt;p&gt;Trap for an anomaly detected on a port.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaNetSecPortTrapInfoIfId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaNetSecPortTrapInfoAnomaly&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		all(0)
		arpaddressscan(1)
		arpflood(2)
		reserved(3)
		arpfailure(4)
		icmpaddressscan(5)
		icmpflood(6)
		icmpunreachable(7)
		tcpportscan(8)
		tcpaddressscan(9)
		synflood(10)
		synfailure(11)
		synackscan(12)
		finscan(13)
		finackdiff(14)
		rstcount(15)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaNetSecPortTrapInfoType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		source(2)
		target(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaNetSecPortTrapAnomaly trap received 
			alaNetSecPortTrapInfoIfId=%parm[#1]% 
			alaNetSecPortTrapInfoAnomaly=%parm[#2]% 
			alaNetSecPortTrapInfoType=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.20.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaNetSecPortTrapQuarantine</uei>
	<event-label>ALCATEL-IND1-NETSEC-MIB defined trap event: alaNetSecPortTrapQuarantine</event-label>
	<descr>
&lt;p&gt;Trap for an anomalous port quarantine.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaNetSecPortTrapInfoIfId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaNetSecPortTrapQuarantine trap received 
			alaNetSecPortTrapInfoIfId=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-NETSEC-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-PIM-BSR-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimBsrElectedBSRLostElection</uei>
	<event-label>ALCATEL-IND1-PIM-BSR-MIB defined trap event: alaPimBsrElectedBSRLostElection</event-label>
	<descr>
&lt;p&gt;A alaPimBsrElectedBSRLostElection trap should be generated
when current E-BSR lost election to a new Candidate BSR current E-BSR, 
start sending BootStrap Messages. Only an E-BSR should generate this trap.

This notification is generated when
alaPimBsrCandidateBSRElectedBSR becomes FALSE.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimBsrCandidateBSRElectedBSR&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		true(1)
		false(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimBsrElectedBSRLostElection trap received 
			alaPimBsrCandidateBSRElectedBSR=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimBsrCandidateBSRWinElection</uei>
	<event-label>ALCATEL-IND1-PIM-BSR-MIB defined trap event: alaPimBsrCandidateBSRWinElection</event-label>
	<descr>
&lt;p&gt;A alaPimBsrCandidateBSRWinElection trap should be generated
when a C-BSR wins BSR Election. Only an E-BSR should
generate this trap.

This notification is generated when
alaPimBsrCandidateBSRElectedBSR becomes TRUE&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimBsrCandidateBSRElectedBSR&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		true(1)
		false(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimBsrCandidateBSRWinElection trap received 
			alaPimBsrCandidateBSRElectedBSR=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-PIM-BSR-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-PIM-STD-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimNeighborLoss</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimNeighborLoss</event-label>
	<descr>
&lt;p&gt;A alaPimNeighborLoss notification signifies the loss of an 
adjacency with a neighbor.  This notification should be 
generated when the neighbor timer expires, and the router 
has no other neighbors on the same interface with the same 
IP version and a lower IP address than itself.

This notification is generated whenever the counter
alaPimNeighborLossCount is incremented, subject
to the rate limit specified by 
alaPimNeighborLossNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimNeighborUpTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimNeighborLoss trap received 
			alaPimNeighborUpTime=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimInvalidRegister</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimInvalidRegister</event-label>
	<descr>
&lt;p&gt;A alaPimInvalidRegister notification signifies that an invalid 
PIM Register message was received by this device.

This notification is generated whenever the counter
alaPimInvalidRegisterMsgsRcvd is incremented, subject to the
rate limit specified by 
alaPimInvalidRegisterNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimGroupMappingPimMode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		none(1)
		ssm(2)
		asm(3)
		bidir(4)
		dm(5)
		other(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidRegisterAddressType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknown(0)
		ipv4(1)
		ipv6(2)
		ipv4z(3)
		ipv6z(4)
		dns(16)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidRegisterOrigin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidRegisterGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidRegisterRp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimInvalidRegister trap received 
			alaPimGroupMappingPimMode=%parm[#1]% 
			alaPimInvalidRegisterAddressType=%parm[#2]% 
			alaPimInvalidRegisterOrigin=%parm[#3]% 
			alaPimInvalidRegisterGroup=%parm[#4]% 
			alaPimInvalidRegisterRp=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimInvalidJoinPrune</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimInvalidJoinPrune</event-label>
	<descr>
&lt;p&gt;A alaPimInvalidJoinPrune notification signifies that an 
invalid PIM Join/Prune message was received by this device.

This notification is generated whenever the counter
alaPimInvalidJoinPruneMsgsRcvd is incremented, subject to the
rate limit specified by 
alaPimInvalidJoinPruneNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimGroupMappingPimMode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		none(1)
		ssm(2)
		asm(3)
		bidir(4)
		dm(5)
		other(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidJoinPruneAddressType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknown(0)
		ipv4(1)
		ipv6(2)
		ipv4z(3)
		ipv6z(4)
		dns(16)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidJoinPruneOrigin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidJoinPruneGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidJoinPruneRp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimNeighborUpTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimInvalidJoinPrune trap received 
			alaPimGroupMappingPimMode=%parm[#1]% 
			alaPimInvalidJoinPruneAddressType=%parm[#2]% 
			alaPimInvalidJoinPruneOrigin=%parm[#3]% 
			alaPimInvalidJoinPruneGroup=%parm[#4]% 
			alaPimInvalidJoinPruneRp=%parm[#5]% 
			alaPimNeighborUpTime=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimRPMappingChange</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimRPMappingChange</event-label>
	<descr>
&lt;p&gt;A alaPimRPMappingChange notification signifies a change to the 
active RP mapping on this device.

This notification is generated whenever the counter
alaPimRPMappingChangeCount is incremented, subject to the
rate limit specified by 
alaPimRPMappingChangeNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimGroupMappingPimMode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		none(1)
		ssm(2)
		asm(3)
		bidir(4)
		dm(5)
		other(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimGroupMappingPrecedence&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimRPMappingChange trap received 
			alaPimGroupMappingPimMode=%parm[#1]% 
			alaPimGroupMappingPrecedence=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimInterfaceElection</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimInterfaceElection</event-label>
	<descr>
&lt;p&gt;A alaPimInterfaceElection notification signifies that a new DR 
or DR has been elected on a network.

This notification is generated whenever the counter
alaPimInterfaceElectionsWinCount is incremented, subject to the
rate limit specified by 
alaPimInterfaceElectionNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInterfaceAddressType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknown(0)
		ipv4(1)
		ipv6(2)
		ipv4z(3)
		ipv6z(4)
		dns(16)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInterfaceAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimInterfaceElection trap received 
			alaPimInterfaceAddressType=%parm[#1]% 
			alaPimInterfaceAddress=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-PIM-STD-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-POLICY-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.3.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/policyEventNotification</uei>
	<event-label>ALCATEL-IND1-POLICY-MIB defined trap event: policyEventNotification</event-label>
	<descr>
&lt;p&gt;The policyEventNotification allows the switch to notify an NMS when 
significant events happen. The NMS can then investigate and perform 
appropriate control functions.  Other tables allow the NMS app to 
zone in on the problem as part of a proactive monitoring system by the 
NMS application. &lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	policyTrapEventDetailString&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	policyTrapEventCode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		pyEventInitLog(1)
		pyEventLdapInit(2)
		pyEventLdapSearch(3)
		pyEventTooManyRequests(4)
		pyEventServerStateChange(5)
		pyEventLdapSyntaxSourceAddr(6)
		pyEventLdapSyntaxDestAddr(7)
		pyEventLdapSyntaxInDSByte(8)
		pyEventLdapSyntaxRecDSByte(9)
		pyEventLdapSyntaxPVPMonth(10)
		pyEventLdapSyntaxPVPDoW(11)
		pyEventLdapSyntaxPVPToD(12)
		pyEventLdapSyntaxPVPTime(13)
		pyEventLdapSyntaxSPort(14)
		pyEventLdapSyntaxDPort(15)
		pyEventLdapReferenceTP(16)
		pyEventLdapReferencePVP(17)
		pyEventInternalCodeError(18)
		pyEventLdapSelectError(19)
		pyEventLdapReferenceXYLAN(20)
		pyEventDebugMemoryAlloc(21)
		pyEventDebugMemoryFree(22)
		pyEventPolicyCacheFlushed(23)
		pyEventLdapServerDefined(24)
		pyEventLdapSyntaxSourceMACAddr(25)
		pyEventLdapSyntaxDestMACAddr(26)
		pyEventLdapServerDeleted(27)
		pyEventOptimizedPvpMonth(28)
		pyEventOptimizedPvpDoW(29)
		pyEventZeroPvpMonth(30)
		pyEventZeroPvpDoW(31)
		pyEventRuleScope(32)
		pyEventRuleActivated(33)
		pyEventRuleDeactivated(34)
		pyEventLdapReferenceIPFilter(35)
		pyEventLdapSyntaxTOSByte(36)
		pyEventTimeChangeDetected(37)
		pyEventPolicyWillNeverBeValid(38)
		pyEventLdapSetOption(39)
		pyEventLdapTLSChannelInit(40)
		pyEventLdapTLSParametersOK(41)
		pyEventMaxPolicyCountReached(42)
		pyEventMemoryError(43)
		pyEventMonitorSocketError(44)
		pyEventDispositionError(45)
		pyEventNameLengthError(46)
		pyEventTableResize(47)
		pyEvent48(48)
		pyEvent49(49)
		pyEvent50(50)
		pyEvent51(51)
		pyEvent52(52)
		pyEvent53(53)
		pyEvent54(54)
		pyEvent55(55)
		pyEvent56(56)
		pyEvent57(57)
		pyEventPolicyCacheLoaded(58)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			policyEventNotification trap received 
			policyTrapEventDetailString=%parm[#1]% 
			policyTrapEventCode=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-POLICY-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-PORT-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.6</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/esmDrvTrapDropsLink</uei>
	<event-label>ALCATEL-IND1-PORT-MIB defined trap event: esmDrvTrapDropsLink</event-label>
	<descr>
&lt;p&gt;When the Ethernet code drops the link because of
excessive errors, a Trap is sent.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	esmPortSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	esmPortIF&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	ifInErrors&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	ifOutErrors&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	esmDrvTrapDrops&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			esmDrvTrapDropsLink trap received 
			esmPortSlot=%parm[#1]% 
			esmPortIF=%parm[#2]% 
			ifInErrors=%parm[#3]% 
			ifOutErrors=%parm[#4]% 
			esmDrvTrapDrops=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-PORT-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.8</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/mirrorConfigError</uei>
	<event-label>ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB defined trap event: mirrorConfigError</event-label>
	<descr>
&lt;p&gt;The Mirroring Configuration failed on NI.
This trap is sent when any NI fails to configure mirroring.			
Due to this error, port mirroring session will be terminated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimarySlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimaryPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirroringSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirroringPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirMonErrorNi&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirMonError&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		other(1)
		wrongSession(2)
		hwQError(3)
		swQError(4)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			mirrorConfigError trap received 
			mirmonPrimarySlot=%parm[#1]% 
			mirmonPrimaryPort=%parm[#2]% 
			mirroringSlot=%parm[#3]% 
			mirroringPort=%parm[#4]% 
			mirMonErrorNi=%parm[#5]% 
			mirMonError=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.8</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/monitorFileWritten</uei>
	<event-label>ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB defined trap event: monitorFileWritten</event-label>
	<descr>
&lt;p&gt;A File Written Trap is sent when the amount of data requested
by the user has been written by the port monitoring instance.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimarySlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimaryPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	monitorFileName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	monitorFileSize&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			monitorFileWritten trap received 
			mirmonPrimarySlot=%parm[#1]% 
			mirmonPrimaryPort=%parm[#2]% 
			monitorFileName=%parm[#3]% 
			monitorFileSize=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.8</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/mirrorUnlikeNi</uei>
	<event-label>ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB defined trap event: mirrorUnlikeNi</event-label>
	<descr>
&lt;p&gt; The Mirroring Configuration is deleted due to the swapping of different 
NI board type. Port Mirroring session which was active on a slot,cannot 
continue with the insertion of different NI type in the same slot. &lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimarySlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimaryPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirroringSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirroringPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirMonErrorNi&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			mirrorUnlikeNi trap received 
			mirmonPrimarySlot=%parm[#1]% 
			mirmonPrimaryPort=%parm[#2]% 
			mirroringSlot=%parm[#3]% 
			mirroringPort=%parm[#4]% 
			mirMonErrorNi=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-SESSION-MGR-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.11.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/sessionAuthenticationTrap</uei>
	<event-label>ALCATEL-IND1-SESSION-MGR-MIB defined trap event: sessionAuthenticationTrap</event-label>
	<descr>
&lt;p&gt;Authentication Failure Trap is sent each time a user
authentication is refused.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	sessionAccessType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		console(1)
		telnet(2)
		ftp(3)
		http(4)
		ssh(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	sessionUserName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	sessionUserIpAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	sessionAuthFailure&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknownUser(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			sessionAuthenticationTrap trap received 
			sessionAccessType=%parm[#1]% 
			sessionUserName=%parm[#2]% 
			sessionUserIpAddress=%parm[#3]% 
			sessionAuthFailure=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-SESSION-MGR-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-SLB-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.10.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/slbTrapException</uei>
	<event-label>ALCATEL-IND1-SLB-MIB defined trap event: slbTrapException</event-label>
	<descr>
&lt;p&gt;Software exception in SLB module.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoException&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			slbTrapException trap received 
			slbTrapInfoException=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.10.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/slbTrapConfigChanged</uei>
	<event-label>ALCATEL-IND1-SLB-MIB defined trap event: slbTrapConfigChanged</event-label>
	<descr>
&lt;p&gt;A change occured in SLB configuration.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoEntityGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		slb(1)
		cluster(2)
		server(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoClusterName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoServerIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			slbTrapConfigChanged trap received 
			slbTrapInfoEntityGroup=%parm[#1]% 
			slbTrapInfoClusterName=%parm[#2]% 
			slbTrapInfoServerIpAddr=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.10.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/slbTrapOperStatus</uei>
	<event-label>ALCATEL-IND1-SLB-MIB defined trap event: slbTrapOperStatus</event-label>
	<descr>
&lt;p&gt;A change occured in the operational status of a slb entity.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoEntityGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		slb(1)
		cluster(2)
		server(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoOperStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		outOfService(1)
		inService(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoClusterName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoServerIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			slbTrapOperStatus trap received 
			slbTrapInfoEntityGroup=%parm[#1]% 
			slbTrapInfoOperStatus=%parm[#2]% 
			slbTrapInfoClusterName=%parm[#3]% 
			slbTrapInfoServerIpAddr=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-SLB-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-STACK-MANAGER-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrDuplicateSlotTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrDuplicateSlotTrap</event-label>
	<descr>
&lt;p&gt;The element specified by alaStackMgrSlotNINumber has the same slot number of
another element of the stack and it must relinquish its operational status
because it has a higher election key (up time, slot, mac).
The elements will be put in pass through mode.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrDuplicateSlotTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrNeighborChangeTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrNeighborChangeTrap</event-label>
	<descr>
&lt;p&gt;Indicates whether the stack is in loop or not.
In case of no loop, alaStackMgrSlotNINumber and alaStackMgrTrapLinkNumber
indicate where the Stack is broken&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrStackStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		loop(1)
		noloop(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrTrapLinkNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		linkA(1)
		linkB(2)
		linkA25(25)
		linkB26(26)
		linkA27(27)
		linkB28(28)
		linkA29(29)
		linkB30(30)
		linkA31(31)
		linkB32(32)
		linkA51(51)
		linkB52(52)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrNeighborChangeTrap trap received 
			alaStackMgrStackStatus=%parm[#1]% 
			alaStackMgrSlotNINumber=%parm[#2]% 
			alaStackMgrTrapLinkNumber=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrRoleChangeTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrRoleChangeTrap</event-label>
	<descr>
&lt;p&gt; Role Change Trap. Indicates that a new primary or secondary is elected.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrPrimary&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSecondary&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrRoleChangeTrap trap received 
			alaStackMgrPrimary=%parm[#1]% 
			alaStackMgrSecondary=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrDuplicateRoleTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrDuplicateRoleTrap</event-label>
	<descr>
&lt;p&gt;The element identified by alaStackMgrSlotNINumber detected the presence of
two elements with the same primary or secondary role as specified by
alaStackMgrChasRole on the stack.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrChasRole&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unassigned(0)
		primary(1)
		secondary(2)
		idle(3)
		standalone(4)
		passthrough(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrDuplicateRoleTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]% 
			alaStackMgrChasRole=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrClearedSlotTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrClearedSlotTrap</event-label>
	<descr>
&lt;p&gt;The element identified by alaStackMgrSlotNINumber will enter the pass through 
mode because its operational slot was cleared with immediate effect.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrClearedSlotTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>6</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrOutOfSlotsTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrOutOfSlotsTrap</event-label>
	<descr>
&lt;p&gt;One element of the stack will enter the pass through mode because there 
are no slot numbers available to be assigned to this element.&lt;/p&gt;&lt;table&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrOutOfSlotsTrap trap received&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>7</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrOutOfTokensTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrOutOfTokensTrap</event-label>
	<descr>
&lt;p&gt;The element identified by alaStackMgrSlotNINumber will enter the pass through
mode because there are no tokens available to be assigned to this element.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrOutOfTokensTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>8</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrOutOfPassThruSlotsTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrOutOfPassThruSlotsTrap</event-label>
	<descr>
&lt;p&gt;There are no pass through slots available to be assigned to an element
that is supposed to enter the pass through mode.&lt;/p&gt;&lt;table&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrOutOfPassThruSlotsTrap trap received&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrBadMixTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrBadMixTrap</event-label>
	<descr>
&lt;p&gt;The element identified by alaStackMgrSlotNINumber will enter the pass through
mode because it is not compatible with the existing stack.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrBadMixTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-STACK-MANAGER-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-TRAP-MGR-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.12</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/trapAbsorptionTrap</uei>
	<event-label>ALCATEL-IND1-TRAP-MGR-MIB defined trap event: trapAbsorptionTrap</event-label>
	<descr>
&lt;p&gt;The absorption Trap is sent when a trap has been
absorbed at least once.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	trapAbsorStamp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	trapAbsorTrapId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	trapAbsorCounter&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	trapAbsorTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			trapAbsorptionTrap trap received 
			trapAbsorStamp=%parm[#1]% 
			trapAbsorTrapId=%parm[#2]% 
			trapAbsorCounter=%parm[#3]% 
			trapAbsorTime=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-TRAP-MGR-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-UDLD-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.44.1.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/udldStateChange</uei>
	<event-label>ALCATEL-IND1-UDLD-MIB defined trap event: udldStateChange</event-label>
	<descr>
&lt;p&gt;The UDLD-state of port has changed. Notify the user by
raising the Trap. Notify the Management Entity the previous 
 UDLD-state and UDLD-Current.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaUdldPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaUdldPrevState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		notapplicable(0)
		shutdown(1)
		undetermined(2)
		bidirectional(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaUdldCurrentState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		notapplicable(0)
		shutdown(1)
		undetermined(2)
		bidirectional(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			udldStateChange trap received 
			alaUdldPortIfIndex=%parm[#1]% 
			alaUdldPrevState=%parm[#2]% 
			alaUdldCurrentState=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-UDLD-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-VLAN-STP-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.7</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/stpNewRoot</uei>
	<event-label>ALCATEL-IND1-VLAN-STP-MIB defined trap event: stpNewRoot</event-label>
	<descr>
&lt;p&gt;The NewRoot trap indicates that the bridge has
become the new root for this Spanning Tree instance;
 the trap is sent by a bridge soon after its election
as the new root, upon expiration of the
Topology Change Timer immediately subsequent to
its election.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vStpNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			stpNewRoot trap received 
			vStpNumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.7</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/stpRootPortChange</uei>
	<event-label>ALCATEL-IND1-VLAN-STP-MIB defined trap event: stpRootPortChange</event-label>
	<descr>
&lt;p&gt;A RootPortChange trap is sent for a Spannnig Tree
instance by a bridge when its root port has changed.
 The root port is the port which offers the
 lowest cost path from this bridge to the root
 bridge.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vStpNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vStpRootPortNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			stpRootPortChange trap received 
			vStpNumber=%parm[#1]% 
			vStpRootPortNumber=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-VLAN-STP-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-VRRP3-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.28.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaVrrp3TrapNewMaster</uei>
	<event-label>ALCATEL-IND1-VRRP3-MIB defined trap event: alaVrrp3TrapNewMaster</event-label>
	<descr>
&lt;p&gt;The newMaster trap indicates that the sending agent
has transitioned to 'Master' state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaVrrp3OperMasterIpAddrType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknown(0)
		ipv4(1)
		ipv6(2)
		ipv4z(3)
		ipv6z(4)
		dns(16)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaVrrp3OperMasterIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaVrrp3TrapNewMasterReason&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		priority(0)
		preempted(1)
		masterNoResponse(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaVrrp3TrapNewMaster trap received 
			alaVrrp3OperMasterIpAddrType=%parm[#1]% 
			alaVrrp3OperMasterIpAddr=%parm[#2]% 
			alaVrrp3TrapNewMasterReason=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.28.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaVrrp3TrapProtoError</uei>
	<event-label>ALCATEL-IND1-VRRP3-MIB defined trap event: alaVrrp3TrapProtoError</event-label>
	<descr>
&lt;p&gt;The error trap indicates that the sending agent has
encountered the protocol error indicated by
ErrorReason.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaVrrp3TrapProtoErrReason&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		hopLimitError(0)
		versionError(1)
		checksumError(2)
		vridError(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaVrrp3TrapProtoError trap received 
			alaVrrp3TrapProtoErrReason=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-VRRP3-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-WCCP-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.18.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/wccpTrapOperStatus</uei>
	<event-label>ALCATEL-IND1-WCCP-MIB defined trap event: wccpTrapOperStatus</event-label>
	<descr>
&lt;p&gt;A change occured in the operational status of a wccp entity.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	wccpTrapInfoEntityGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		wccp(1)
		service(2)
		webcache(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	wccpTrapInfoOperStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		outOfService(1)
		inService(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	wccpTrapInfoServiceId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	wccpTrapInfoWebCacheIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			wccpTrapOperStatus trap received 
			wccpTrapInfoEntityGroup=%parm[#1]% 
			wccpTrapInfoOperStatus=%parm[#2]% 
			wccpTrapInfoServiceId=%parm[#3]% 
			wccpTrapInfoWebCacheIpAddr=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-WCCP-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-WEBMGT-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.11.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/httpServerDoSAttackTrap</uei>
	<event-label>ALCATEL-IND1-WEBMGT-MIB defined trap event: httpServerDoSAttackTrap</event-label>
	<descr>
&lt;p&gt;This trap is sent to management station(s) when the
HTTP server is under Denial of Service attack. The HTTP
and HTTPS connections are sampled at a 15 second
interval. This trap is sent every 1 minute while the HTTP
server detects it is under attack.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	httpConnectionStats&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	httpsConnectionStats&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	httpServerDoSAttackSrcIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			httpServerDoSAttackTrap trap received 
			httpConnectionStats=%parm[#1]% 
			httpsConnectionStats=%parm[#2]% 
			httpServerDoSAttackSrcIp=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-WEBMGT-MIB -->
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>1</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertRunningWorking</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - runningWorking</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>2</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertRunningCertified</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - runningCertified</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>3</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcertifyStarted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - certifyStarted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>4</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcertifyFlashSyncStarted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - certifyFlashSyncStarted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>5</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcertifyCompleted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - certifyCompleted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>6</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcertifyFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - certifyFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>7</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsynchroStarted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - synchroStarted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>8</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsynchroCompleted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - synchroCompleted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>9</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsynchroFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - synchroFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>10</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertrestoreStarted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - restoreStarted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>3</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertrestoreCompleted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - restoreCompleted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>12</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertrestoreFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - restoreFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>13</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlerttakeoverStarted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - takeoverStarted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>14</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlerttakeoverDeferred</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - takeoverDeferred</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>15</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlerttakeoverCompleted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - takeoverCompleted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>16</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertmacAllocFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - macAllocFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>17</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertmacRangeFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - macRangeFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>18</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertfanFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - fanFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>19</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertfanOk</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - fanOk</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>20</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertfansOk</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - fansOk</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>21</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlerttempOverThreshold</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - tempOverThreshold</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>22</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlerttempUnderThreshold</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - tempUnderThreshold</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>23</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlerttempOverDangerThreshold</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - tempOverDangerThreshold</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>24</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertpowerMissing</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - powerMissing</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>25</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcertifyStarted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - psNotOperational</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>26</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertpsOperational</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - psOperational</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>27</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertpsAllOperational</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - psAllOperational</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>28</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertredundancyNotSupported</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - redundancyNotSupported</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>29</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertredundancyDisabledCertifyNeeded</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - redundancyDisabledCertifyNeeded</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>30</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcmmStartingAsPrimary</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - cmmStartingAsPrimary</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>31</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcmmStartingAsSecondary</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - cmmStartingAsSecondary</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>32</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcmmStartupCompleted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - cmmStartupCompleted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>33</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcmmAPlugged</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - cmmAPlugged</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>34</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcmmBPlugged</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - cmmBPlugged</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>35</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcmmAUnPlugged</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - cmmAUnPlugged</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>36</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertcmmBUnPlugged</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - cmmBUnPlugged</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>37</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertlowNvramBattery</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - lowNvramBattery</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>38</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertnotEnoughFabricsOperational</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - notEnoughFabricsOperational</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>39</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsimplexNoSynchro</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - simplexNoSynchro</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>40</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsecAutoActivate</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - secAutoActivate</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>41</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsecAutoCertifyStarted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - secAutoCertifyStarted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>42</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsecAutoCertifyCompleted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - secAutoCertifyCompleted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>43</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsecInactiveReset</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - secInactiveReset</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>44</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertactivateScheduled</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - activateScheduled</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>45</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertactivateStarted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - activateStarted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>46</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertgetAfileCompleted</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - getAfileCompleted</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>47</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertgetAfileFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - getAfileFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>48</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsysUpdateStart</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - sysUpdateStart</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>49</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsysUpdateInProgress</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - sysUpdateInProgress</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>50</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsysUpdateError</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - sysUpdateError</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>51</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertsysUpdateEnd</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - sysUpdateEnd</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>52</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertreloadInProgress</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - reloadInProgress</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>53</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertc20UpgradeOk</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - c20UpgradeOk</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>54</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertc20UpgradeFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - c20UpgradeFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>55</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertc20RestoreOk</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - c20RestoreOk</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>56</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertc20RestoreFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - c20RestoreFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>
<event>
        <mask>
                <maskelement>
                        <mename>id</mename>
                        <mevalue>.1.3.6.1.4.1.6486.800.1.3.2.4.1</mevalue>
                </maskelement>
                <maskelement>
                        <mename>generic</mename>
                        <mevalue>6</mevalue>
                </maskelement>
                <maskelement>
                        <mename>specific</mename>
                        <mevalue>2</mevalue>
                </maskelement>
                <varbind>
                        <vbnumber>4</vbnumber>
                        <vbvalue>57</vbvalue>
                </varbind>
        </mask>
        <uei>uei.opennms.org/vendor/alcatellucent/traps/chassisTrapsAlertc20NiFailed</uei>
        <event-label>ALCATEL-IND1-CHASSIS-MIB defined trap event: chassisTrapsAlert - c20NiFailed</event-label>
        <descr>
&lt;p&gt;generic trap notifying something changed in the chassis
whatever it's a failure or not                          &lt;/p&gt;&lt;table&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        physicalIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                chassis(1)
                ni(2)
                powerSuply(3)
                fan(4)
                cmm(5)
                fabric(6)
                gbic(7)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsObjectNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
                runningWorking(1)
                runningCertified(2)
                certifyStarted(3)
                certifyFlashSyncStarted(4)
                certifyCompleted(5)
                certifyFailed(6)
                synchroStarted(7)
                synchroCompleted(8)
                synchroFailed(9)
                restoreStarted(10)
                restoreCompleted(11)
                restoreFailed(12)
                takeoverStarted(13)
                takeoverDeferred(14)
                takeoverCompleted(15)
                macAllocFailed(16)
                macRangeFailed(17)
                fanFailed(18)
                fanOk(19)
                fansOk(20)
                tempOverThreshold(21)
                tempUnderThreshold(22)
                tempOverDangerThreshold(23)
                powerMissing(24)
                psNotOperational(25)
                psOperational(26)
                psAllOperational(27)
                redundancyNotSupported(28)
                redundancyDisabledCertifyNeeded(29)
                cmmStartingAsPrimary(30)
                cmmStartingAsSecondary(31)
                cmmStartupCompleted(32)
                cmmAPlugged(33)
                cmmBPlugged(34)
                cmmAUnPlugged(35)
                cmmBUnPlugged(36)
                lowNvramBattery(37)
                notEnoughFabricsOperational(38)
                simplexNoSynchro(39)
                secAutoActivate(40)
                secAutoCertifyStarted(41)
                secAutoCertifyCompleted(42)
                secInactiveReset(43)
                activateScheduled(44)
                activateStarted(45)
                getAfileCompleted(46)
                getAfileFailed(47)
                sysUpdateStart(48)
                sysUpdateInProgress(49)
                sysUpdateError(50)
                sysUpdateEnd(51)
                reloadInProgress(52)
                c20UpgradeOk(53)
                c20UpgradeFailed(54)
                c20RestoreOk(55)
                c20RestoreFailed(56)
                c20NiFailed(57)
        &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;&lt;b&gt;

        chassisTrapsAlertDescr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
        %parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
        </descr>
                <logmsg dest='logndisplay'>&lt;p&gt;
                        chassisTrapsAlert trap received
                        physicalIndex=%parm[#1]%
                        chassisTrapsObjectType=%parm[#2]%
                        chassisTrapsObjectNumber=%parm[#3]%
                        chassisTrapsAlertNumber=%parm[#4]%
                        chassisTrapsAlertDescr=%parm[#5]%&lt;/p&gt;
                </logmsg>
        <severity>Minor</severity>
</event>



<!-- End of Events -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-GVRP-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.36.1.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/gvrpVlanLimitReachedEvent</uei>
	<event-label>ALCATEL-IND1-GVRP-MIB defined trap event: gvrpVlanLimitReachedEvent</event-label>
	<descr>
&lt;p&gt;The number of vlans learnt dynamically by GVRP has
reached a configured limit. Notify the management
entity with number of vlans learnt dynamically by
GVRP and the configured GVRP vlan limit.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaGvrpMaxVlanLimit&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			gvrpVlanLimitReachedEvent trap received 
			alaGvrpMaxVlanLimit=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-GVRP-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-GROUP-MOBILITY-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.13.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/gmBindRuleViolation</uei>
	<event-label>ALCATEL-IND1-GROUP-MOBILITY-MIB defined trap event: gmBindRuleViolation</event-label>
	<descr>
&lt;p&gt;A bind-violation trap occurs whenever
a binding rule which has been configured gets violated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		macPortIp(9)
		portIp(10)
		macIp(11)
		macPort(12)
		macPortProto(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleVlanId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleIPAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleMacAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRulePortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleProtoClass&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		ipE2(1)
		ipSnap(2)
		ipxE2(3)
		ipxNov(4)
		ipxLlc(5)
		ipxSnap(6)
		decnet(7)
		appletalk(8)
		ethertypeE2(9)
		dsapSsap(10)
		ethertypeSnap(11)
		ipv6(12)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleEthertype&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmBindRuleDsapSsap&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			gmBindRuleViolation trap received 
			gmBindRuleType=%parm[#1]% 
			gmBindRuleVlanId=%parm[#2]% 
			gmBindRuleIPAddress=%parm[#3]% 
			gmBindRuleMacAddress=%parm[#4]% 
			gmBindRulePortIfIndex=%parm[#5]% 
			gmBindRuleProtoClass=%parm[#6]% 
			gmBindRuleEthertype=%parm[#7]% 
			gmBindRuleDsapSsap=%parm[#8]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.13.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/gmHwVlanRuleTableOverloadAlert</uei>
	<event-label>ALCATEL-IND1-GROUP-MOBILITY-MIB defined trap event: gmHwVlanRuleTableOverloadAlert</event-label>
	<descr>
&lt;p&gt;An overload trap occurs whenever
a new entry to the HW vlan rule table gets dropped
due to the overload of the table.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleTable&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		macVlanTable(1)
		subnetVlanTable(2)
		protocolVlanTable(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		macPortIpBinding(1)
		macPortBinding(2)
		portProtocolBinding(3)
		macRule(4)
		macRangeRule(5)
		avlan(6)
		dot1x(7)
		ipSubnetRule(8)
		ipxNetworkRule(9)
		protocolRule(10)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleVlanId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleMacAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleIpAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleProtocol&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		ipE2(1)
		ipSnap(2)
		ipxE2(3)
		ipxNov(4)
		ipxLlc(5)
		ipxSnap(6)
		decnet(7)
		appletalk(8)
		ethertypeE2(9)
		dsapSsap(10)
		ethertypeSnap(11)
		ipv6(12)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleIpxNetwork&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			gmHwVlanRuleTableOverloadAlert trap received 
			gmOverloadRuleTable=%parm[#1]% 
			gmOverloadRuleType=%parm[#2]% 
			gmOverloadRuleVlanId=%parm[#3]% 
			gmOverloadRuleMacAddress=%parm[#4]% 
			gmOverloadRuleIpAddress=%parm[#5]% 
			gmOverloadRuleProtocol=%parm[#6]% 
			gmOverloadRuleIpxNetwork=%parm[#7]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.13.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/gmHwMixModeSubnetRuleTableOverloadAlert</uei>
	<event-label>ALCATEL-IND1-GROUP-MOBILITY-MIB defined trap event: gmHwMixModeSubnetRuleTableOverloadAlert</event-label>
	<descr>
&lt;p&gt;An subnet overload trap occurs in mixed mode whenever
a new entry to the HW subnet rule table gets dropped
in OS6800 due to the overload of the table.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmSubnetRuleTable&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	gmOverloadRuleSlice&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			gmHwMixModeSubnetRuleTableOverloadAlert trap received 
			gmSubnetRuleTable=%parm[#1]% 
			gmOverloadRuleSlice=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-GROUP-MOBILITY-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-HEALTH-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/healthMonDeviceTrap</uei>
	<event-label>ALCATEL-IND1-HEALTH-MIB defined trap event: healthMonDeviceTrap</event-label>
	<descr>
&lt;p&gt;Device-level rising/falling threshold crossing trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonMemoryStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonCpuStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonCmmTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonCmmCpuTempStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			healthMonDeviceTrap trap received 
			healthMonRxStatus=%parm[#1]% 
			healthMonRxTxStatus=%parm[#2]% 
			healthMonMemoryStatus=%parm[#3]% 
			healthMonCpuStatus=%parm[#4]% 
			healthMonCmmTempStatus=%parm[#5]% 
			healthMonCmmCpuTempStatus=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/healthMonModuleTrap</uei>
	<event-label>ALCATEL-IND1-HEALTH-MIB defined trap event: healthMonModuleTrap</event-label>
	<descr>
&lt;p&gt;Module-level rising/falling threshold crossing trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthModuleSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonMemoryStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonCpuStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonPrimaryFabricRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonPrimaryFabricRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonSecondaryFabricRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonSecondaryFabricRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#9]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			healthMonModuleTrap trap received 
			healthModuleSlot=%parm[#1]% 
			healthMonRxStatus=%parm[#2]% 
			healthMonRxTxStatus=%parm[#3]% 
			healthMonMemoryStatus=%parm[#4]% 
			healthMonCpuStatus=%parm[#5]% 
			healthMonPrimaryFabricRxStatus=%parm[#6]% 
			healthMonPrimaryFabricRxTxStatus=%parm[#7]% 
			healthMonSecondaryFabricRxStatus=%parm[#8]% 
			healthMonSecondaryFabricRxTxStatus=%parm[#9]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/healthMonPortTrap</uei>
	<event-label>ALCATEL-IND1-HEALTH-MIB defined trap event: healthMonPortTrap</event-label>
	<descr>
&lt;p&gt;Port-level rising/falling threshold crossing trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthPortSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthPortIF&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	healthMonRxTxStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		crossedBelowThreshold(1)
		noChange(2)
		crossedAboveThreshold(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			healthMonPortTrap trap received 
			healthPortSlot=%parm[#1]% 
			healthPortIF=%parm[#2]% 
			healthMonRxStatus=%parm[#3]% 
			healthMonRxTxStatus=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-HEALTH-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-IP-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>0</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrapportscan</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - Portscan</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>1</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTraptcpsyn</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - tcpsyn</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>2</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrappingofdeath</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - pingofdeath</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>3</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrapsmurf</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - smurf</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>4</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrappepsi</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - pepsi</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.6</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>5</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrapland</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - land</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>6</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrapteardropBonkBoink</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - teardropBonkBoink</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>7</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTraploopbacksrcip</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - loopbacksrcip</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>8</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrapinvalidip</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - invalidip</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>9</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSmcastmismatch</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - mcastmismatch</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>10</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrapucastipmcastmac</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - ucastipmcastmac</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>11</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTrappingattack</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - pingattack</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>12</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTraparpattack</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - arpattack</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.23.1.1.5</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>13</vbvalue>
                </varbind>

	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaDoSTraparppoison</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: alaDoSTrap - arppoison</event-label>
	<descr>
&lt;p&gt;The DoS trap indicates that the sending agent
has received DoS attack&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		portscan(0)
		tcpsyn(1)
		pingofdeath(2)
		smurf(3)
		pepsi(4)
		land(5)
		teardropBonkBoink(6)
		loopbacksrcip(7)
		invalidip(8)
		mcastmismatch(9)
		ucastipmcastmac(10)
		pingattack(11)
		arpattack(12)
		arppoison(13)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSDetected&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaDoSPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaDoSTrap trap received 
			alaDoSType=%parm[#1]% 
			alaDoSDetected=%parm[#2]% 
			alaDoSIp=%parm[#3]% 
			alaDoSMac=%parm[#4]% 
			alaDoSSlot=%parm[#5]% 
			alaDoSPort=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>0</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDropspoofedIp</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - spoofedIp</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>1</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDroptoBlockedPort</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - toBlockedPort</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>2</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDroprulematchTriggeredPortDisable</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - rulematchTriggeredPortDisable</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>3</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDropspoofTriggeredUserPortDisable</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - spoofTriggeredUserPortDisable</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>4</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDropbpduTriggeredUserPortDisable</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - bpduTriggeredUserPortDisable</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>5</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDropbgpTriggeredUserPortDisable</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - bgpTriggeredUserPortDisable</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>6</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDropospfTriggeredUserPortDisable</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - ospfTriggeredUserPortDisable</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>7</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDropripTriggeredUserPortDisable</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - ripTriggeredUserPortDisable</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.15.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
                <varbind>
                        <vbnumber>1</vbnumber>
                        <vbvalue>8</vbvalue>
                </varbind>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pktDropvrrpTriggeredUserPortDisable</uei>
	<event-label>ALCATEL-IND1-IP-MIB defined trap event: pktDrop - vrrpTriggeredUserPortDisable</event-label>
	<descr>
&lt;p&gt;The pktDrop trap indicates that the sending agent
has dropped certain packets (to blocked IP ports,
 from spoofed addresses, etc).&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		spoofedIp(0)
		toBlockedPort(1)
		rulematchTriggeredPortDisable(2)
		spoofTriggeredUserPortDisable(3)
		bpduTriggeredUserPortDisable(4)
		bgpTriggeredUserPortDisable(5)
		ospfTriggeredUserPortDisable(6)
		ripTriggeredUserPortDisable(7)
		vrrpTriggeredUserPortDisable(8)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropCount&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pktDropFrag&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pktDrop trap received 
			pktDropType=%parm[#1]% 
			pktDropIfIndex=%parm[#2]% 
			pktDropCount=%parm[#3]% 
			pktDropFrag=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>

<!-- End of auto generated data from MIB: ALCATEL-IND1-IP-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-ISIS-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisDatabaseOverload</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisDatabaseOverload</event-label>
	<descr>
&lt;p&gt;This notification is generated when the system enters or leaves the
Overload state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	isisSysL1State&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	isisSysL2State&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisDatabaseOverload trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			isisSysL1State=%parm[#2]% 
			isisSysL2State=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisManualAddressDrops</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisManualAddressDrops</event-label>
	<descr>
&lt;p&gt;This notification is generated when one of the manual areaAddresses
assigned to this system is ignored when computing routes. The object
vRtrIsisManAreaAddrExistState describes the area that has been 
dropped.

This notification is edge triggered, and should not be regenerated
until an address that was used in the previous computation has been 
dropped.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	isisManAreaAddrExistState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisManualAddressDrops trap received 
			isisManAreaAddrExistState=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisCorruptedLSPDetected</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisCorruptedLSPDetected</event-label>
	<descr>
&lt;p&gt;This notification is generated when we find that and LSP that was 
stored in memory has become corrupted.  

We forward an LSP ID. We may have independent knowledge of the ID,
but in some implementations there is a chance that the ID itself will
be corrupted.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisCorruptedLSPDetected trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisTrapLSPID=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisMaxSeqExceedAttempt</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisMaxSeqExceedAttempt</event-label>
	<descr>
&lt;p&gt;When the sequence number on an LSP we generate wraps the 32 bit
sequence counter, we purge and wait to re-announce this information.
This notification describes that event.  Since these should not be 
generated rapidly, we generate an event each time this happens.

While the first 6 bytes of the LSPID are ours, the other two contain
useful information.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisMaxSeqExceedAttempt trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisTrapLSPID=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisIDLenMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisIDLenMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with a different value of 
the System ID Length. This notification includes the an index to 
identify the circuit where we saw the PDU and the header of the PDU 
which may help a network manager identify the source of the confusion.

This should be an edge-triggered notification. We should not send a
second notification about PDUs received from what seem to be the same
source. This decision is up to the agent to make, and may be based on
the circuit or on some MAC level information.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisFieldLen&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisIDLenMismatch trap received 
			vRtrIsisFieldLen=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisPDUFragment=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>6</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisMaxAreaAddrsMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisMaxAreaAddrsMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with a different value of 
the Maximum Area Addresses.  This notification includes the header of
the packet, which may help a network manager identify the source of 
the confusion.

This should be an edge-triggered notification. We should not send a 
second notification about PDUs received from what seem to be the same
source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisMaxAreaAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisMaxAreaAddrsMismatch trap received 
			vRtrIsisMaxAreaAddress=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisPDUFragment=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>7</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisOwnLSPPurge</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisOwnLSPPurge</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with our systemID and zero
age.  This notification includes the circuit Index if available, 
which may help a network manager identify the source of the 
confusion.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisOwnLSPPurge trap received 
			vRtrIsisIfIndex=%parm[#1]% 
			vRtrIsisTrapLSPID=%parm[#2]% 
			vRtrIsisSystemLevel=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>8</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisSequenceNumberSkip</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisSequenceNumberSkip</event-label>
	<descr>
&lt;p&gt;When we recieve an LSP with out System ID and different contents, we
may need to reissue the LSP with a higher sequence number.

We send this notification if we need to increase the sequence number 
by more than one.  If two Intermediate Systems are configured with 
the same System ID, this notification will fire.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisSequenceNumberSkip trap received 
			vRtrIsisTrapLSPID=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisSystemLevel=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAutTypeFail</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAutTypeFail</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with the wrong 
authentication type field. This notification includes the header of 
the packet, which may help a network manager identify the source of 
the confusion.

This should be an edge-triggered notification. We should not send a 
second notification about PDUs received from what seem to be the 
same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAutTypeFail trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisPDUFragment=%parm[#2]% 
			vRtrIsisIfIndex=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>10</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAuthFail</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAuthFail</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a PDU with incorrent 
authentication information field. This notification includes the 
header of the packet, which may help a network manager
identify the source of the confusion.

This should be an edge-triggered notification. We should not send a 
second notification about PDUs received from what seem to be the same
source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAuthFail trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisPDUFragment=%parm[#2]% 
			vRtrIsisIfIndex=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>11</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisVersionSkew</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisVersionSkew</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a Hello
PDU from an IS running a different version
of the protocol. This notification includes
the header of the packet, which may help a
network manager identify the source of the
confusion.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from what seem to be the same source.
This decision is up to the agent to make, and may
be based on the circuit or on some MAC level
information.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisProtocolVersion&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisVersionSkew trap received 
			vRtrIsisProtocolVersion=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisPDUFragment=%parm[#3]% 
			vRtrIsisIfIndex=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>12</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAreaMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAreaMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a Hello
PDU from an IS which does not share any
area address. This notification includes
the header of the packet, which may help a
network manager identify the source of the
confusion.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from what seem to be the same source.
This decision is up to the agent to make, and may
be based on the circuit or on some MAC level
information.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisLSPSize&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisPDUFragment&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAreaMismatch trap received 
			vRtrIsisLSPSize=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisIfIndex=%parm[#3]% 
			vRtrIsisPDUFragment=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>13</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisRejectedAdjacency</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisRejectedAdjacency</event-label>
	<descr>
&lt;p&gt;A notification sent when we receive a Hello
PDU from an IS, but do not establish an
adjacency due to a lack of resources.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from the same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisRejectedAdjacency trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>14</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisLSPTooLargeToPropagate</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisLSPTooLargeToPropagate</event-label>
	<descr>
&lt;p&gt;A notification sent when we attempt to propagate
an LSP which is larger than the dataLinkBlockSize
for a circuit.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from the same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisLSPSize&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisLSPTooLargeToPropagate trap received 
			vRtrIsisLSPSize=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisTrapLSPID=%parm[#3]% 
			vRtrIsisIfIndex=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>15</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisOrigLSPBufSizeMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisOrigLSPBufSizeMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when a Level 1 LSP or Level
2 LSP is received which is larger than the local
value for originatingL1LSPBufferSize or
originatingL2LSPBufferSize respectively, or when
a Level 1 LSP or Level2 LSP is received containing
the originatingLSPBufferSize option and the value in
the PDU option field does not match the local value
for originatingL1LSPBufferSize or originatingL2LSPBufferSize
respectively.  We pass up the size from the option
field or the size of the LSP that exceeds our
configuration.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from the same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisOriginatingBufferSize&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisOrigLSPBufSizeMismatch trap received 
			vRtrIsisOriginatingBufferSize=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisTrapLSPID=%parm[#3]% 
			vRtrIsisIfIndex=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>16</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisProtoSuppMismatch</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisProtoSuppMismatch</event-label>
	<descr>
&lt;p&gt;A notification sent when a non-pseudonode
segment 0 LSP is received that has no matching
protocols supported.
This may be because the system does not generate
the field, or because there are no common elements.
The list of protocols supported should be included
in the notification: it may be empty if the TLV
is not supported, or if the TLV is empty.

This should be an edge-triggered notification.
We should not send a second notification about
PDUs received from the same source.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisProtocolsSupported&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisProtoSuppMismatch trap received 
			vRtrIsisProtocolsSupported=%parm[#1]% 
			vRtrIsisSystemLevel=%parm[#2]% 
			vRtrIsisTrapLSPID=%parm[#3]% 
			vRtrIsisIfIndex=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>17</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAdjacencyChange</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAdjacencyChange</event-label>
	<descr>
&lt;p&gt;A notification sent when an adjacency changes state, 
entering or leaving state up. The first 6 bytes of the
vRtrIsisTrapLSPID are the SystemID of the adjacent IS.
The isisISAdjState is the new state of the adjacency.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisTrapLSPID&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	isisISAdjState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAdjacencyChange trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisTrapLSPID=%parm[#3]% 
			isisISAdjState=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>18</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisCircIdExhausted</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisCircIdExhausted</event-label>
	<descr>
&lt;p&gt;A notification sent when ISIS cannot be started on a 
LAN interface as a unique circid could not be assigned
due to the exhaustion of the circId space.

This could happen only on the broadcast interfaces.

In such a case the interface is marked operationally 
down. When an operationally up interface is deleted, the 
circId can be reused by any interface which is waiting to
receive a unique circId.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisCircIdExhausted trap received 
			vRtrIsisIfIndex=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.14.1.11</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>19</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/vRtrIsisAdjRestartStatusChange</uei>
	<event-label>ALCATEL-ISIS-MIB defined trap event: vRtrIsisAdjRestartStatusChange</event-label>
	<descr>
&lt;p&gt;A notification sent when an adjancency's
graceful restart status changes.
The vRtrIsisISAdjRestartStatus is the new 
graceful restart state of the adjacency.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisSystemLevel&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		l1(1)
		l2(2)
		l1l2(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vRtrIsisISAdjRestartStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		notHelping(1)
		restarting(2)
		restart-complete(3)
		helping(4)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			vRtrIsisAdjRestartStatusChange trap received 
			vRtrIsisSystemLevel=%parm[#1]% 
			vRtrIsisIfIndex=%parm[#2]% 
			vRtrIsisISAdjRestartStatus=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-ISIS-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-INLINE-POWER-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.17</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pethPwrSupplyConflict</uei>
	<event-label>ALCATEL-IND1-INLINE-POWER-MIB defined trap event: pethPwrSupplyConflict</event-label>
	<descr>
&lt;p&gt;Power supply type conflict trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pethSourceSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pethPwrSupplyConflict trap received 
			pethSourceSlot=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.17</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/pethPwrSupplyNotSupported</uei>
	<event-label>ALCATEL-IND1-INLINE-POWER-MIB defined trap event: pethPwrSupplyNotSupported</event-label>
	<descr>
&lt;p&gt;Power supply not supported trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	pethSourceSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			pethPwrSupplyNotSupported trap received 
			pethSourceSlot=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-INLINE-POWER-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-INTERSWITCH-PROTOCOL-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/aipAMAPStatusTrap</uei>
	<event-label>ALCATEL-IND1-INTERSWITCH-PROTOCOL-MIB defined trap event: aipAMAPStatusTrap</event-label>
	<descr>
&lt;p&gt;An AMAP port status change and reason.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipAMAPLastTrapReason&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		add(1)
		change(2)
		remove(3)
		none(4)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipAMAPLastTrapPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			aipAMAPStatusTrap trap received 
			aipAMAPLastTrapReason=%parm[#1]% 
			aipAMAPLastTrapPort=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/aipGMAPConflictTrap</uei>
	<event-label>ALCATEL-IND1-INTERSWITCH-PROTOCOL-MIB defined trap event: aipGMAPConflictTrap</event-label>
	<descr>
&lt;p&gt;A GMAP update conflict.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapReason&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		authenticatedVlan(1)
		conflictingBindingRule(2)
		sameProtoDifferentVlansConflict(3)
		sameVlanDifferentProtocolsConflict(4)
		nonMobileVlan(5)
		none(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapProtocol&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	aipGMAPLastTrapVlan&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			aipGMAPConflictTrap trap received 
			aipGMAPLastTrapReason=%parm[#1]% 
			aipGMAPLastTrapPort=%parm[#2]% 
			aipGMAPLastTrapMac=%parm[#3]% 
			aipGMAPLastTrapProtocol=%parm[#4]% 
			aipGMAPLastTrapVlan=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-INTERSWITCH-PROTOCOL-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-LAG-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggAggUp</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggAggUp</event-label>
	<descr>
&lt;p&gt;The Link Aggregation  is  active .
This trap is sent when any one port of the link aggregation 
	goes to attached state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggAggUp trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggAggDown</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggAggDown</event-label>
	<descr>
&lt;p&gt;The Link Aggregation  is  not active .
This trap is sent when all  ports of the link aggregation 
	goes out of attached state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggAggDown trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggPortJoin</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggPortJoin</event-label>
	<descr>
&lt;p&gt;The Link Aggregation port  joins  the aggregate .
This trap is sent when given  port of the link aggregation 
	goes to attached state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggPortJoin trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggPortLeave</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggPortLeave</event-label>
	<descr>
&lt;p&gt;The Link Aggregation port  leaves  the aggregate .
This trap is sent when given  port of the link aggregation 
	goes out of  attached state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggPortLeave trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.14</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lnkaggPortRemove</uei>
	<event-label>ALCATEL-IND1-LAG-MIB defined trap event: lnkaggPortRemove</event-label>
	<descr>
&lt;p&gt;The Link Aggregation port removed from the aggregate  .
This trap is sent when given  port of the link aggregation 
	removed due to invalid configuration .&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggAggId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	traplnkaggPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lnkaggPortRemove trap received 
			traplnkaggAggId=%parm[#1]% 
			traplnkaggPortIfIndex=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-LAG-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-LPS-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.9.0.2.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lpsViolationTrap</uei>
	<event-label>ALCATEL-IND1-LPS-MIB defined trap event: lpsViolationTrap</event-label>
	<descr>
&lt;p&gt;Learned Port Security Violation Trap.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchSlice&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapViolatingMac&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapViolationType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		learnWindowExpired(1)
		macOutOfRange(2)
		macsLearnLimitReached(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesDate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#7]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#8]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lpsViolationTrap trap received 
			lpsTrapSwitchName=%parm[#1]% 
			lpsTrapSwitchIpAddr=%parm[#2]% 
			lpsTrapSwitchSlice=%parm[#3]% 
			lpsTrapSwitchPort=%parm[#4]% 
			lpsTrapViolatingMac=%parm[#5]% 
			lpsTrapViolationType=%parm[#6]% 
			systemServicesDate=%parm[#7]% 
			systemServicesTime=%parm[#8]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.9.0.2.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lpsPortUpAfterLearningWindowExpiredTrap</uei>
	<event-label>ALCATEL-IND1-LPS-MIB defined trap event: lpsPortUpAfterLearningWindowExpiredTrap</event-label>
	<descr>
&lt;p&gt;When an LPS port joins or is enabled after the Learning Window is expired,
the MAC address learning on the port will be disabled, and this trap is 
generated as a notification. This trap will also be generated at the time
 the Learning Window expires, with a slice and port value of 0&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchSlice&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesDate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lpsPortUpAfterLearningWindowExpiredTrap trap received 
			lpsTrapSwitchName=%parm[#1]% 
			lpsTrapSwitchSlice=%parm[#2]% 
			lpsTrapSwitchPort=%parm[#3]% 
			systemServicesDate=%parm[#4]% 
			systemServicesTime=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.9.0.2.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/lpsLearnMac</uei>
	<event-label>ALCATEL-IND1-LPS-MIB defined trap event: lpsLearnMac</event-label>
	<descr>
&lt;p&gt;When an LPS port learns a bridged MAC, this trap will be generated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchSlice&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	lpsTrapSwitchVlan&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesDate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	systemServicesTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			lpsLearnMac trap received 
			lpsTrapSwitchName=%parm[#1]% 
			lpsTrapSwitchSlice=%parm[#2]% 
			lpsTrapSwitchPort=%parm[#3]% 
			lpsTrapSwitchVlan=%parm[#4]% 
			systemServicesDate=%parm[#5]% 
			systemServicesTime=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-LPS-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-MAC-ADDRESS-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.9</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/slPCAMStatusTrap</uei>
	<event-label>ALCATEL-IND1-MAC-ADDRESS-MIB defined trap event: slPCAMStatusTrap</event-label>
	<descr>
&lt;p&gt;Trap Status of Layer 2 pesudoCAM on this Coronado.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slPCAMSlotNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slPCAMSliceNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slPCAMStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		lowWaterMark(1)
		highWaterMark(2)
		floodWaterMark(3)
		full(4)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			slPCAMStatusTrap trap received 
			slPCAMSlotNumber=%parm[#1]% 
			slPCAMSliceNumber=%parm[#2]% 
			slPCAMStatus=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-MAC-ADDRESS-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-NETSEC-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.20.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaNetSecPortTrapAnomaly</uei>
	<event-label>ALCATEL-IND1-NETSEC-MIB defined trap event: alaNetSecPortTrapAnomaly</event-label>
	<descr>
&lt;p&gt;Trap for an anomaly detected on a port.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaNetSecPortTrapInfoIfId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaNetSecPortTrapInfoAnomaly&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		all(0)
		arpaddressscan(1)
		arpflood(2)
		reserved(3)
		arpfailure(4)
		icmpaddressscan(5)
		icmpflood(6)
		icmpunreachable(7)
		tcpportscan(8)
		tcpaddressscan(9)
		synflood(10)
		synfailure(11)
		synackscan(12)
		finscan(13)
		finackdiff(14)
		rstcount(15)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaNetSecPortTrapInfoType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		source(2)
		target(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaNetSecPortTrapAnomaly trap received 
			alaNetSecPortTrapInfoIfId=%parm[#1]% 
			alaNetSecPortTrapInfoAnomaly=%parm[#2]% 
			alaNetSecPortTrapInfoType=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.20.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaNetSecPortTrapQuarantine</uei>
	<event-label>ALCATEL-IND1-NETSEC-MIB defined trap event: alaNetSecPortTrapQuarantine</event-label>
	<descr>
&lt;p&gt;Trap for an anomalous port quarantine.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaNetSecPortTrapInfoIfId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaNetSecPortTrapQuarantine trap received 
			alaNetSecPortTrapInfoIfId=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-NETSEC-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-PIM-BSR-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimBsrElectedBSRLostElection</uei>
	<event-label>ALCATEL-IND1-PIM-BSR-MIB defined trap event: alaPimBsrElectedBSRLostElection</event-label>
	<descr>
&lt;p&gt;A alaPimBsrElectedBSRLostElection trap should be generated
when current E-BSR lost election to a new Candidate BSR current E-BSR, 
start sending BootStrap Messages. Only an E-BSR should generate this trap.

This notification is generated when
alaPimBsrCandidateBSRElectedBSR becomes FALSE.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimBsrCandidateBSRElectedBSR&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		true(1)
		false(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimBsrElectedBSRLostElection trap received 
			alaPimBsrCandidateBSRElectedBSR=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimBsrCandidateBSRWinElection</uei>
	<event-label>ALCATEL-IND1-PIM-BSR-MIB defined trap event: alaPimBsrCandidateBSRWinElection</event-label>
	<descr>
&lt;p&gt;A alaPimBsrCandidateBSRWinElection trap should be generated
when a C-BSR wins BSR Election. Only an E-BSR should
generate this trap.

This notification is generated when
alaPimBsrCandidateBSRElectedBSR becomes TRUE&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimBsrCandidateBSRElectedBSR&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		true(1)
		false(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimBsrCandidateBSRWinElection trap received 
			alaPimBsrCandidateBSRElectedBSR=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-PIM-BSR-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-PIM-STD-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimNeighborLoss</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimNeighborLoss</event-label>
	<descr>
&lt;p&gt;A alaPimNeighborLoss notification signifies the loss of an 
adjacency with a neighbor.  This notification should be 
generated when the neighbor timer expires, and the router 
has no other neighbors on the same interface with the same 
IP version and a lower IP address than itself.

This notification is generated whenever the counter
alaPimNeighborLossCount is incremented, subject
to the rate limit specified by 
alaPimNeighborLossNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimNeighborUpTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimNeighborLoss trap received 
			alaPimNeighborUpTime=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimInvalidRegister</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimInvalidRegister</event-label>
	<descr>
&lt;p&gt;A alaPimInvalidRegister notification signifies that an invalid 
PIM Register message was received by this device.

This notification is generated whenever the counter
alaPimInvalidRegisterMsgsRcvd is incremented, subject to the
rate limit specified by 
alaPimInvalidRegisterNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimGroupMappingPimMode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		none(1)
		ssm(2)
		asm(3)
		bidir(4)
		dm(5)
		other(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidRegisterAddressType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknown(0)
		ipv4(1)
		ipv6(2)
		ipv4z(3)
		ipv6z(4)
		dns(16)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidRegisterOrigin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidRegisterGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidRegisterRp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimInvalidRegister trap received 
			alaPimGroupMappingPimMode=%parm[#1]% 
			alaPimInvalidRegisterAddressType=%parm[#2]% 
			alaPimInvalidRegisterOrigin=%parm[#3]% 
			alaPimInvalidRegisterGroup=%parm[#4]% 
			alaPimInvalidRegisterRp=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimInvalidJoinPrune</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimInvalidJoinPrune</event-label>
	<descr>
&lt;p&gt;A alaPimInvalidJoinPrune notification signifies that an 
invalid PIM Join/Prune message was received by this device.

This notification is generated whenever the counter
alaPimInvalidJoinPruneMsgsRcvd is incremented, subject to the
rate limit specified by 
alaPimInvalidJoinPruneNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimGroupMappingPimMode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		none(1)
		ssm(2)
		asm(3)
		bidir(4)
		dm(5)
		other(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidJoinPruneAddressType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknown(0)
		ipv4(1)
		ipv6(2)
		ipv4z(3)
		ipv6z(4)
		dns(16)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidJoinPruneOrigin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidJoinPruneGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInvalidJoinPruneRp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimNeighborUpTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimInvalidJoinPrune trap received 
			alaPimGroupMappingPimMode=%parm[#1]% 
			alaPimInvalidJoinPruneAddressType=%parm[#2]% 
			alaPimInvalidJoinPruneOrigin=%parm[#3]% 
			alaPimInvalidJoinPruneGroup=%parm[#4]% 
			alaPimInvalidJoinPruneRp=%parm[#5]% 
			alaPimNeighborUpTime=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimRPMappingChange</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimRPMappingChange</event-label>
	<descr>
&lt;p&gt;A alaPimRPMappingChange notification signifies a change to the 
active RP mapping on this device.

This notification is generated whenever the counter
alaPimRPMappingChangeCount is incremented, subject to the
rate limit specified by 
alaPimRPMappingChangeNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimGroupMappingPimMode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		none(1)
		ssm(2)
		asm(3)
		bidir(4)
		dm(5)
		other(6)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimGroupMappingPrecedence&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimRPMappingChange trap received 
			alaPimGroupMappingPimMode=%parm[#1]% 
			alaPimGroupMappingPrecedence=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.10.6.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaPimInterfaceElection</uei>
	<event-label>ALCATEL-IND1-PIM-STD-MIB defined trap event: alaPimInterfaceElection</event-label>
	<descr>
&lt;p&gt;A alaPimInterfaceElection notification signifies that a new DR 
or DR has been elected on a network.

This notification is generated whenever the counter
alaPimInterfaceElectionsWinCount is incremented, subject to the
rate limit specified by 
alaPimInterfaceElectionNotificationPeriod.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInterfaceAddressType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknown(0)
		ipv4(1)
		ipv6(2)
		ipv4z(3)
		ipv6z(4)
		dns(16)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaPimInterfaceAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaPimInterfaceElection trap received 
			alaPimInterfaceAddressType=%parm[#1]% 
			alaPimInterfaceAddress=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-PIM-STD-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-POLICY-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.3.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/policyEventNotification</uei>
	<event-label>ALCATEL-IND1-POLICY-MIB defined trap event: policyEventNotification</event-label>
	<descr>
&lt;p&gt;The policyEventNotification allows the switch to notify an NMS when 
significant events happen. The NMS can then investigate and perform 
appropriate control functions.  Other tables allow the NMS app to 
zone in on the problem as part of a proactive monitoring system by the 
NMS application. &lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	policyTrapEventDetailString&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	policyTrapEventCode&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		pyEventInitLog(1)
		pyEventLdapInit(2)
		pyEventLdapSearch(3)
		pyEventTooManyRequests(4)
		pyEventServerStateChange(5)
		pyEventLdapSyntaxSourceAddr(6)
		pyEventLdapSyntaxDestAddr(7)
		pyEventLdapSyntaxInDSByte(8)
		pyEventLdapSyntaxRecDSByte(9)
		pyEventLdapSyntaxPVPMonth(10)
		pyEventLdapSyntaxPVPDoW(11)
		pyEventLdapSyntaxPVPToD(12)
		pyEventLdapSyntaxPVPTime(13)
		pyEventLdapSyntaxSPort(14)
		pyEventLdapSyntaxDPort(15)
		pyEventLdapReferenceTP(16)
		pyEventLdapReferencePVP(17)
		pyEventInternalCodeError(18)
		pyEventLdapSelectError(19)
		pyEventLdapReferenceXYLAN(20)
		pyEventDebugMemoryAlloc(21)
		pyEventDebugMemoryFree(22)
		pyEventPolicyCacheFlushed(23)
		pyEventLdapServerDefined(24)
		pyEventLdapSyntaxSourceMACAddr(25)
		pyEventLdapSyntaxDestMACAddr(26)
		pyEventLdapServerDeleted(27)
		pyEventOptimizedPvpMonth(28)
		pyEventOptimizedPvpDoW(29)
		pyEventZeroPvpMonth(30)
		pyEventZeroPvpDoW(31)
		pyEventRuleScope(32)
		pyEventRuleActivated(33)
		pyEventRuleDeactivated(34)
		pyEventLdapReferenceIPFilter(35)
		pyEventLdapSyntaxTOSByte(36)
		pyEventTimeChangeDetected(37)
		pyEventPolicyWillNeverBeValid(38)
		pyEventLdapSetOption(39)
		pyEventLdapTLSChannelInit(40)
		pyEventLdapTLSParametersOK(41)
		pyEventMaxPolicyCountReached(42)
		pyEventMemoryError(43)
		pyEventMonitorSocketError(44)
		pyEventDispositionError(45)
		pyEventNameLengthError(46)
		pyEventTableResize(47)
		pyEvent48(48)
		pyEvent49(49)
		pyEvent50(50)
		pyEvent51(51)
		pyEvent52(52)
		pyEvent53(53)
		pyEvent54(54)
		pyEvent55(55)
		pyEvent56(56)
		pyEvent57(57)
		pyEventPolicyCacheLoaded(58)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			policyEventNotification trap received 
			policyTrapEventDetailString=%parm[#1]% 
			policyTrapEventCode=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-POLICY-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-PORT-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.6</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/esmDrvTrapDropsLink</uei>
	<event-label>ALCATEL-IND1-PORT-MIB defined trap event: esmDrvTrapDropsLink</event-label>
	<descr>
&lt;p&gt;When the Ethernet code drops the link because of
excessive errors, a Trap is sent.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	esmPortSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	esmPortIF&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	ifInErrors&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	ifOutErrors&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	esmDrvTrapDrops&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			esmDrvTrapDropsLink trap received 
			esmPortSlot=%parm[#1]% 
			esmPortIF=%parm[#2]% 
			ifInErrors=%parm[#3]% 
			ifOutErrors=%parm[#4]% 
			esmDrvTrapDrops=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-PORT-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.8</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/mirrorConfigError</uei>
	<event-label>ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB defined trap event: mirrorConfigError</event-label>
	<descr>
&lt;p&gt;The Mirroring Configuration failed on NI.
This trap is sent when any NI fails to configure mirroring.			
Due to this error, port mirroring session will be terminated.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimarySlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimaryPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirroringSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirroringPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirMonErrorNi&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirMonError&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#6]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		other(1)
		wrongSession(2)
		hwQError(3)
		swQError(4)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			mirrorConfigError trap received 
			mirmonPrimarySlot=%parm[#1]% 
			mirmonPrimaryPort=%parm[#2]% 
			mirroringSlot=%parm[#3]% 
			mirroringPort=%parm[#4]% 
			mirMonErrorNi=%parm[#5]% 
			mirMonError=%parm[#6]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.8</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/monitorFileWritten</uei>
	<event-label>ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB defined trap event: monitorFileWritten</event-label>
	<descr>
&lt;p&gt;A File Written Trap is sent when the amount of data requested
by the user has been written by the port monitoring instance.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimarySlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimaryPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	monitorFileName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	monitorFileSize&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			monitorFileWritten trap received 
			mirmonPrimarySlot=%parm[#1]% 
			mirmonPrimaryPort=%parm[#2]% 
			monitorFileName=%parm[#3]% 
			monitorFileSize=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.8</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/mirrorUnlikeNi</uei>
	<event-label>ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB defined trap event: mirrorUnlikeNi</event-label>
	<descr>
&lt;p&gt; The Mirroring Configuration is deleted due to the swapping of different 
NI board type. Port Mirroring session which was active on a slot,cannot 
continue with the insertion of different NI type in the same slot. &lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimarySlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirmonPrimaryPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirroringSlot&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirroringPort&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	mirMonErrorNi&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#5]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			mirrorUnlikeNi trap received 
			mirmonPrimarySlot=%parm[#1]% 
			mirmonPrimaryPort=%parm[#2]% 
			mirroringSlot=%parm[#3]% 
			mirroringPort=%parm[#4]% 
			mirMonErrorNi=%parm[#5]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-SLB-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.10.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/slbTrapException</uei>
	<event-label>ALCATEL-IND1-SLB-MIB defined trap event: slbTrapException</event-label>
	<descr>
&lt;p&gt;Software exception in SLB module.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoException&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			slbTrapException trap received 
			slbTrapInfoException=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.10.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/slbTrapConfigChanged</uei>
	<event-label>ALCATEL-IND1-SLB-MIB defined trap event: slbTrapConfigChanged</event-label>
	<descr>
&lt;p&gt;A change occured in SLB configuration.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoEntityGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		slb(1)
		cluster(2)
		server(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoClusterName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoServerIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			slbTrapConfigChanged trap received 
			slbTrapInfoEntityGroup=%parm[#1]% 
			slbTrapInfoClusterName=%parm[#2]% 
			slbTrapInfoServerIpAddr=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.10.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/slbTrapOperStatus</uei>
	<event-label>ALCATEL-IND1-SLB-MIB defined trap event: slbTrapOperStatus</event-label>
	<descr>
&lt;p&gt;A change occured in the operational status of a slb entity.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoEntityGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		slb(1)
		cluster(2)
		server(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoOperStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		outOfService(1)
		inService(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoClusterName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	slbTrapInfoServerIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			slbTrapOperStatus trap received 
			slbTrapInfoEntityGroup=%parm[#1]% 
			slbTrapInfoOperStatus=%parm[#2]% 
			slbTrapInfoClusterName=%parm[#3]% 
			slbTrapInfoServerIpAddr=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-SLB-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-SESSION-MGR-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.11.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/sessionAuthenticationTrap</uei>
	<event-label>ALCATEL-IND1-SESSION-MGR-MIB defined trap event: sessionAuthenticationTrap</event-label>
	<descr>
&lt;p&gt;Authentication Failure Trap is sent each time a user
authentication is refused.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	sessionAccessType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		console(1)
		telnet(2)
		ftp(3)
		http(4)
		ssh(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	sessionUserName&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	sessionUserIpAddress&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	sessionAuthFailure&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknownUser(1)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			sessionAuthenticationTrap trap received 
			sessionAccessType=%parm[#1]% 
			sessionUserName=%parm[#2]% 
			sessionUserIpAddress=%parm[#3]% 
			sessionAuthFailure=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Minor</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-SESSION-MGR-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-STACK-MANAGER-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrDuplicateSlotTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrDuplicateSlotTrap</event-label>
	<descr>
&lt;p&gt;The element specified by alaStackMgrSlotNINumber has the same slot number of
another element of the stack and it must relinquish its operational status
because it has a higher election key (up time, slot, mac).
The elements will be put in pass through mode.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrDuplicateSlotTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrNeighborChangeTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrNeighborChangeTrap</event-label>
	<descr>
&lt;p&gt;Indicates whether the stack is in loop or not.
In case of no loop, alaStackMgrSlotNINumber and alaStackMgrTrapLinkNumber
indicate where the Stack is broken&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrStackStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		loop(1)
		noloop(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrTrapLinkNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		linkA(1)
		linkB(2)
		linkA25(25)
		linkB26(26)
		linkA27(27)
		linkB28(28)
		linkA29(29)
		linkB30(30)
		linkA31(31)
		linkB32(32)
		linkA51(51)
		linkB52(52)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrNeighborChangeTrap trap received 
			alaStackMgrStackStatus=%parm[#1]% 
			alaStackMgrSlotNINumber=%parm[#2]% 
			alaStackMgrTrapLinkNumber=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrRoleChangeTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrRoleChangeTrap</event-label>
	<descr>
&lt;p&gt; Role Change Trap. Indicates that a new primary or secondary is elected.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrPrimary&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSecondary&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrRoleChangeTrap trap received 
			alaStackMgrPrimary=%parm[#1]% 
			alaStackMgrSecondary=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>4</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrDuplicateRoleTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrDuplicateRoleTrap</event-label>
	<descr>
&lt;p&gt;The element identified by alaStackMgrSlotNINumber detected the presence of
two elements with the same primary or secondary role as specified by
alaStackMgrChasRole on the stack.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrChasRole&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unassigned(0)
		primary(1)
		secondary(2)
		idle(3)
		standalone(4)
		passthrough(5)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrDuplicateRoleTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]% 
			alaStackMgrChasRole=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>5</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrClearedSlotTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrClearedSlotTrap</event-label>
	<descr>
&lt;p&gt;The element identified by alaStackMgrSlotNINumber will enter the pass through 
mode because its operational slot was cleared with immediate effect.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrClearedSlotTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>6</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrOutOfSlotsTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrOutOfSlotsTrap</event-label>
	<descr>
&lt;p&gt;One element of the stack will enter the pass through mode because there 
are no slot numbers available to be assigned to this element.&lt;/p&gt;&lt;table&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrOutOfSlotsTrap trap received&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>7</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrOutOfTokensTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrOutOfTokensTrap</event-label>
	<descr>
&lt;p&gt;The element identified by alaStackMgrSlotNINumber will enter the pass through
mode because there are no tokens available to be assigned to this element.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrOutOfTokensTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>8</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrOutOfPassThruSlotsTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrOutOfPassThruSlotsTrap</event-label>
	<descr>
&lt;p&gt;There are no pass through slots available to be assigned to an element
that is supposed to enter the pass through mode.&lt;/p&gt;&lt;table&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrOutOfPassThruSlotsTrap trap received&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.24.1.4</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>9</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaStackMgrBadMixTrap</uei>
	<event-label>ALCATEL-IND1-STACK-MANAGER-MIB defined trap event: alaStackMgrBadMixTrap</event-label>
	<descr>
&lt;p&gt;The element identified by alaStackMgrSlotNINumber will enter the pass through
mode because it is not compatible with the existing stack.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaStackMgrSlotNINumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaStackMgrBadMixTrap trap received 
			alaStackMgrSlotNINumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-STACK-MANAGER-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-TRAP-MGR-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.12</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/trapAbsorptionTrap</uei>
	<event-label>ALCATEL-IND1-TRAP-MGR-MIB defined trap event: trapAbsorptionTrap</event-label>
	<descr>
&lt;p&gt;The absorption Trap is sent when a trap has been
absorbed at least once.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	trapAbsorStamp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	trapAbsorTrapId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	trapAbsorCounter&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	trapAbsorTime&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			trapAbsorptionTrap trap received 
			trapAbsorStamp=%parm[#1]% 
			trapAbsorTrapId=%parm[#2]% 
			trapAbsorCounter=%parm[#3]% 
			trapAbsorTime=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-TRAP-MGR-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-UDLD-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.44.1.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/udldStateChange</uei>
	<event-label>ALCATEL-IND1-UDLD-MIB defined trap event: udldStateChange</event-label>
	<descr>
&lt;p&gt;The UDLD-state of port has changed. Notify the user by
raising the Trap. Notify the Management Entity the previous 
 UDLD-state and UDLD-Current.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaUdldPortIfIndex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaUdldPrevState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		notapplicable(0)
		shutdown(1)
		undetermined(2)
		bidirectional(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaUdldCurrentState&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		notapplicable(0)
		shutdown(1)
		undetermined(2)
		bidirectional(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			udldStateChange trap received 
			alaUdldPortIfIndex=%parm[#1]% 
			alaUdldPrevState=%parm[#2]% 
			alaUdldCurrentState=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Normal</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-UDLD-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-VLAN-STP-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.7</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/stpNewRoot</uei>
	<event-label>ALCATEL-IND1-VLAN-STP-MIB defined trap event: stpNewRoot</event-label>
	<descr>
&lt;p&gt;The NewRoot trap indicates that the bridge has
become the new root for this Spanning Tree instance;
 the trap is sent by a bridge soon after its election
as the new root, upon expiration of the
Topology Change Timer immediately subsequent to
its election.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vStpNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			stpNewRoot trap received 
			vStpNumber=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.7</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/stpRootPortChange</uei>
	<event-label>ALCATEL-IND1-VLAN-STP-MIB defined trap event: stpRootPortChange</event-label>
	<descr>
&lt;p&gt;A RootPortChange trap is sent for a Spannnig Tree
instance by a bridge when its root port has changed.
 The root port is the port which offers the
 lowest cost path from this bridge to the root
 bridge.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vStpNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	vStpRootPortNumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			stpRootPortChange trap received 
			vStpNumber=%parm[#1]% 
			vStpRootPortNumber=%parm[#2]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-VLAN-STP-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-VRRP3-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.28.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaVrrp3TrapNewMaster</uei>
	<event-label>ALCATEL-IND1-VRRP3-MIB defined trap event: alaVrrp3TrapNewMaster</event-label>
	<descr>
&lt;p&gt;The newMaster trap indicates that the sending agent
has transitioned to 'Master' state.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaVrrp3OperMasterIpAddrType&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		unknown(0)
		ipv4(1)
		ipv6(2)
		ipv4z(3)
		ipv6z(4)
		dns(16)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaVrrp3OperMasterIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaVrrp3TrapNewMasterReason&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		priority(0)
		preempted(1)
		masterNoResponse(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaVrrp3TrapNewMaster trap received 
			alaVrrp3OperMasterIpAddrType=%parm[#1]% 
			alaVrrp3OperMasterIpAddr=%parm[#2]% 
			alaVrrp3TrapNewMasterReason=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.2.1.28.2</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>2</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/alaVrrp3TrapProtoError</uei>
	<event-label>ALCATEL-IND1-VRRP3-MIB defined trap event: alaVrrp3TrapProtoError</event-label>
	<descr>
&lt;p&gt;The error trap indicates that the sending agent has
encountered the protocol error indicated by
ErrorReason.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	alaVrrp3TrapProtoErrReason&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		hopLimitError(0)
		versionError(1)
		checksumError(2)
		vridError(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			alaVrrp3TrapProtoError trap received 
			alaVrrp3TrapProtoErrReason=%parm[#1]%&lt;/p&gt;
		</logmsg>
	<severity>Critical</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-VRRP3-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-WCCP-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.18.1</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>3</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/wccpTrapOperStatus</uei>
	<event-label>ALCATEL-IND1-WCCP-MIB defined trap event: wccpTrapOperStatus</event-label>
	<descr>
&lt;p&gt;A change occured in the operational status of a wccp entity.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	wccpTrapInfoEntityGroup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		wccp(1)
		service(2)
		webcache(3)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	wccpTrapInfoOperStatus&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;
		outOfService(1)
		inService(2)
	&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	wccpTrapInfoServiceId&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	wccpTrapInfoWebCacheIpAddr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#4]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			wccpTrapOperStatus trap received 
			wccpTrapInfoEntityGroup=%parm[#1]% 
			wccpTrapInfoOperStatus=%parm[#2]% 
			wccpTrapInfoServiceId=%parm[#3]% 
			wccpTrapInfoWebCacheIpAddr=%parm[#4]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-WCCP-MIB -->
<!-- Start of auto generated data from MIB: ALCATEL-IND1-WEBMGT-MIB -->
<event>
	<mask>
		<maskelement>
			<mename>id</mename>
			<mevalue>.1.3.6.1.4.1.6486.800.1.3.2.11.3</mevalue>
		</maskelement>
		<maskelement>
			<mename>generic</mename>
			<mevalue>6</mevalue>
		</maskelement>
		<maskelement>
			<mename>specific</mename>
			<mevalue>1</mevalue>
		</maskelement>
	</mask>
	<uei>uei.opennms.org/vendor/alcatellucent/traps/httpServerDoSAttackTrap</uei>
	<event-label>ALCATEL-IND1-WEBMGT-MIB defined trap event: httpServerDoSAttackTrap</event-label>
	<descr>
&lt;p&gt;This trap is sent to management station(s) when the
HTTP server is under Denial of Service attack. The HTTP
and HTTPS connections are sampled at a 15 second
interval. This trap is sent every 1 minute while the HTTP
server detects it is under attack.&lt;/p&gt;&lt;table&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	httpConnectionStats&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#1]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	httpsConnectionStats&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#2]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;&lt;b&gt;

	httpServerDoSAttackSrcIp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;
	%parm[#3]%;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
	</descr>
		<logmsg dest='logndisplay'>&lt;p&gt;
			httpServerDoSAttackTrap trap received 
			httpConnectionStats=%parm[#1]% 
			httpsConnectionStats=%parm[#2]% 
			httpServerDoSAttackSrcIp=%parm[#3]%&lt;/p&gt;
		</logmsg>
	<severity>Major</severity>
</event>
<!-- End of auto generated data from MIB: ALCATEL-IND1-WEBMGT-MIB -->
</events>

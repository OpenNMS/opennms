<?xml version="1.0"?>

<!-- v0.20 C Gallen 29-5-06 -->
<!-- this file includes open nms generated alarms
     (all <alarm-data /> is included )
     to use - copy to $OPENNMS_HOME/etc/eventconf.xml -->

<events xmlns="http://xmlns.opennms.org/xsd/eventconf">
	<global>
		<security>
			<doNotOverride>logmsg</doNotOverride>
			<doNotOverride>operaction</doNotOverride>
			<doNotOverride>autoaction</doNotOverride>
			<doNotOverride>tticket</doNotOverride>
			<doNotOverride>script</doNotOverride>
		</security>
	</global>
        <event-file>/opt/OpenNMS/etc/events/3Com.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/ADIC-v2.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Alteon.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/APC.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/APC.Best.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/APC.Exide.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/BackupExec.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/BEA.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/BGP4.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/BlackBerryServer.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Brocade.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Cisco2.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Cisco.5300dchan.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Cisco.events.xml</event-file>
	<!-- CIM.events.xml has been deprecated by CPQHPIM.events.xml -->
        <event-file>/opt/OpenNMS/etc/events/Colubris.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/CPQHPIM.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Clarent.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Clarinet.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Cricket.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/DellOpenManage.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Fore.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/FoundryNetworks.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/FujitsuSiemens.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Groupwise.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/HP.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/IBM.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/IEEE802dot11.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Intel.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Linksys.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/MGE-UPS.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Microsoft.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Mylex.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/NetApp.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Netbotz.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Netgear.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Netscreen.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Nokia.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/NORTEL.Contivity.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Novell.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Oracle.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Patrol.events.xml</event-file>
       <!-- <event-file>/opt/OpenNMS/etc/events/Pixmet.events.xml</event-file> -->
        <event-file>/opt/OpenNMS/etc/events/Quintum.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Redline.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Sensaphone.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Snort.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/SonicWall.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Symbol.events.xml</event-file>
<!--        <event-file>/opt/OpenNMS/etc/events/Symbol-WS5000.events.xml</event-file> -->
        <event-file>/opt/OpenNMS/etc/events/SystemEdge.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/UPS-MIB.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Uptime.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Xerox-V2.events.xml</event-file>
        <event-file>/opt/OpenNMS/etc/events/Xerox.events.xml</event-file>

        <event-file>/opt/OpenNMS/etc/events/Standard.events.xml</event-file>
                
        <!-- event file for ossj events -->
        <event-file>/opt/OpenNMS/etc/events/ossj_events.xml</event-file>


        <event>
                <uei>MATCH-ANY-UEI</uei>
                <event-label>OpenNMS defined event: MATCH-ANY-UEI</event-label>
                <descr>
                        &lt;p&gt;This UEI will never be generated, but exists
                        so that notifications can match any UEI for a
                        particular filter rule. Useful to see all events for
                        a particular node via notifications.
                        &lt;/p&gt;
                </descr>
                <logmsg dest='logonly'>
                        MATCH-ANY-UEI event.
                </logmsg>
                <severity>Indeterminate</severity>
        </event>
	<event>
		<uei>uei.opennms.org/internal/capsd/discPause</uei>
		<event-label>OpenNMS-defined internal event: capsd discPause</event-label>
		<descr>
			&lt;p&gt;The services scanning engine has asked discovery to
			pause due to a backlog of interfaces yet to be scanned.
			&lt;/p&gt;
		</descr>
		<logmsg dest='logonly'>
			Capsd has asked Discovery to pause momentarily.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/capsd/discResume</uei>
		<event-label>OpenNMS-defined internal event: capsd discResume</event-label>
		<descr>
			&lt;p&gt;Capsd is approving discovery to resume adding nodes
			to the Capsd queue.&lt;/p&gt;
		</descr>
		<logmsg dest='logonly'>
			Capsd is ready for Discovery to resume scheduling nodes.
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/provisiond/forceRescan</uei>
		<event-label>OpenNMS-defined internal event: Provisiond forceRescan</event-label>
		<descr>
			&lt;p&gt;A services scan has been forced.&lt;/p&gt;
			&lt;p&gt;The administrator has forced a services scan on
			this node to update the list of supported
			services.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;A services scan has been forced on this
			node.&lt;/p&gt;
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/capsd/addNode</uei>
		<event-label>OpenNMS-defined internal event: capsd addNode</event-label>
		<descr>
			&lt;p&gt;This event is an external command to add a node
			to the database. The required paramater is the IP
			address for the main interface: %interface%, and
			the optional parameter of a node label: %nodelabel%.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;A request has been made to add a node with interface:
			%interface% and node label: %nodelabel%.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/capsd/deleteNode</uei>
		<event-label>OpenNMS-defined internal event: capsd deleteNode</event-label>
		<descr>
			&lt;p&gt;This event is an external command to delete a node
			from the database. The required paramater is the IP
			address for one interface: %interface%.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;A request has been made to delete a node with interface:
			%interface%.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/capsd/addInterface</uei>
		<event-label>OpenNMS-defined internal event: capsd addInterface</event-label>
		<descr>
			&lt;p&gt;This event is an external command to add an interface
			to the database. The required paramater is the IP
			address for the main interface: %interface%.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;A request has been made to add an interface 
			%interface%.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/provisiond/deleteInterface</uei>
		<event-label>OpenNMS-defined internal event: Provisiond deleteInterface</event-label>
		<descr>
			&lt;p&gt;This event is an external command to delete an interface
			from the database. The required paramater is the IP
			address for the interface: %interface%.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;A request has been made to delete an interface:
			%interface%.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/capsd/changeService</uei>
		<event-label>OpenNMS-defined internal event: capsd changeService</event-label>
		<descr>
			&lt;p&gt;This event will add or remove a service from an interface.
			The paramters include the interface, %interface%, the service,
			%service%, and any required qualifiers, %parm[#2]%. The action
			taken will be: %parm[#1]%.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;A request has been made to %parm[#1]% the %service% service
			on interface: %interface%.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
	</event>
<!-- New Importer Service Events -->
    <event>
      <uei>uei.opennms.org/internal/importer/reloadImport</uei>
      <event-label>OpenNMS-defined internal event: importer reloadImport</event-label>
      <descr>
        &lt;p&gt;This event will cause the importer to run the model-import process.
        The parameters include foreignSource, url, and deleteThreshold that override
        configuration properties as well as XML and default values.&lt;/p&gt;
      </descr>
      <logmsg dest='logndisplay'>
        &lt;p&gt;A request had been made to run the model-import process with the
        parms: %parm[all]%.&lt;/p&gt;
      </logmsg>
      <severity>Normal</severity>
    </event>
    <event>
      <uei>uei.opennms.org/internal/importer/importStarted</uei>
      <event-label>OpenNMS-defined internal event: importer process has started</event-label>
      <descr>
        &lt;p&gt;This event indicates the model-importer process has started&lt;/p&gt;
      </descr>
      <logmsg dest='logndisplay'>
        &lt;p&gt;This event indicates the model-importer process has started&lt;/p&gt;
      </logmsg>
      <severity>Normal</severity>
    </event>
    <event>
      <uei>uei.opennms.org/internal/importer/importSuccessful</uei>
      <event-label>OpenNMS-defined internal event: importer process successfully completed</event-label>
      <descr>
        &lt;p&gt;This event indicates the model-importer process has completed successfully. There 
        is 1 parameter called importStats: %parm [importStats]%&lt;/p&gt;
      </descr>
      <logmsg dest='logndisplay'>
        &lt;p&gt;This event indicates the model-importer process has completed successfully&lt;/p&gt;
      </logmsg>
      <severity>Normal</severity>
    </event>
    <event>
      <uei>uei.opennms.org/internal/importer/importFailed</uei>
      <event-label>OpenNMS-defined internal event: importer process failed.</event-label>
      <descr>
        &lt;p&gt;This event indicates the model-importer process has failed.  There is 1 parameter 
        called failureMessage: %parm [failureMessage]%&lt;/p&gt;
      </descr>
      <logmsg dest='logndisplay'>
        &lt;p&gt;This event indicates the model-importer process has failed with reason: %parm [failureMessage]%&lt;/p&gt;
      </logmsg>
      <severity>Warning</severity>
    </event>
<!-- New Importer Service Events -->
        <event>
                <uei>uei.opennms.org/nodes/restartPollingInterface</uei>
                <event-label>OpeNMS-defined node event: restartPollingInterface</event-label>
                <descr> 
                        &lt;p&gt;This event is an external command to restart polling 
                        all active services on a specified interface. The requeried 
                        parameter is the IP address of the interface. (%parm [ipaddr]%). 
                        &lt;/p&gt; 
                </descr>
                <logmsg dest='logndisplay'>
                        Reschedule polling to services on a specified interface(%parm[ipaddr]%).                
                </logmsg>
                <severity>Normal</severity>
        </event>
	<event>
		<uei>uei.opennms.org/internal/capsd/xmlrpcNotification</uei>
		<event-label>OpenNMS-defined internal event: capsd xmlrpcNotification</event-label>
		<descr>
			&lt;p&gt;This event will be produced by capsd to carry the process status
                        information, so that the xmlrpcd could catch it, and reports to the external
                        XMLRPC server. The paramters include transaction number, %parm [txNo]%, 
                        source event uei, %parm [srcUei]%, message, %parm [message]%, and process
                        status, %parm [status]%.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;A request has been made to xmlrpcd to report status for 
			%parm [srcUei]%.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/discovery/newSuspect</uei>
		<event-label>OpenNMS-defined internal event: discovery newSuspect</event-label>
		<descr>
			&lt;p&gt;Interface %interface% has been discovered and is
			being queued for a services scan.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			A new interface (%interface%) has been discovered and is
			being queued for a services scan.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/interfaceManaged</uei>
		<event-label>OpenNMS-defined internal event: interfaceManaged</event-label>
		<descr>
			&lt;p&gt;The interface %interface% is being
			remanaged.&lt;/p&gt; &lt;p&gt;This interface will now
			participate in service polling.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The interface %interface% is being remanaged.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/interfaceUnmanaged</uei>
		<event-label>OpenNMS-defined internal event: interfaceUnmanaged</event-label>
		<descr>
			&lt;p&gt;The interface %interface% is being forcibly
			unmanaged.&lt;/p&gt; &lt;p&gt;This interface and all
			associated services will &lt;b&gt;NOT&lt;/b&gt; be polled
			until the interface is remanaged.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The interface %interface% is being forcibly unmanaged.
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/notificationWithoutUsers</uei>
		<event-label>OpenNMS-defined internal event: notificationWithoutUsers</event-label>
		<descr>
			&lt;p&gt;A destination path in a notification has not been
			assigned any users.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			A destination path in a notification has not been assigned
			any users.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/notificationsTurnedOff</uei>
		<event-label>OpenNMS-defined internal event: notificationsTurnedOff</event-label>
		<descr>
			&lt;p&gt;Notifications have been disabled.&lt;/p&gt;
			&lt;p&gt;The administrator has disabled notifications on
			OpenNMS. No pages or emails will be sent until notifications
			are reenabled.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;Notifications have been disabled.&lt;/p&gt;
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/notificationsTurnedOn</uei>
		<event-label>OpenNMS-defined internal event: notificationsTurnedOn</event-label>
		<descr>
			&lt;p&gt;Notifications have been enabled.&lt;/p&gt;
			&lt;p&gt;The administrator has enabled notifications on
			OpenNMS. Pages and/or emails will be sent based upon receipt
			of important events.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;Notifications have been enabled.&lt;/p&gt;
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/reloadPollerConfig</uei>
		<event-label>OpenNMS-defined internal event: reloadPollerConfig</event-label>
		<descr>
			&lt;p&gt;The administrator has changed the poller
			configuration files. The pollers and related services will
			now restart to detect the changes.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;The poller configuration files have
			changed.&lt;/p&gt;
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/reloadScriptConfig</uei>
		<event-label>OpenNMS-defined internal event: reloadScriptConfig</event-label>
		<descr>
			&lt;p&gt;The administrator has changed the ScriptD
			configuration. ScriptD will load the new configuration.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;The ScriptD configuration files have changed.&lt;/p&gt;
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/configureSNMP</uei>
		<event-label>OpenNMS-defined internal event: configureSNMP</event-label>
		<descr>
			&lt;p&gt;SNMP definition for IP address
                        %parm[firstIPAddress]%-%parm[lastIPAddress]% has been
                        updated with community string
                        &quot;%parm[communityString]%&quot;&lt;/p&gt;
		</descr>
		<logmsg dest='logonly'>
			&lt;p&gt;SNMP community string
                        &quot;%parm[communityString]%&quot; has been defined
                        for IP %parm[firstIPAddress]%-%parm[lastIPAddress]%.&lt;/p&gt;
		</logmsg>
		<severity>Warning</severity>
	</event>
	<!-- deprecated: originally designed for something called service control manager -->
	<event>
		<uei>uei.opennms.org/internal/restartSCM</uei>
		<event-label>OpenNMS-defined internal event: restartSCM</event-label>
		<descr>
			&lt;p&gt;SCM has been asked to restart.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			SCM has been asked to restart.
		</logmsg>
		<severity>Indeterminate</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/rtc/subscribe</uei>
		<event-label>OpenNMS-defined internal event: rtc subscribe</event-label>
		<descr>
			&lt;p&gt;This event is generated to RTC by any process that
			wishes to receive POSTs of RTC data.&lt;/p&gt;
		</descr>
		<logmsg dest='logonly'>
			A subscription to RTC for the %parm[viewname]% for
			%parm[url]% has been generated.
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/rtc/unsubscribe</uei>
		<event-label>OpenNMS-defined internal event: rtc unsubscribe</event-label>
		<descr>
			&lt;p&gt;This event is generated to RTC by any subscribed
			process that wishes to discontinue receipt of POSTs of RTC
			data.&lt;/p&gt;
		</descr>
		<logmsg dest='logonly'>
			Unsubscribe request received from %parm[url]%.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/serviceManaged</uei>
		<event-label>OpenNMS-defined internal event: serviceManaged</event-label>
		<descr>
			&lt;p&gt;The service %service% on interface %interface% is
			being remanaged.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The service %service% on interface %interface% is being
			remanaged.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/serviceUnmanaged</uei>
		<event-label>OpenNMS-defined internal event: serviceUnmanaged</event-label>
		<descr>
			&lt;p&gt;The service %service% on interface %interface% is
			being forcibly unmanaged.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The service %service% on interface %interface% is being
			forcibly unmanaged.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/dataCollectionFailed</uei>
		<event-label>OpenNMS-defined node event: dataCollectionFailed</event-label>
		<descr>
			&lt;p&gt;%service% data collection on interface %interface%
			failed.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			%service% data collection on interface %interface% failed.
		</logmsg>
		<severity>Minor</severity>
        <!--
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%" alarm-type="1" />
	-->
	</event>
	<event>
		<uei>uei.opennms.org/nodes/dataCollectionSucceeded</uei>
		<event-label>OpenNMS-defined node event: dataCollectionSucceeded</event-label>
		<descr>
			&lt;p&gt;%service% data collection on interface %interface%
			previously failed and has been restored.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			%service% data collection on interface %interface% prevously
			failed and has been restored.
		</logmsg>
		<severity>Normal</severity>
        <!--
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%" alarm-type="2" clearUei="uei.opennms.org/nodes/dataCollectionFailed"/>
	-->
	</event>
	<event>
		<uei>uei.opennms.org/nodes/deleteService</uei>
		<event-label>OpenNMS-defined node event: deleteService</event-label>
		<descr>
			&lt;p&gt;Due to excessive downtime, the %service% service on
			interface %interface% has been scheduled for
			deletion.&lt;/p&gt; &lt;p&gt;When a service has been down
			for one week, it is determined to have been removed and will
			be deleted. If the service is later rediscovered, it will be
			re-added and associated with the appropriate
			interface.&lt;/p&gt; &lt;p&gt;If this is the only service
			associated with an interface, the interface will be
			scheduled for deletion as well, with the generation of the
			deleteInterface event.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The %service% service on interface %interface% has been
			scheduled for deletion.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/duplicateNodeDeleted</uei>
		<event-label>OpenNMS-defined node event: duplicateNodeDeleted</event-label>
		<descr>
			&lt;p&gt;Node #&lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;
			was determined to be a duplicate node and is being flagged
			for deletion.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;Node #&lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;
			was determined to be a duplicate node and is being flagged
			for deletion.&lt;/p&gt;
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/interfaceDeleted</uei>
		<event-label>OpenNMS-defined node event: interfaceDeleted</event-label>
		<descr>
			&lt;p&gt;Interface %interface% deleted from node #&lt;a
			href="element/node.jsp?node=%nodeid%"&gt;
			%nodeid%&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This event is
			generated following an extended outage for a service, in
			which that service is the only service associated with an
			interface. If the service is later rediscovered, a new
			interface will be added and the service will be associated
			with that new interface.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Interface %interface% deleted from node #&lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;.
		</logmsg>
		<severity>Minor</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/interfaceDown</uei>
		<event-label>OpenNMS-defined node event: interfaceDown</event-label>
		<descr>
			&lt;p&gt;All services are down on interface %interface%
			&lt;/p&gt; &lt;p&gt;This event is generated when node outage
			processing determines that the critical service or all
			services on the interface are now down &lt;/p&gt; &lt;p&gt;
			New outage records have been created and service level
			availability calculations will be impacted until this outage
			is resolved.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Interface %interface% is down.
		</logmsg>
		<severity>Minor</severity>
        <!--
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%" alarm-type="1" />
	-->
	</event>
	<event>
		<uei>uei.opennms.org/nodes/interfaceIPHostNameChanged</uei>
		<event-label>OpenNMS-defined node event: interfaceIPHostNameChanged</event-label>
		<descr>
			&lt;p&gt;The hostname for this node changed.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The hostname for this node changed.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/interfaceReparented</uei>
		<event-label>OpenNMS-defined node event: interfaceReparented</event-label>
		<descr>
			&lt;p&gt;Interface %interface% has been reparented under
			node %parm[newNodeID]% from node
			%parm[oldNodeID]%.&lt;/p&gt; &lt;p&gt;Usually this happens
			after a services scan discovers that a node with multiple
			interfaces is now running an SNMP agent and is therefore
			able to reparent the node's interfaces under a single node
			identifier.&lt;/p&gt; &lt;p&gt;This is typically not a
			reason for concern, but you should be aware that the node
			association of this interface has changed.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			%interface% has been reparented under node %parm[newNodeID]%
			from node %parm[oldNodeID]%.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/interfaceUp</uei>
		<event-label>OpenNMS-defined node event: interfaceUp</event-label>
		<descr>
			&lt;p&gt;The interface %interface% which was previously down
			is now up.&lt;/p&gt; &lt;p&gt;This event is generated when
			node outage processing determines that the critical service
			or all services on the interface are restored. &lt;/p&gt;
			&lt;p&gt;This event will cause any active outages associated
			with this interface to be cleared.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Interface %interface% is up.
		</logmsg>
		<severity>Normal</severity>
        <!--
	FIXME: The clear-key field needs to be verified
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%" alarm-type="2" clear-key="uei.opennms.org/nodes/interfaceDown:%dpname%:%nodeid%:%interface%" />
	-->
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeAdded</uei>
		<event-label>OpenNMS-defined node event: nodeAdded</event-label>
		<descr>
			&lt;p&gt;A new node (%parm[nodelabel]%) was discovered by
			OpenNMS.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			A new node (%parm[nodelabel]%) was discovered by OpenNMS.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeDeleted</uei>
		<event-label>OpenNMS-defined node event: nodeDeleted</event-label>
		<descr>
			&lt;p&gt;Node %nodeid% was deleted.&lt;/p&gt; 
			&lt;p&gt;OpenNMS will delete any node
			that is down for seven (7) consecutive days, or via operator action. 
			Nodes are considered "down" if there are no interfaces that have
			pollable services associated with them.&lt;/p&gt;
			&lt;p&gt;If a node becomes active again
			&lt;i&gt;after&lt;/i&gt; it has been deleted, it will be
			rediscovered in the next, daily discovery cycle and will be
			re-added to OpenNMS's database as a new node. It will be
			disassociated with any historic outage
			information.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Node &lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;
			was deleted.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeDown</uei>
		<event-label>OpenNMS-defined node event: nodeDown</event-label>
		<descr>
			&lt;p&gt;All interfaces on node %parm[nodelabel]% are
			down.&lt;/p&gt; &lt;p&gt;This event is generated when node
			outage processing determines that all interfaces on the node
			are down.&lt;/p&gt; &lt;p&gt;New outage records have been
			created and service level availability calculations will be
			impacted until this outage is resolved.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Node %parm[nodelabel]% is down. %parm[eventReason]%
		</logmsg>
		<severity>Major</severity>
        <!--
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%" alarm-type="1" />
	-->
	</event>
	<event>
                <uei>uei.opennms.org/nodes/pathOutage</uei>
                <event-label>OpenNMS-defined node event: pathOutage</event-label>
                <descr>
                        &lt;p&gt;The state of node %parm[nodelabel]% is unknown
                        because the critical path to the node is down.&lt;/p&gt;
                        &lt;p&gt;This event is generated when node outage processing
                        determines that the critical path IP address/service for
                        this node is not responding..&lt;/p&gt;
                </descr>
                <logmsg dest='logndisplay'>
                        %parm[nodelabel]% path outage. Critical path =
                        %parm[criticalPathIp]% %parm[criticalPathServiceName]%
                </logmsg>
                <severity>Major</severity>
        <!--
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%" alarm-type="1" />
	-->
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeGainedInterface</uei>
		<event-label>OpenNMS-defined node event: nodeGainedInterface</event-label>
		<descr>
			&lt;p&gt;Interface %interface% has been associated with Node
			#&lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Interface %interface% has been associated with Node #&lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeGainedService</uei>
		<event-label>OpenNMS-defined node event: nodeGainedService</event-label>
		<descr>
			&lt;p&gt;A service scan has identified the %service% service
			on interface %interface%.&lt;/p&gt; &lt;p&gt;If this
			interface (%interface%) is within the list of ranges and
			specific addresses to be managed by OpenNMS, this service
			will be scheduled for regular availability checks.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The %service% service has been discovered on interface
			%interface%.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/poller/suspendPollingService</uei>
		<event-label>OpenNMS-defined poller event: suspendPollingService</event-label>
		<descr>
			&lt;p&gt;A forced rescan has identified the %service% service
			on interface %interface% as no longer part of any poller package,
			or the service has been unmanaged.
			&lt;/p&gt; Polling will be discontinued.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Polling will be discontinued for %service% service on interface
			%interface%.
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/internal/poller/resumePollingService</uei>
		<event-label>OpenNMS-defined poller event: resumePollingService</event-label>
		<descr>
			&lt;p&gt;A forced rescan has identified the %service% service
			on interface %interface% as covered by a poller package, and
			managed.
			&lt;/p&gt; Polling will begin in accordance with the package and
			any applicable outage calendar.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Polling will begin/resume for %service% service on interface
			%interface%.
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeInfoChanged</uei>
		<event-label>OpenNMS-defined node event: nodeInfoChanged</event-label>
		<descr>
			&lt;p&gt;Node information has changed for node
			#%nodeid%.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;Node information has changed for &lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;.&lt;/p&gt;
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeLabelChanged</uei>
		<event-label>OpenNMS-defined node event: nodeLabelChanged</event-label>
		<descr>
			&lt;p&gt;Node #&lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;'s
			label was changed from "%parm[oldNodeLabel]%" to
			"%parm[newNodeLabel]%".&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Node #&lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;'s
			label was changed from "%parm[oldNodeLabel]%" to
			"%parm[newNodeLabel]%".
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeLostService</uei>
		<event-label>OpenNMS-defined node event: nodeLostService</event-label>
		<descr>
			&lt;p&gt;A %service% outage was identified on interface
			%interface%.&lt;/p&gt; &lt;p&gt;A new Outage record has been
			created and service level availability calculations will be
			impacted until this outage is resolved.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			%service% outage identified on interface %interface% with reason code: %parm[eventReason]%.
		</logmsg>
		<severity>Minor</severity>
        <!--
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%service%" alarm-type="1" />
	-->
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeRegainedService</uei>
		<event-label>OpenNMS-defined node event: nodeRegainedService</event-label>
		<descr>
			&lt;p&gt;The %service% service on interface %interface% was
			previously down and has been restored.&lt;/p&gt;
			&lt;p&gt;This event is generated when a service which had
			previously failed polling attempts is again responding to
			polls by OpenNMS. &lt;/p&gt; &lt;p&gt;This event will cause
			any active outages associated with this service/interface
			combination to be cleared.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The %service% outage on interface %interface% has been
			cleared. Service is restored.
		</logmsg>
		<severity>Normal</severity>
        <!--
	FIXME: The clear-key field needs to be verified
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%service%" alarm-type="2" clear-key="uei.opennms.org/nodes/nodeLostService:%dpname%:%nodeid%:%interface%:%service%" />
	-->
	</event>
	<event>
		<uei>uei.opennms.org/nodes/nodeUp</uei>
		<event-label>OpenNMS-defined node event: nodeUp</event-label>
		<descr>
			&lt;p&gt;Node %parm[nodelabel]% which was previously down is
			now up.&lt;/p&gt; &lt;p&gt;This event is generated when node
			outage processing determines that all interfaces on the node
			are up.&lt;/p&gt; &lt;p&gt;This event will cause any active
			outages associated with this node to be cleared.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Node %parm[nodelabel]% is up.
		</logmsg>
		<severity>Normal</severity>
        <!--
	FIXME: The clear-key field needs to be verified
	<alarm-data reduction-key="%uei%:%dpname%:%nodeid%" alarm-type="2" clear-key="uei.opennms.org/nodes/nodeDown:%dpname%:%nodeid%"/>
	-->
	</event>
	<event>
		<uei>uei.opennms.org/nodes/primarySnmpInterfaceChanged</uei>
		<event-label>OpenNMS-defined node event: primarySnmpInterfaceChanged</event-label>
		<descr>
			&lt;p&gt;This event indicates that the interface selected
			for SNMP data collection for this node has changed. This is
			usually due to a network or address reconfiguration
			impacting this device.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Primary SNMP interface for node &lt;a
			href="element/node.jsp?node=%nodeid%"&gt;%nodeid%&lt;/a&gt;
			has changed from %parm[oldPrimarySnmpAddress]% to
			%parm[newPrimarySnmpAddress]%.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/nodes/reinitializePrimarySnmpInterface</uei>
		<event-label>OpenNMS-defined node event: reinitializePrimarySnmpInterface</event-label>
		<descr>
			&lt;p&gt;A change in configuration on this node has been
			detected and the SNMP data collection mechanism is being
			triggered to refresh its required profile of the remote
			node.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			SNMP information on %interface% is being refreshed for data
			collection purposes.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
                <uei>uei.opennms.org/nodes/serviceResponsive</uei>
		<event-label>OpenNMS-defined node event: serviceResponsive</event-label>
		<descr>
			&lt;p&gt;The %service% service which was previously unresponsive
			is now responding normally on interface %interface%.&lt;/p&gt; 
		</descr>
		<logmsg dest='logndisplay'>
			%service% is responding normally on interface %interface%.
		</logmsg>
		<severity>Normal</severity>
        </event>
	<event>
		<uei>uei.opennms.org/nodes/serviceDeleted</uei>
		<event-label>OpenNMS-defined node event: serviceDeleted</event-label>
		<descr>
			&lt;p&gt;Service %service% was deleted from interface
			%interface%, associated with Node ID# %nodeid%.&lt;/p&gt;
			&lt;p&gt;When a service is deleted from an interface, it is
			due to extended downtime of that service of over seven (7)
			days.&lt;/p&gt; &lt;p&gt;If a previously deleted service
			becomes active again on an interface, it will be re-added to
			the OpenNMS database as a new occurrence of that service and
			will be disassociated with any historic outages.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			The %service% service was deleted from interface
			%interface%.
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
                <uei>uei.opennms.org/nodes/serviceUnresponsive</uei>
		<event-label>OpenNMS-defined node event: serviceUnresponsive</event-label>
		<descr>
			&lt;p&gt;The %service% service is up but was unresponsive 
			during the last poll on interface %interface%.&lt;/p&gt; 
		</descr>
		<logmsg dest='logndisplay'>
			%service% is up but unresponsive on interface %interface%.
		</logmsg>
		<severity>Minor</severity>
        </event>
	<event>
		<uei>uei.opennms.org/threshold/highThresholdExceeded</uei>
		<event-label>OpenNMS-defined threshold event: highThresholdExceeded</event-label>
		<descr>
			&lt;p&gt;High threshold exceeded for %service% datasource
                        %parm[ds]% on interface %interface%, parms: %parm[all]%&lt;/p&gt;
                        &lt;p&gt;By default, OpenNMS watches some key parameters
                        on devices in your network and will alert you with
                        an event if certain conditions arise. For example, if
                        the CPU utilization on your Cisco router maintains an
                        inordinately high percentage of utilization for an extended
                        period, an event will be generated. These thresholds are
                        determined and configured based on vendor recommendations,
                        tempered with real-world experience in working
                        deployments.&lt;/p&gt; &lt;p&gt;This specific event
                        indicates that a high threshold was exceeded.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			High threshold exceeded for %service% datasource %parm[ds]% on interface
			%interface%, parms: %parm[all]%
		</logmsg>
		<severity>Warning</severity>
	</event>
	<event>
		<uei>uei.opennms.org/threshold/lowThresholdExceeded</uei>
		<event-label>OpenNMS-defined threshold event: lowThresholdExceeded</event-label>
		<descr>
			&lt;p&gt;Low threshold exceeded for %service% datasource
                        %parm[ds]% on interface %interface%, parms: %parm[all]%.&lt;/p&gt;
                        &lt;p&gt;By default, OpenNMS watches some key parameters
                        on devices in your network and will alert you with
                        an event if certain conditions arise. For example, if
                        the CPU utilization on your Cisco router maintains an
                        inordinately high percentage of utilization for an extended
                        period, an event will be generated. These thresholds are
                        determined and configured based on working experience with
                        real deployments, not vendor recommendation alone.&lt;/p&gt;
                        &lt;p&gt;This specific event indicates that a low threshold
                        was exceeded.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			Low threshold exceeded for %service% datasource %parm[ds]% on interface
			%interface%, parms: %parm[all]%
		</logmsg>
		<severity>Warning</severity>
	</event>
        <event>
                <uei>uei.opennms.org/threshold/highThresholdRearmed</uei>
                <event-label>OpenNMS-defined threshold event: highThresholdRearmed</event-label>
                <descr>
                        &lt;p&gt;High threshold has been rearmed for %service% datasource
                        %parm[ds]% on interface %interface%, parms: %parm[all]%&lt;/p&gt;
                        &lt;p&gt;By default, OpenNMS watches some key parameters
                        on devices in your network and will alert you with
                        an event if certain conditions arise. For example, if
                        the CPU utilization on your Cisco router maintains an
                        inordinately high percentage of utilization for an extended
                        period, an event will be generated. These thresholds are
                        determined and configured based on vendor recommendations,
                        tempered with real-world experience in working
                        deployments.&lt;/p&gt; &lt;p&gt;This specific event
                        indicates that a high threshold was exceeded but then dropped 
			below the rearm threshold..&lt;/p&gt;
                </descr>
                <logmsg dest='logndisplay'>
                        High threshold rearmed for %service% datasource %parm[ds]% on interface
                        %interface%, parms: %parm[all]%
                </logmsg>
                <severity>Normal</severity>
        </event>
        <event>
                <uei>uei.opennms.org/threshold/lowThresholdRearmed</uei>
                <event-label>OpenNMS-defined threshold event: lowThresholdRearmed</event-label>
                <descr>
                        &lt;p&gt;Low threshold has been rearmed for %service% datasource
                        %parm[ds]% on interface %interface%, parms: %parm[all]%.&lt;/p&gt;
                        &lt;p&gt;By default, OpenNMS watches some key parameters
                        on devices in your network and will alert you with
                        an event if certain conditions arise. For example, if
                        the CPU utilization on your Cisco router maintains an
                        inordinately high percentage of utilization for an extended
                        period, an event will be generated. These thresholds are
                        determined and configured based on working experience with
                        real deployments, not vendor recommendation alone.&lt;/p&gt;
                        &lt;p&gt;This specific event indicates that a low threshold
                        was exceeded but then dropped below the rearm threshold.&lt;/p&gt;
                </descr>
                <logmsg dest='logndisplay'>
                        Low threshold rearmed for %service% datasource %parm[ds]% on interface
                        %interface%, parms: %parm[all]%
                </logmsg>
                <severity>Normal</severity>
        </event>
	<event>
		<uei>uei.opennms.org/nodes/assetInfoChanged</uei>
		<event-label>OpenNMS-defined node event: assetInfoChanged</event-label>
		<descr>
			&lt;p&gt;The Asset info for node %nodeid% (%nodelabel%)
			has been changed via the webUI.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;The Asset info for node %nodeid% (%nodelabel%)
			has been changed via the webUI.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event>
		<uei>uei.opennms.org/services/passiveServiceStatus</uei>
		<event-label>OpenNMS-defined service event: passiveServiceStatus</event-label>
		<descr>
			&lt;p&gt;Status information for service %service% has been updated.&lt;/p&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;Status information for service %service% has been updated.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
<!--		
		<alarm-data reduction-key="%uei%:%dpname%:%nodeid%:%interface%:%service%" alarm-type="1"/>
-->
	</event>
	<event>
		<mask>
			<maskelement>
				<mename>id</mename>
				<mevalue>.1.3.6.1.4.1.5813.1</mevalue>
			</maskelement>
			<maskelement>
				<mename>generic</mename>
				<mevalue>6</mevalue>
			</maskelement>
			<maskelement>
				<mename>specific</mename>
				<mevalue>1</mevalue>
			</maskelement>
		</mask>
		<uei>uei.opennms.org/traps/forwardedEvent</uei>
		<event-label>
			OpenNMS-defined SNMP Trap: forwardedEvent
		</event-label>
		<descr>
			&lt;p&gt;An OpenNMS Event has been received as an SNMP Trap
			with the following information:&lt;/p&gt; &lt;UL&gt;
			&lt;LI&gt;Database ID: %parm[#1]% &lt;LI&gt;Distributed
			Poller Name: %parm[#2]% &lt;LI&gt;Event Creation Time:
			%parm[#3]% &lt;LI&gt;Master Station: %parm[#4]%
			&lt;LI&gt;UEI: %parm[#5]% &lt;LI&gt;Source: %parm[#6]%
			&lt;LI&gt;Node ID: %parm[#7]% &lt;LI&gt;Time: %parm[#8]%
			&lt;LI&gt;Host: %parm[#9]% &lt;LI&gt;Interface: %parm[#10]%
			&lt;LI&gt;SNMP Host: %parm[#11]% &lt;LI&gt;Service:
			%parm[#12]% &lt;LI&gt;Description: %parm[#13]%
			&lt;LI&gt;Severity: %parm[#14]% &lt;LI&gt;Path Outage:
			%parm[#15]% &lt;LI&gt;Operator Instructions: %parm[#16]%
			&lt;/UL&gt;
		</descr>
		<logmsg dest='logndisplay'>
			&lt;p&gt;An OpenNMS Event has been received as an SNMP Trap
			with UEI: %parm[#5]%.&lt;/p&gt;
		</logmsg>
		<severity>Normal</severity>
	</event>
	<event-file>/opt/OpenNMS/etc/events/default.events.xml</event-file>
</events>

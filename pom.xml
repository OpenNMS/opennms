<?xml version="1.0" encoding="UTF-8"?> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.opennms</groupId>
    <artifactId>opennms-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>parent</relativePath>
  </parent>

  <!-- OpenNMS Top-Level POM -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opennms</groupId>
  <artifactId>opennms</artifactId>
  <packaging>pom</packaging>
  <name>OpenNMS</name>

  <modules>
    <module>parent</module>

    <!-- new structure -->
    <module>dependencies</module>
    <module>core</module>
    <module>container</module>
    <module>features</module>
    <module>integrations</module>
    <module>protocols</module>
    <module>tests</module>
    <module>integration-tests</module>
    <module>ui</module>

    <!-- old structure -->
    <module>opennms-util</module>
    <module>opennms-bootstrap</module>
    <module>opennms-model</module>
    <module>opennms-ackd</module>
    <module>opennms-alarms</module>
    <module>opennms-config-tester</module>
    <module>opennms-dao-api</module>
    <module>opennms-dao</module>
    <module>opennms-dao-mock</module>
    <module>opennms-icmp</module>
    <module>opennms-javamail</module>
    <module>opennms-rrd</module>
    <module>opennms-config-api</module>
    <module>opennms-config-jaxb</module>
    <module>opennms-config</module>
    <module>opennms-config-model</module>
    <module>opennms-provision</module>
    <module>opennms-enterprise-reporting</module>
    <module>opennms-services</module>
    <module>opennms-taglib</module>
    <module>opennms-jetty</module>
    <module>opennms-correlation</module>
    <module>opennms-web-api</module>
    <module>opennms-web-dependencies</module>
    <module>opennms-webapp</module>
    <module>opennms-webapp-rest</module>
    <module>opennms-wmi</module>
    <module>opennms-asterisk</module>
    <module>opennms-config-dao</module>
  </modules>
  <build>
  <extensions>
    <extension>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh-external</artifactId>
      <version>3.5.2</version>
    </extension>
  </extensions>
   <plugins>
     <plugin>
       <groupId>org.commonjava.maven.plugins</groupId>
       <artifactId>directory-maven-plugin</artifactId>
       <version>1.0</version>
       <executions>
         <execution>
           <id>directories</id>
             <goals><goal>directory-of</goal></goals>
             <phase>initialize</phase>
             <configuration>
               <property>opennms.build.basedir</property>
               <project>
                 <groupId>org.opennms</groupId>
                 <artifactId>opennms</artifactId>
               </project>
             </configuration>
           </execution>
         </executions>
     </plugin>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-eclipse-plugin</artifactId>
       <configuration>
         <additionalConfig>
           <file>
             <name>.settings/org.eclipse.jdt.core.prefs</name>
             <url>https://opennms.svn.sourceforge.net/svnroot/opennms/opennms/trunk/src/main/eclipse/org.eclipse.jdt.core.prefs</url>
           </file>
         </additionalConfig>
       </configuration>
     </plugin>
     <plugin>
       <groupId>org.ops4j</groupId>
       <artifactId>maven-pax-plugin</artifactId>
     </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <!-- Don't specify argLine here or it will override the argLine property value -->
          <skip>${skipSurefire}</skip>
          <systemPropertyVariables>
            <!-- Turn off queuing in the RRD output -->
            <org.opennms.rrd.usequeue>false</org.opennms.rrd.usequeue>
            <java.awt.headless>true</java.awt.headless>
            <java.locale.providers>CLDR,COMPAT</java.locale.providers>
            <mock.debug>${mock.debug}</mock.debug>
            <mock.rundbtests>${mock.rundbtests}</mock.rundbtests>
            <mock.leaveDatabase>${mock.leaveDatabase}</mock.leaveDatabase>
            <mock.leaveDatabaseOnFailure>${mock.leaveDatabaseOnFailure}</mock.leaveDatabaseOnFailure>
            <mock.db.driver>${mock.db.driver}</mock.db.driver>
            <mock.db.url>${mock.db.url}</mock.db.url>
            <mock.db.adminUser>${mock.db.adminUser}</mock.db.adminUser>
            <mock.db.adminPassword>${mock.db.adminPassword}</mock.db.adminPassword>
            <mock.runSnmpTests>${mock.runSnmpTests}</mock.runSnmpTests>
            <mock.snmpHost>${mock.snmpHost}</mock.snmpHost>
            <opennms.library.jicmp>${opennms.library.jicmp}</opennms.library.jicmp>
            <opennms.library.jrrd>${opennms.library.jrrd}</opennms.library.jrrd>
            <install.rrdtool.bin>${install.rrdtool.bin}</install.rrdtool.bin>
            <runRemedyTests>${runRemedyTests}</runRemedyTests>
            <runOtrsTests>${runOtrsTests}</runOtrsTests>
            <runRtTests>${runRtTests}</runRtTests>
            <runMailTests>${runMailTests}</runMailTests>
            <runPingTests>${runPingTests}</runPingTests>
            <skipIpv6Tests>${skipIpv6Tests}</skipIpv6Tests>
            <proxy.port>${proxy.port}</proxy.port>
            <opennms.version>${project.version}</opennms.version>
            <!-- <opennms.unit.test>true</opennms.unit.test> -->
          </systemPropertyVariables>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <rerunFailingTestsCount>${ci.rerunFailingTestsCount}</rerunFailingTestsCount>
          <useModulePath>false</useModulePath>
          <forkedProcessExitTimeoutInSeconds>120</forkedProcessExitTimeoutInSeconds>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- Don't use this! Use the normal -DskipITs=true; this exists only for CI to do some optimizations. -->
          <skip>${skipFailsafe}</skip>
          <!-- Don't specify argLine here or it will override the argLine property value -->
          <systemPropertyVariables>
            <java.locale.providers>CLDR,COMPAT</java.locale.providers>
          </systemPropertyVariables>
          <!--
            Configure failsafe to put reports in the surefire unit test directory so that
            Bamboo and Sonar tally the test results properly.

            https://jira.atlassian.com/browse/BAM-15446
          -->
          <forkCount>1</forkCount>
          <!-- We don't reuse forks - any given test should not take longer than the given timeout -->
          <forkedProcessTimeoutInSeconds>${test.fork.timeout}</forkedProcessTimeoutInSeconds>
          <reuseForks>false</reuseForks>
          <rerunFailingTestsCount>${ci.rerunFailingTestsCount}</rerunFailingTestsCount>
          <skipITs>${skipITs}</skipITs>
          <useModulePath>false</useModulePath>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.atlassian.maven.plugins</groupId>
        <artifactId>maven-clover2-plugin</artifactId>
        <version>${cloverVersion}</version>
        <configuration>
          <generatePdf>true</generatePdf>
          <generateXml>true</generateXml>
          <generateHtml>true</generateHtml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-xjc-plugin</artifactId>
        <version>${cxfXjcVersion}</version>
      </plugin>
    </plugins>
 </build>


 <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.surefire.report.plugin.version}</version>
        <reportSets>
          <reportSet>
            <id>unit-tests</id>
            <reports>
              <report>report-only</report>
            </reports>
          </reportSet>
          <reportSet>
            <id>integration-tests</id>
            <reports>
              <report>failsafe-report-only</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.20.0</version>
        <configuration>
            <targetJdk>1.8</targetJdk>
            <rulesets>
               <!--
               <ruleset>/rulesets/basic-jsf.xml</ruleset>
               <ruleset>/rulesets/basic-jsp.xml</ruleset>
               -->
               <ruleset>/rulesets/basic.xml</ruleset>
               <!--
               <ruleset>/rulesets/braces.xml</ruleset>
               <ruleset>/rulesets/clone.xml</ruleset>
               <ruleset>/rulesets/codesize.xml</ruleset>
               -->
               <ruleset>/rulesets/controversial.xml</ruleset>
               <!--
               <ruleset>/rulesets/coupling.xml</ruleset>
               <ruleset>/rulesets/design.xml</ruleset>
               <ruleset>/rulesets/favorites.xml</ruleset>
               <ruleset>/rulesets/finalizers.xml</ruleset>
               <ruleset>/rulesets/imports.xml</ruleset>
               <ruleset>/rulesets/j2ee.xml</ruleset>
               <ruleset>/rulesets/javabeans.xml</ruleset>
               <ruleset>/rulesets/junit.xml</ruleset>
               <ruleset>/rulesets/logging-jakarta-commons.xml</ruleset>
               <ruleset>/rulesets/logging-java.xml</ruleset>
               <ruleset>/rulesets/migrating.xml</ruleset>
               <ruleset>/rulesets/migrating_to_13.xml</ruleset>
               <ruleset>/rulesets/migrating_to_14.xml</ruleset>
               <ruleset>/rulesets/migrating_to_15.xml</ruleset>
               <ruleset>/rulesets/naming.xml</ruleset>
               <ruleset>/rulesets/optimizations.xml</ruleset>
               <ruleset>/rulesets/scratchpad.xml</ruleset>
               <ruleset>/rulesets/strictexception.xml</ruleset>
               <ruleset>/rulesets/strings.xml</ruleset>
               <ruleset>/rulesets/sunsecure.xml</ruleset>
               <ruleset>/rulesets/typeresolution.xml</ruleset>
               <ruleset>/rulesets/unusedcode.xml</ruleset>
               -->
            </rulesets>
            <format>xml</format>
            <linkXref>true</linkXref>
            <sourceEncoding>utf-8</sourceEncoding>
            <minimumTokens>100</minimumTokens>
         </configuration>
      </plugin>
<!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>
-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>3.3.0</version>
      </plugin>
<!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>2.0</version>
      </plugin>
-->
    </plugins>
  </reporting>

  <properties>
    <!--
      Surefire forked JVM arguments
      @see http://maven.apache.org/surefire/maven-surefire-plugin/examples/system-properties.html

      Use 1.5GB of heap for running tests.

      Set java.security.egd so that entropy exhaustion doesn't cause
      problematic pauses when starting MockSnmpAgent in unit tests.
    -->
    <argLineMemory>-Xmx4g -XX:ReservedCodeCacheSize=1g</argLineMemory>
    <argLineAllowReflection>--add-opens java.base/java.lang=ALL-UNNAMED
        --add-opens=java.desktop/java.beans=ALL-UNNAMED
        --add-opens=java.base/java.io=ALL-UNNAMED
        --add-opens=java.base/java.math=ALL-UNNAMED
        --add-opens=java.base/java.util=ALL-UNNAMED
        --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
        --add-opens=java.base/java.util.regex=ALL-UNNAMED
        --add-opens=java.base/java.net=ALL-UNNAMED
        --add-opens=java.base/java.text=ALL-UNNAMED
        --add-opens=java.sql/java.sql=ALL-UNNAMED</argLineAllowReflection>
    <argLine>${argLineMemory} -Djava.security.egd=file:/dev/./urandom ${argLineAllowReflection}</argLine>
    <skipITs>true</skipITs>
    <runPingTests>false</runPingTests>

    <maxCpus>2</maxCpus>

    <build.skip.tarball>false</build.skip.tarball>

    <maven.eclipse.plugin.version>2.10</maven.eclipse.plugin.version>
    <maven.javadoc.plugin.version>3.4.1</maven.javadoc.plugin.version>
    <maven.pax.plugin.version>1.5</maven.pax.plugin.version>
    <maven.shade.plugin.version>3.3.0</maven.shade.plugin.version>
    <sass.maven.plugin.version>1.1.2-ONMS-20131018-1</sass.maven.plugin.version>

    <!-- turn down the default DEBUG logLevel. Override on the command line if you want -->
    <mock.logLevel>WARN</mock.logLevel>
    <mock.debug>false</mock.debug>
    <mock.rundbtests>true</mock.rundbtests>
    <mock.leaveDatabase>false</mock.leaveDatabase>
    <mock.leaveDatabaseOnFailure>false</mock.leaveDatabaseOnFailure>
    <mock.db.driver>org.postgresql.Driver</mock.db.driver>
    <mock.db.url>jdbc:postgresql://localhost:5432/</mock.db.url>
    <mock.db.adminUser>postgres</mock.db.adminUser>
    <mock.db.adminPassword/>
    <mock.runSnmpTests>false</mock.runSnmpTests>
    <mock.snmpHost>localhost</mock.snmpHost>
    <install.version>${project.version}</install.version>
    <display.version>${install.version}</display.version>
    <opennms.home>${dist.dir}/${dist.name}</opennms.home>
    <opennms.osgi.version>32.0.0.SNAPSHOT</opennms.osgi.version>
    <root.dir>${project.basedir}</root.dir>
    <dist.dir>${root.dir}/target</dist.dir>
    <dist.name>opennms-${project.version}</dist.name>

    <!-- install.prefix: a prefix used for installation in or chroot -->
    <install.prefix/>
    <install.package.name>opennms</install.package.name>
    <install.package.description>OpenNMS</install.package.description>
    <install.dir>${opennms.home}</install.dir>
    <install.init.dir>${install.dir}/bin</install.init.dir>
    <install.webapps.dir>${install.dir}/webapps</install.webapps.dir>
    <install.servlet.dir>${install.webapps.dir}/opennms</install.servlet.dir>
    <install.share.dir>${install.dir}/share</install.share.dir>
    <install.bin.dir>${install.dir}/bin</install.bin.dir>
    <install.contrib.dir>${install.dir}/contrib</install.contrib.dir>
    <install.etc.dir>${install.dir}/etc</install.etc.dir>
    <install.logs.dir>${install.dir}/logs</install.logs.dir>
    <install.pid.file>${install.logs.dir}/opennms.pid</install.pid.file>

    <install.postgresql.service>postgresql</install.postgresql.service>
    <install.database.name>opennms</install.database.name>
    <install.database.user>opennms</install.database.user>
    <install.database.password>opennms</install.database.password>
    <install.database.admin.user>postgres</install.database.admin.user>
    <install.database.admin.password/>
    <install.database.driver>org.postgresql.Driver</install.database.driver>
    <install.database.bindir>/usr/bin</install.database.bindir>
    <install.rrdtool.bin>/usr/bin/rrdtool</install.rrdtool.bin>

    <runMailTests>true</runMailTests>

    <!-- rpm specific -->
    <rpm.install.dir>/opt/opennms</rpm.install.dir>
    <rpm.build.executable>rpmbuild</rpm.build.executable>
    <rpm.build.docs>1</rpm.build.docs>
    <rpm.sign>false</rpm.sign>
    <rpm.buildtests>false</rpm.buildtests>
    <rpm.database.user>opennms</rpm.database.user>
    <rpm.additional.args/>
    <rpm.database.name>opennms</rpm.database.name>
    <rpm.database.password>opennms</rpm.database.password>

    <test.keystore>${project.build.directory}/test-keystore.jks</test.keystore>
    <test.storepass>opennms</test.storepass>
    <test.keyalias>opennms-keystore-key</test.keyalias>
    <test.keypass>opennms</test.keypass>
    <test.dnameCn>cn=${user.name}</test.dnameCn>

    <!-- whether to enable snapshot dependencies when building -->
    <enable.snapshots>false</enable.snapshots>

    <maven.clover.licenseLocation>${user.home}/.m2/clover.license</maven.clover.licenseLocation>

    <!-- CI Settings -->
    <ci.rerunFailingTestsCount>0</ci.rerunFailingTestsCount>
    <!-- Limit ITs to 30 minutes by default -->
    <test.fork.timeout>1800</test.fork.timeout>
  </properties>

  <profiles>
    <profile>
      <id>production</id>
      <activation>
        <property>
          <name>build.type</name>
          <value>production</value>
        </property>
      </activation>
      <properties>
        <skipPdfGeneration>false</skipPdfGeneration>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>jar</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <repositories>
        <!-- Disable snapshots for our own artifacts for release bulds -->
        <repository>
          <id>opennms-ossrh</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
    <profile>
      <id>coverage</id>
      <activation>
        <property>
          <name>coverage</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacocoVersion}</version>
            <configuration>
              <excludes>
                <exclude>org/drools/**/*</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <formats>
                    <format>XML</format>
                  </formats>
                </configuration>
              </execution>
              <execution>
                <id>report-aggregate</id>
                <goals>
                  <goal>report-aggregate</goal>
                </goals>
                <inherited>false</inherited>
                <configuration>
                  <formats>
                    <format>XML</format>
                  </formats>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>enable.license</id>
      <activation>
        <property><name>enable.license</name><value>true</value></property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>enable.snapshots</id>
      <activation>
        <property>
          <name>enable.snapshots</name>
          <value>true</value>
        </property>
      </activation>
      <!--
        Whether to enable pulling snapshot dependencies from remote maven.

        This should match <repositories> in the default reactor, *plus*
        add the `opennms-snapshots` repo. (We skip the eclipse repository
        as it's a special case.)
      -->
      <repositories>
        <repository>
          <id>central</id>
          <name>Maven Central</name>
          <url>https://repo1.maven.org/maven2/</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>opennms-snapshots</id>
          <name>OpenNMS Snapshot Maven Mega-Repository</name>
          <url>https://maven.opennms.org/repository/everything/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>opennms-ossrh</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
      <!--
        Whether to enable pulling snapshot plugin dependencies from remote maven.
      -->
      <pluginRepositories>
        <pluginRepository>
          <id>central</id>
          <name>Maven Central</name>
          <url>https://repo1.maven.org/maven2/</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>opennms-snapshots</id>
          <name>OpenNMS Snapshot Maven Mega-Repository</name>
          <url>https://maven.opennms.org/repository/everything/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.simplify4u.plugins</groupId>
            <artifactId>sign-maven-plugin</artifactId>
            <version>1.0.1</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <skipNoKey>false</skipNoKey>
                  <keyId>701E145FE26283F8C073BAAE697677243260D071</keyId>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>opt-local-rrdtool</id>
      <activation>
        <file>
          <exists>/opt/local/bin/rrdtool</exists>
        </file>
      </activation>
      <properties>
        <install.rrdtool.bin>/opt/local/bin/rrdtool</install.rrdtool.bin>
      </properties>
    </profile>
    <profile>
      <id>fink-rrdtool</id>
      <activation>
        <file>
          <exists>/sw/bin/rrdtool</exists>
        </file>
      </activation>
      <properties>
        <install.rrdtool.bin>/sw/bin/rrdtool</install.rrdtool.bin>
      </properties>
    </profile>
    <profile>
      <id>usr-bin-rrdtool</id>
      <activation>
        <file>
          <exists>/usr/bin/rrdtool</exists>
        </file>
      </activation>
      <properties>
        <install.rrdtool.bin>/usr/bin/rrdtool</install.rrdtool.bin>
      </properties>
    </profile>
    <profile>
      <id>usr-local-bin-rrdtool</id>
      <activation>
        <file>
          <exists>/usr/local/bin/rrdtool</exists>
        </file>
      </activation>
      <properties>
        <install.rrdtool.bin>/usr/local/bin/rrdtool</install.rrdtool.bin>
      </properties>
    </profile>
    <profile>
      <id>usr-local-rrdtool-bin-rrdtool</id>
      <activation>
        <file>
          <exists>/usr/local/rrdtool/bin/rrdtool</exists>
        </file>
      </activation>
      <properties>
        <install.rrdtool.bin>/usr/local/rrdtool/bin/rrdtool</install.rrdtool.bin>
      </properties>
    </profile>
    <!--
         This is for the rrdtool package from Blastwave.org.
         See this for more information:

         http://www.blastwave.org/packages.php/rrdtool
      -->
    <profile>
      <id>solaris-blastwave-rrdtool</id>
      <activation>
      <file>
        <exists>/opt/csw/bin/rrdtool</exists>
      </file>
      </activation>
      <properties>
        <install.rrdtool.bin>/opt/csw/bin/rrdtool</install.rrdtool.bin>
      </properties>
    </profile>
    <profile>
      <id>assemblies</id>
      <modules>
        <module>opennms-full-assembly</module>
      </modules>
    </profile>
    <profile>
      <id>build-bamboo</id>
      <modules>
        <module>opennms-full-assembly</module>
      </modules>
    </profile>
    <profile>
      <id>run-expensive-tasks</id>
      <properties>
        <skipPdfGeneration>false</skipPdfGeneration>
      </properties>
    </profile>
    <profile>
      <id>smoke</id>
      <activation>
        <property>
          <name>smoke</name>
        </property>
      </activation>
      <properties>
        <build.skip.tarball>true</build.skip.tarball>
      </properties>
      <modules>
        <module>smoke-test</module>
      </modules>
    </profile>
    <profile>
      <id>jdk7+</id>
      <activation>
        <jdk>[1.7,9)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.sun.tools.jxc.maven2</groupId>
            <artifactId>maven-jaxb-schemagen-plugin</artifactId>
            <version>1.2</version>
            <dependencies>
              <dependency>
              <groupId>com.sun</groupId>
              <artifactId>tools</artifactId>
              <version>1.8</version>
              <scope>system</scope>
              <systemPath>${java.home}/../lib/tools.jar</systemPath>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>checkstyle</id>
      <activation>
        <property>
          <name>!disable.checkstyle</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>3.2.1</version>
            <dependencies>
              <dependency>
                <groupId>com.github.sevntu-checkstyle</groupId>
                <artifactId>sevntu-checks</artifactId>
                <version>1.41.0</version>
              </dependency>
            </dependencies>
            <configuration>
              <configLocation>${opennms.build.basedir}/src/main/resources/nms_checks.xml</configLocation>
              <suppressionsLocation>${opennms.build.basedir}/src/main/resources/checkstyle-suppressions.xml</suppressionsLocation>
              <!-- <sourceDirectory> is needed so that checkstyle ignores the generated sources directory -->
              <sourceDirectories>${project.build.sourceDirectory}</sourceDirectories>
              <includeResources>true</includeResources>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
              <includeTestResources>true</includeTestResources>
              <failsOnError>false</failsOnError>
              <consoleOutput>true</consoleOutput>
            </configuration>
            <executions>
              <execution>
                <id>check-license</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-resources</phase>
                <configuration>
                  <configLocation>${opennms.build.basedir}/src/main/resources/check-license.xml</configLocation>
                  <suppressionsLocation>${opennms.build.basedir}/src/main/resources/license-suppressions.xml</suppressionsLocation>
                  <headerLocation>${opennms.build.basedir}/src/main/resources/AGPL-LICENSE.regexp.txt</headerLocation>
                  <includeResources>false</includeResources>
                  <includeTestSourceDirectory>true</includeTestSourceDirectory>
                  <includeTestResources>false</includeTestResources>
                  <sourceDirectories>${project.build.sourceDirectory}</sourceDirectories>
                  <failsOnError>false</failsOnError>
                  <consoleOutput>true</consoleOutput>
                </configuration>
              </execution>
              <execution>
                <id>check-style</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-resources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencyManagement>
    <dependencies>
      <!--  opennms dependencies -->
      <!--  PLEASE KEEP THESE IN ALPHABETICAL ORDER -->
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-ackd</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.logging</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.logging.log4j</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.camel</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.config</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.criteria</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.db</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.db.install</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.lib</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.osgid</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.rpc</groupId>
        <artifactId>org.opennms.core.ipc.rpc.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.rpc</groupId>
        <artifactId>org.opennms.core.ipc.rpc.camel</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.rpc</groupId>
        <artifactId>org.opennms.core.ipc.rpc.common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.rpc</groupId>
        <artifactId>org.opennms.core.ipc.rpc.commands</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.rpc</groupId>
        <artifactId>org.opennms.core.ipc.rpc.utils</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.rpc</groupId>
        <artifactId>org.opennms.core.ipc.rpc.xml</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.sink</groupId>
        <artifactId>org.opennms.core.ipc.sink.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.sink</groupId>
        <artifactId>org.opennms.core.ipc.sink.xml</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.ipc.common</groupId>
        <artifactId>org.opennms.core.ipc.common.kafka-shell</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.mate</groupId>
        <artifactId>org.opennms.core.mate.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.mate</groupId>
        <artifactId>org.opennms.core.mate.model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.runtime</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.schema</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.schema</artifactId>
        <classifier>liquibase</classifier>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.snmp</groupId>
        <artifactId>org.opennms.core.snmp.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.soa</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.spring</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.spring-web</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.tasks</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.upgrade</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.web</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.web-assets</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.xml</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.lib</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.activemq</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.camel</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.collection</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.db</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.dns</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.http</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.rest</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.services</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.snmp</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.ssh</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core.test-api</groupId>
        <artifactId>org.opennms.core.test-api.xml</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.dhcpd</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.discovery</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.geocoder</groupId>
        <artifactId>org.opennms.features.geocoder.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.geocoder</groupId>
        <artifactId>org.opennms.features.geocoder.google</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.geocoder</groupId>
        <artifactId>org.opennms.features.geocoder.nominatim</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.jdbc-collector</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.name-cutter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.notifications</groupId>
        <artifactId>org.opennms.features.notifications.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.mib-compiler</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.request-tracker</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.phonebook</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.system-report</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.events</groupId>
        <artifactId>org.opennms.features.events.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.events</groupId>
        <artifactId>org.opennms.features.events.daemon</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.events</groupId>
        <artifactId>org.opennms.features.events.syslog</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.events</groupId>
        <artifactId>org.opennms.features.events.traps</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.enlinkd</groupId>
        <artifactId>org.opennms.features.enlinkd.service.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.enlinkd</groupId>
        <artifactId>org.opennms.features.enlinkd.persistence.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.collectors</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.client-rpc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.persistence.osgi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.persistence.rrd</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.test-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.thresholding.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.collection</groupId>
        <artifactId>org.opennms.features.collection.persistence.tcp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.poller</groupId>
        <artifactId>org.opennms.features.poller.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.poller</groupId>
        <artifactId>org.opennms.features.poller.client-rpc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.poller</groupId>
        <artifactId>org.opennms.features.poller.shell</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.instrumentationLogReader</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>org.opennms.features.springframework-security</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.reporting</groupId>
        <artifactId>org.opennms.features.reporting.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.reporting</groupId>
        <artifactId>org.opennms.features.reporting.core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.reporting</groupId>
        <artifactId>org.opennms.features.reporting.dao</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.reporting</groupId>
        <artifactId>org.opennms.features.reporting.sdo</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.reporting</groupId>
        <artifactId>org.opennms.features.reporting.model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.reporting</groupId>
        <artifactId>org.opennms.features.reporting.jasper-reports</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.reporting</groupId>
        <artifactId>org.opennms.features.reporting.availability</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.reporting</groupId>
        <artifactId>org.opennms.features.reporting.repository</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.ticketing</groupId>
        <artifactId>org.opennms.features.ticketing.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.provisioning</groupId>
        <artifactId>org.opennms.features.provisioning.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.provisioning</groupId>
        <artifactId>org.opennms.features.provisioning.lib</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.topology</groupId>
        <artifactId>org.opennms.features.topology.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>vaadin</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-map-provisioning-adapter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-wsman-asset-provisioning-adapter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-snmp-asset-provisioning-adapter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-snmp-hardware-inventory-provisioning-adapter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-geoip-provisioning-adapter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-snmp-metadata-provisioning-adapter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.assemblies</groupId>
        <artifactId>org.opennms.assemblies.webapp-full</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-alarmd</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-alarm-northbounder-email</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-alarm-northbounder-syslog</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-alarm-northbounder-snmptrap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-alarm-northbounder-jms</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-alarm-northbounder-bsf</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-alarm-northbounder-drools</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>drools-correlation-engine</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-mock-simpleserver</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.tests</groupId>
        <artifactId>org.opennms.tests.mock-snmp-agent</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>activemq-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>activemq-web-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>atomikos-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>aws-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>camel-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>camel-test-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>liquibase-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>felix-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>geronimo-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>gwt-maps-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jackson1-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jackson2-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jasypt-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>javamail-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jaxb-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jcifs-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jfreechart-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jinterop-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jna-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jradius-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jrobin-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jrrd-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jrrd2-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jstl-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>oia-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>pax-exam-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>quartz-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>servlet-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>spring-security-core-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>spring-security-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-bootstrap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config-jaxb</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config-model</artifactId>
        <version>${project.version}</version>
        <classifier>xsds</classifier>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config-tester</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config-utils</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-correlator</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.daemon</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-dao</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-dao-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-dao-mock</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-base-assembly</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-bsf</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-datagram</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-dhcp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-generic</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-jdbc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-jmx</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-jms</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-rdns-lookup</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-lineoriented</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-simple</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-ssh</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detector-web</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-detectorclient-rpc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-provision-command</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-requisition-service</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>drools-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>hibernate-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-full-assembly</artifactId>
        <version>${project.version}</version>
        <type>tar.gz</type>
        <classifier>dist</classifier>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-icmp-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-icmp-jni</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-icmp-jni6</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-icmp-jna</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-icmp-best</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.icmp-jna</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-javamail-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>opennms-integration-otrs</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>opennms-integration-otrs-31</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>opennms-integration-rt</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>opennms-integration-remedy</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-install</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>cxf-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-jetty</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>mina-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>netty-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-model</artifactId>
        <version>${project.version}</version>
        <classifier>xsds</classifier>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-provision-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-provision-persistence</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-provision-persistence</artifactId>
        <version>${project.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-provisiond</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>jmxconfiggenerator</artifactId>
        <classifier>onejar</classifier>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.tests</groupId>
        <artifactId>org.opennms.tests.mock-elements</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.core</groupId>
        <artifactId>org.opennms.core.jstl-support</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-reportd</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrd-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrd-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrdtool-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrdcached-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrd-jrobin</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrd-tcp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-services</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.measurements</groupId>
        <artifactId>org.opennms.features.measurements.api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.measurements</groupId>
        <artifactId>org.opennms.features.measurements.impl</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-site</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jasper-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>spring-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>spring-web-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>spring-test-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-util</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-version</artifactId>
        <version>${project.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-web-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-web-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-webapp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-webapp</artifactId>
        <version>${project.version}</version>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-webapp</artifactId>
        <version>${project.version}</version>
        <type>tar.gz</type>
        <classifier>meta-inf</classifier>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-webapp</artifactId>
        <version>${project.version}</version>
        <type>tar.gz</type>
        <classifier>lib</classifier>
      </dependency>
      <dependency>
        <groupId>org.opennms.features</groupId>
        <artifactId>root-webapp</artifactId>
        <version>${project.version}</version>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-webapp-ng</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-wmi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-vmware</artifactId>
        <version>${project.version}</version>
      </dependency>
     <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>newts-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>smack-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-asterisk</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>asterisk-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>dnsjava-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>snmp4j-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>snmp4j-agent-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>snmp-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>snmp-test-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>twitter4j-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>tracker-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>jmx-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>owasp-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.opennms.features.vaadin-components</groupId>
        <artifactId>extender-service</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms.dependencies</groupId>
        <artifactId>groovy-dependencies</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>

<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.opennms</groupId>
    <artifactId>org.opennms.core</artifactId>
    <version>25.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opennms.core</groupId>
  <artifactId>org.opennms.core.web-assets</artifactId>
  <name>OpenNMS Web UI Assets (JavaScript &amp; CSS)</name>
  <packaging>bundle</packaging>

  <properties>
    <skipNodeJSBuild>false</skipNodeJSBuild>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- https://github.com/eirslett/frontend-maven-plugin -->
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontendPluginVersion}</version>
          <configuration>
            <installDirectory>target</installDirectory>
            <srcdir>${basedir}/src/main/assets</srcdir>
            <triggerfiles>
              <triggerfile>package.json</triggerfile>
            </triggerfiles>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.build.directory}</directory>
            </fileset>
            <fileset>
              <directory>${project.basedir}/node_modules</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <!-- https://github.com/eirslett/frontend-maven-plugin -->
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <skip>${skipNodeJSBuild}</skip>
              <nodeVersion>${nodeVersion}</nodeVersion>
            </configuration>
          </execution>
          <execution>
            <id>install dependencies</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <skip>${skipNodeJSBuild}</skip>
              <arguments>--prefer-offline --no-progress install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>build release</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <skip>${skipNodeJSBuild}</skip>
              <arguments>--prefer-offline --no-progress run release</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/dist.xml</descriptor>
          </descriptors>
          <overrideUid>0</overrideUid>
          <overrideGid>0</overrideGid>
          <tarLongFileMode>posix</tarLongFileMode>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>
            <Export-Package>org.opennms.web.assets.api.*</Export-Package>
            <Include-Resource>
              {maven-resources},
              assets=target/dist/assets
            </Include-Resource>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>runJSTests</id>
      <activation>
        <property>
          <name>skipITs</name>
          <value>false</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>run tests</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <arguments>--prefer-offline --no-progress run maven-test</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- When building the packages in assemble only mode don't install or run Node.js -->
      <id>skipCompile</id>
      <properties>
        <skipNodeJSBuild>true</skipNodeJSBuild>
      </properties>
    </profile>
    <profile>
      <id>forceCompile</id>
      <activation>
        <file><missing>target/dist/assets/opennms.js</missing></file>
      </activation>
      <properties>
        <skipNodeJSBuild>false</skipNodeJSBuild>
      </properties>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${jsonVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.core</groupId>
      <artifactId>org.opennms.core.lib</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.core</groupId>
      <artifactId>org.opennms.core.sysprops</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.core</groupId>
      <artifactId>org.opennms.core.logging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>servlet-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>spring-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>spring-web-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.test-api</groupId>
      <artifactId>org.opennms.core.test-api.lib</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>

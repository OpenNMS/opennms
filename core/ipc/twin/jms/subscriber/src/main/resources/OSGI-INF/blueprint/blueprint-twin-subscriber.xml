<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
           xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd
		http://camel.apache.org/schema/blueprint
		http://camel.apache.org/schema/blueprint/camel-blueprint-2.19.1.xsd
">

    <cm:property-placeholder id="ipcProperties"
                             persistent-id="org.opennms.core.ipc.twin.jms.subscriber" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="body.debug" value="-1" />
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Provided by minion-core -->
    <reference id="minionIdentity" interface="org.opennms.distributed.core.api.MinionIdentity" />

    <!-- Provided by jms service-->
    <reference id="queuingservice" interface="org.apache.camel.Component" filter="(alias=opennms.broker)" />

    <reference id="tracerRegistry" interface="org.opennms.core.tracing.api.TracerRegistry"/>

    <bean id="jmsTwinSubscriber" class="org.opennms.core.ipc.twin.jms.subscriber.JmsTwinSubscriber"
    init-method="init" destroy-method="close">
        <argument ref="minionIdentity"/>
        <argument ref="queuingservice"/>
        <argument ref="tracerRegistry"/>
        <argument value="${body.debug}"/>
    </bean>

    <service ref="jmsTwinSubscriber" interface="org.opennms.core.ipc.twin.api.TwinSubscriber"/>

    <bean id="jmsTwinPreProcessor" class="org.opennms.core.ipc.twin.jms.subscriber.JmsTwinRpcPreProcessor"/>

    <camelContext id="twinRpcClient" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- Exchanges contain credentials, so avoid logging them -->
        <properties>
            <property key="CamelLogDebugBodyMaxChars" value="{{body.debug}}"/>
        </properties>

        <route id="twinRpcClient">
            <from uri="direct:twinRpc" />
            <bean ref="jmsTwinPreProcessor"/>
            <setExchangePattern pattern="InOut"/>
            <recipientList>
                <simple>queuingservice:${header.JmsQueueName}</simple>
            </recipientList>
        </route>
    </camelContext>


</blueprint>

<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd" >

  <changeSet author="rangerrick" id="drop_view_node_outages" runAlways="true">
    <preConditions onFail="MARK_RAN">
      <viewExists viewName="node_outages" />
    </preConditions>

    <dropView viewName="node_outages" />
    <dropView viewName="node_outage_status" />
  </changeSet>

  <changeSet author="rangerrick" id="view_node_outages" runAlways="true">

    <createView replaceIfExists="true" viewName="node_outage_status">
      SELECT
        node.nodeid,
        CASE
          WHEN tmp.severity IS NULL OR tmp.severity &lt; 3 THEN 3
          ELSE tmp.severity
        END AS max_outage_severity
      FROM (
        SELECT
          events.nodeid,
          max(events.eventseverity) AS severity
        FROM events
        JOIN outages ON outages.svclosteventid = events.eventid
        WHERE
          outages.ifregainedservice IS NULL
          AND outages.perspective IS NULL
        GROUP BY events.nodeid
      ) AS tmp
      RIGHT JOIN node ON tmp.nodeid = node.nodeid
    </createView>
    <createView replaceIfExists="true" viewName="node_outages">
      SELECT
        outages.outageid,
        outages.svclosteventid,
        outages.svcregainedeventid,
        outages.iflostservice,
        outages.ifregainedservice,
        outages.ifserviceid,
        e.eventuei AS svclosteventuei,
        e.eventsource,
        e.alarmid,
        e.eventseverity,
        outages.ifregainedservice IS NOT NULL AS resolved,
        s.servicename,
        i.serviceid,
        ipif.ipaddr,
        COALESCE(outages.ifregainedservice - outages.iflostservice, now() - outages.iflostservice) AS duration,
        nos.max_outage_severity,
        nc.*
      FROM outages
        JOIN events e ON outages.svclosteventid = e.eventid
        JOIN ifservices i ON outages.ifserviceid = i.id
        JOIN service s ON i.serviceid = s.serviceid
        JOIN ipinterface ipif ON i.ipinterfaceid = ipif.id
        JOIN node_categories nc ON nc.nodeid = e.nodeid
        JOIN node_outage_status nos ON nc.nodeid = nos.nodeid
        WHERE outages.perspective IS NULL
    </createView>

  </changeSet>
</databaseChangeLog>

<?xml version="1.0"?>
<schema targetNamespace="http://xmlns.opennms.org/xsd/config/linkd"
	xmlns="http://www.w3.org/2001/XMLSchema"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:this="http://xmlns.opennms.org/xsd/config/linkd"
	xmlns:ns2="http://www.w3.org/1999/xhtml"
	xmlns:ns="http://www.w3.org/2001/XMLSchema"
	xmlns:hfp="http://www.w3.org/2001/XMLSchema-hasFacetAndProperty"
	elementFormDefault="qualified">
	<annotation>
		<documentation>
			XML Schema for the linkd-configuration.xml configuration file.
		</documentation>
	</annotation>

	<element name="linkd-configuration">
		<annotation>
			<documentation>
				Top-level element for the linkd-configuration.xml
				configuration file.
			</documentation>
		</annotation>

		<complexType>
			<sequence>
                <element ref="this:iproutes" minOccurs="0" maxOccurs="1">
                        <annotation>
                                <documentation>
                                        A section to get specific Vendors ipRoute
                                        informations that are used to get ipRoute tables on nodes.
                                </documentation>
                        </annotation>
                </element>

				<element ref="this:vlans" minOccurs="1" maxOccurs="1">
					<annotation>
						<documentation>
							A section to get specific Vendors Vlan
							informations that are used to get vlan tables on nodes.
						</documentation>
					</annotation>
				</element>

				<element maxOccurs="unbounded" minOccurs="1"
					ref="this:package">
					<annotation>
						<documentation>
							Package encapsulating addresses, data to be
							collected for these addresses, etc..
						</documentation>
					</annotation>
				</element>

			</sequence>

			<attribute name="threads" type="int" use="required">
				<annotation>
					<documentation>
						The max number of threads used for polling snmp
						devices and discovery links.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="initial_sleep_time" type="long"
				use="required">
				<annotation>
					<documentation>
						The initial sleep time in mill seconds before starting
						Snmp Collection.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="snmp_poll_interval" type="long"
				use="required">
				<annotation>
					<documentation>
						Snmp Poll Time interval in mill seconds.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="discovery_link_interval" type="long"
				use="required">
				<annotation>
					<documentation>
						Time interval in mill seconds from last snmp collection
						and link discovery.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="auto-discovery" type="boolean"
				use="optional" default="false">
				<annotation>
					<documentation>
						Whether Linkd should generate newSuspect events
						for ip addresses unknown to OpenNMS found on nodes snmp tables.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="enable-vlan-discovery" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether SnmpCollection has to collect snmp Vlan tables on devices.
						The Vlan data collection is made using the classes defined in vlans elements.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-cdp-discovery" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether links discovery process should use
						cisco discovery protocol snmp tables.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-ip-route-discovery" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether links discovery process should use
						ip route tables.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-bridge-discovery" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether links discovery process should use
						snmp bridge and spanning tree tables.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-lldp-discovery" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether links discovery process should use
						link layer discovery protocol mib data.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-ospf-discovery" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether links discovery process should use
						ospf mib data.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-isis-discovery" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether links discovery process should use
						isis mib data.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-wifi-discovery" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether links discovery process should use
						wifi mib data.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="save-route-table" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether Linkd has to save snmp ip route tables to database
					</documentation>
				</annotation>
			</attribute>

			<attribute name="save-stp-node-table" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether Linkd has save bridge base informations to database.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="save-stp-interface-table" type="boolean"
				use="optional" default="true">
				<annotation>
					<documentation>
						Whether Linkd has to save to database bridge interfaces informations to database.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="force-ip-route-discovery-on-ethernet" type="boolean"
				use="optional" default="false" >
				<annotation>
					<documentation>
						Whether Linkd has to find links using ip route tables
						on ethernet interfaces.
					</documentation>
				</annotation>
			</attribute>

		</complexType>
	</element>

    <element name="iproutes">
            <complexType>
                    <sequence>
                            <!---  -->
                            <element ref="this:vendor" minOccurs="1"
                                    maxOccurs="unbounded">
                                    <annotation>
                                            <documentation>
                                                    Identifies the classes to get ipRouute from
                                                    specific vendor devices sysoids.
                                            </documentation>
                                    </annotation>
                            </element>
                    </sequence>
            </complexType>
    </element>

	<element name="vlans">
		<complexType>
			<sequence>
				<!---  -->
				<element ref="this:vendor" minOccurs="1"
					maxOccurs="unbounded">
					<annotation>
						<documentation>
							Identifies the classes to get Vlans from
							specific vendor devices sysoids.
						</documentation>
					</annotation>
				</element>
			</sequence>
		</complexType>
	</element>

	<element name="vendor">
		<complexType>
			<sequence>
				<element name="specific" type="string" minOccurs="1"
					maxOccurs="unbounded">
					<annotation>
						<documentation>
							Specific sysoid submask node to be polled to
							get vlan.
						</documentation>
					</annotation>
				</element>

				<element ref="this:include-range" minOccurs="0"
					maxOccurs="unbounded">
					<annotation>
						<documentation>
							Range of sysoids submask nodes to be polled
							to get vlan
						</documentation>
					</annotation>
				</element>

				<!--- -->
				<element ref="this:exclude-range" minOccurs="0"
					maxOccurs="unbounded">
					<annotation>
						<documentation>
							Range of sysoid submask nodes to be excluded
							from the polling to get vlan
						</documentation>
					</annotation>
				</element>

			</sequence>

			<!---  -->
			<attribute name="vendor_name" type="string"
				use="required">
				<annotation>
					<documentation>Vendor identifier.</documentation>
				</annotation>
			</attribute>

			<!---  -->
			<attribute name="sysoidRootMask" type="string"
				use="required">
				<annotation>
					<documentation>
						Vendor sysoid root identifier.
					</documentation>
				</annotation>
			</attribute>

			<!--  -->
			<attribute name="class-name" type="string" use="required">
				<annotation>
					<documentation>
						Java Class Name to get Vlans Info on matching
						Sysoids.
					</documentation>
				</annotation>
			</attribute>

		</complexType>
	</element>

	<element name="include-range">
		<complexType>
	<attribute name="begin" type="string" use="required">
        <annotation>
          <documentation>Starting address of the range.</documentation>
        </annotation>
      </attribute>

      <attribute name="end" type="string" use="required">
        <annotation>
          <documentation>Ending address of the range.</documentation>
        </annotation>
      </attribute>

		</complexType>
	</element>

	<!--- the range of addresses to be excluded from the polling -->
	<element name="exclude-range">
		<complexType>
	<attribute name="begin" type="string" use="required">
        <annotation>
          <documentation>Starting address of the range.</documentation>
        </annotation>
      </attribute>

      <attribute name="end" type="string" use="required">
        <annotation>
          <documentation>Ending address of the range.</documentation>
        </annotation>
      </attribute>
		</complexType>
	</element>

	<element name="package">
		<annotation>
			<documentation>
				Package encapsulating addresses to performs the Discovery
				of Links among them.
			</documentation>
		</annotation>

		<complexType>
			<sequence>
				<element maxOccurs="1" minOccurs="1"
					ref="this:filter">
					<annotation>
						<documentation>
							A rule which adresses belonging to this
							package must pass. This package is applied
							only to addresses that pass this filter.
						</documentation>
					</annotation>
				</element>

				<element maxOccurs="unbounded" minOccurs="0"
					name="specific" type="string">
					<annotation>
						<documentation>
							Adresses in this package
						</documentation>
					</annotation>
				</element>

				<element maxOccurs="unbounded" minOccurs="0"
					ref="this:include-range">
					<annotation>
						<documentation>
							Range of adresses in this package.
						</documentation>
					</annotation>
				</element>

				<element maxOccurs="unbounded" minOccurs="0"
					ref="this:exclude-range">
					<annotation>
						<documentation>
							Range of adresses to be excluded from this
							package.
						</documentation>
					</annotation>
				</element>

				<element maxOccurs="unbounded" minOccurs="0"
					name="include-url" type="string">
					<annotation>
						<documentation>
							A file URL holding specific addresses to be
							polled. Each line in the URL file can be one
							of: &lt;IP&gt;&lt;space&gt;#&lt;comments&gt;
							or &lt;IP&gt; or #&lt;comments&gt;. Lines
							starting with a '#' are ignored and so are
							characters after a '&lt;space&gt;#' in a
							line.
						</documentation>
					</annotation>
				</element>


			</sequence>

			<attribute name="name" type="string" use="required">
				<annotation>
					<documentation>
						Name or identifier for this package.
					</documentation>
				</annotation>
			</attribute>

			<attribute name="snmp_poll_interval" type="long">
				<annotation>
					<documentation>
						OverWrite link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="discovery_link_interval" type="long">
				<annotation>
					<documentation>
						OverWrite link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="auto-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="enable-vlan-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-cdp-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-ip-route-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-bridge-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-lldp-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-ospf-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-isis-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="use-wifi-discovery" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="save-route-table" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="save-stp-node-table" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="save-stp-interface-table" type="boolean">
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>

			<attribute name="force-ip-route-discovery-on-ethernet" type="boolean" use="optional" default="false" >
				<annotation>
					<documentation>
						OverWrite default value of link-configuration corresponding attribute
					</documentation>
				</annotation>
			</attribute>


		</complexType>

	</element>

	<element name="filter">
		<annotation>
			<documentation>
				A rule which addresses belonging to this package must
				pass. This package is applied only to addresses that
				pass this filter
			</documentation>
		</annotation>

		<complexType>
			<simpleContent>
				<extension base="string" />
			</simpleContent>
		</complexType>
	</element>


</schema>

<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="http://xmlns.opennms.org/xsd/config/rancid/adapter"
        xmlns="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:this="http://xmlns.opennms.org/xsd/config/rancid/adapter"
        xmlns:ns2="http://www.w3.org/1999/xhtml"
		  xmlns:hfp="http://www.w3.org/2001/XMLSchema-hasFacetAndProperty"
		  elementFormDefault="qualified">
  <annotation>
    <documentation>XML Schema for the rancid-configuration.xml configuration file. Version: $Id$</documentation>
  </annotation>
   
  <element name="rancid-configuration">
	    <annotation>
	        <documentation>Top-level element for the rancid-configuration.xml configuration file.</documentation>
	    </annotation>
	
		<complexType>
	    	<sequence>
	 	        <element minOccurs="0" maxOccurs="1" ref="this:policies"/>
	 	        <element minOccurs="0" maxOccurs="unbounded" ref="this:mapping"/>
	 		</sequence>
	 		
	       	<attribute name="delay" type="long" use="required">
		        <annotation>
		          <documentation>The time in sec to wait before trying
		          to set the download flag to up in router.db.
		          If schedule is there then it is verified if you are able
		           to write to router.db in rancid.
		           Otherwise you wait until schedule let you write on rancid.
		          </documentation>
		        </annotation>
		    </attribute>
	 		
		    <attribute name="retries" type="int" use="required">
		        <annotation>
	    	      <documentation>The maximum number of retry before
	    	      sending a failure.</documentation>
	        	</annotation>
	      	</attribute>

		    <attribute name="useCategories" type="boolean" use="optional" default="false">
		        <annotation>
	    	      <documentation>If you want to use opennms categories
	    	      to match rancid device type.</documentation>
	        	</annotation>
	      	</attribute>

			<attribute name="default-type" type="string" use="optional" default="cisco">
        		<annotation>
          			<documentation>The Default Rancid type, it is used when no device type
          			for provisioned node is found.
          			</documentation>
        		</annotation>
      		</attribute>
			
	   </complexType>
	 </element>      
      
   <element name="policies">
    <annotation>
      <documentation>Configuration of Policy
      functionality</documentation>
    </annotation>

    <complexType>
      <sequence>
        <annotation>
          <documentation>Management policy for Rancid</documentation>
        </annotation>

        <element maxOccurs="unbounded" minOccurs="1" ref="this:policy-manage"/>
        
      </sequence>
    </complexType>
  </element>

  <element name="policy-manage">
    <annotation>
      <documentation>This represents a policy to manage a provisioned node
      if matched a node will be added updated or deleted using
      the element attribute definitions .</documentation>
    </annotation>

    <complexType>

      <sequence>
        <annotation>
          <documentation>General Scheduling Property 
          you set the date and time for which do scheduling</documentation>
        </annotation>
        <element minOccurs="1" maxOccurs="1" ref="this:package"/>
        <element maxOccurs="unbounded" minOccurs="0" ref="this:schedule"/>
      </sequence>

      <attribute name="name" type="string" use="required">
        <annotation>
          <documentation>The name of the policy
          </documentation>
        </annotation>
      </attribute>

      <attribute name="delay" type="long" use="optional">
        <annotation>
          <documentation>The time in sec to wait before trying
          to set the download flag to up in router.db.
          If schedule is there then it is verified if you are able
           to write to router.db in rancid.
           Otherwise you wait until schedule let you write on rancid.
          </documentation>
        </annotation>
      </attribute>

    <attribute name="retries" type="int" use="optional">
        <annotation>
   	      <documentation>The maximum number of retry before
   	      sending a failure.</documentation>
       	</annotation>
     	</attribute>

    <attribute name="useCategories" type="boolean" use="optional">
        <annotation>
   	      <documentation>If you want to use opennms categories
   	      to match rancid device type.</documentation>
       	</annotation>
     	</attribute>

	<attribute name="default-type" type="string" use="optional">
      		<annotation>
        			<documentation>The Default Rancid type, it is used when no device type
        			for provisioned node is found.
        			</documentation>
    		</annotation>
  		</attribute>

    </complexType>

  </element>
   
  <element name="package">
    <annotation>
      <documentation>Package encapsulating addresses, services to be polled
      for these addresses, etc..</documentation>
    </annotation>

    <complexType>
      <sequence>
        <element maxOccurs="1" minOccurs="1" ref="this:filter">
          <annotation>
            <documentation>A rule which addresses belonging to this package
            must pass. This package is applied only to addresses that pass
            this filter.</documentation>
          </annotation>
        </element>

        <element maxOccurs="unbounded" minOccurs="0" name="specific"
                 type="string">
          <annotation>
            <documentation>Addresses in this package</documentation>
          </annotation>
        </element>

        <element maxOccurs="unbounded" minOccurs="0" ref="this:include-range">
          <annotation>
            <documentation>Range of addresses in this package.</documentation>
          </annotation>
        </element>

        <element maxOccurs="unbounded" minOccurs="0" ref="this:exclude-range">
          <annotation>
            <documentation>Range of addresses to be excluded from this
            package.</documentation>
          </annotation>
        </element>

        <element maxOccurs="unbounded" minOccurs="0" name="include-url"
                 type="string">
          <annotation>
            <documentation>A file URL holding specific addresses to be polled.
            Each line in the URL file can be one of:
            &lt;IP&gt;&lt;space&gt;#&lt;comments&gt; or &lt;IP&gt; or
            #&lt;comments&gt;. Lines starting with a '#' are ignored and so
            are characters after a '&lt;space&gt;#' in a line.</documentation>
          </annotation>
        </element>

      </sequence>

      <attribute name="name" type="string" use="required">
        <annotation>
          <documentation>Name or identifier for this package.</documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="filter">
    <annotation>
      <documentation>A rule which addresses belonging to this package must
      pass. This package is applied only to addresses that pass this
      filter</documentation>
    </annotation>

    <complexType>
      <simpleContent>
        <extension base="string"/>
      </simpleContent>
    </complexType>
  </element>

  <element name="include-range">
    <annotation>
      <documentation>Range of addresses to be included in this
      package.</documentation>
    </annotation>

    <complexType>
      <attribute name="begin" type="string" use="required">
        <annotation>
          <documentation>Starting address of the range.</documentation>
        </annotation>
      </attribute>

      <attribute name="end" type="string" use="required">
        <annotation>
          <documentation>Ending address of the range.</documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="exclude-range">
    <annotation>
      <documentation>Range of addresses to be excluded from this
      package.</documentation>
    </annotation>

    <complexType>
      <attribute name="begin" type="string" use="required">
        <annotation>
          <documentation>Starting address of the range.</documentation>
        </annotation>
      </attribute>

      <attribute name="end" type="string" use="required">
        <annotation>
          <documentation>Ending address of the range.</documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="mapping">
    <annotation>
      <documentation>A map from sysoids masks and rancid device type.</documentation>
    </annotation>

    <complexType>
      <attribute name="sysoid-mask" type="string" use="required">
        <annotation>
          <documentation>sysoid to match.</documentation>
        </annotation>
      </attribute>

     <attribute name="sysdescr-match" type="string" use="optional">
        <annotation>
          <documentation>regular expression to match sysdescription.</documentation>
        </annotation>
      </attribute>

      <attribute name="type" type="string" use="required">
        <annotation>
          <documentation>The rancid device type 
          for the specified sysoid mask.</documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>
      
  <element name="schedule">
    <annotation>
      <documentation>This is a time when you can schedule set up/down
      to rancid</documentation>
    </annotation>

    <complexType>
      <complexContent>
        <extension base="this:basicSchedule"/>
      </complexContent>
    </complexType>
  </element>
      
  <complexType name="basicSchedule">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="1" ref="this:time">
        <annotation>
          <documentation>defines start/end time for the outage</documentation>
        </annotation>
      </element>
    </sequence>

    <attribute name="name" type="string" use="required">
      <annotation>
        <documentation>outage name</documentation>
      </annotation>
    </attribute>

    <attribute name="type" use="required">
      <annotation>
        <documentation>outage type</documentation>
      </annotation>

      <simpleType>
        <restriction base="string">
          <pattern value="(specific|daily|weekly|monthly)"/>
        </restriction>
      </simpleType>
    </attribute>
  </complexType>

  <element name="time">
    <annotation>
      <documentation>defines start/end time for the outage</documentation>
    </annotation>

    <complexType>
    
      <attribute name="id" use="optional" type="string">
        <annotation>
          <documentation>
          	an identifier for this event used for reference in the web gui.  If this
          	identifer is not assigned it will be assigned an identifer by web gui.
          </documentation>
        </annotation>
      </attribute>
          	
      <attribute name="day" use="optional">

        <simpleType>
          <restriction base="string">
            <pattern value="(monday|tuesday|wednesday|thursday|friday|saturday|sunday|[1-3][0-9]|[1-9])"/>
          </restriction>
        </simpleType>
      </attribute>

      <attribute name="begins" use="required">
        <annotation>
          <documentation>when the outage starts</documentation>
        </annotation>

        <simpleType>
          <restriction base="string">
            <pattern value="((^[0-9]{2}-[A-Za-z]{3}-[12][0-9]{3}[ ]+([0-9]{2}:){2}[0-9]{2})|(^([0-9]{2}:){2}[0-9]{2}))">
              <annotation>
                <documentation>Requires format of 'dd-MMM-yyyy HH:mm:ss' or
                'HH:mm:ss'</documentation>
              </annotation>
            </pattern>
          </restriction>
        </simpleType>
      </attribute>

      <attribute name="ends" use="required">
        <annotation>
          <documentation>when the outage ends</documentation>
        </annotation>

        <simpleType>
          <restriction base="string">
            <pattern value="((^[0-9]{2}-[A-Za-z]{3}-[12][0-9]{3}[ ]+([0-9]{2}:){2}[0-9]{2})|(^([0-9]{2}:){2}[0-9]{2}))">
              <annotation>
                <documentation>Requires format of 'dd-MMM-yyyy HH:mm:ss' or
                'HH:mm:ss'</documentation>
              </annotation>
            </pattern>
          </restriction>
        </simpleType>
      </attribute>
    </complexType>
  </element>


</schema>

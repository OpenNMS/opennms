<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:onmsgi="http://xmlns.opennms.org/xsd/spring/onms-osgi"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://xmlns.opennms.org/xsd/spring/onms-osgi http://xmlns.opennms.org/xsd/spring/onms-osgi.xsd
       ">

  <context:annotation-config />
  <cache:annotation-driven />

  <!-- Spring Cache Manager -->
  <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
    <property name="caches">
      <set>
        <!-- For JdbcFilterDao -->
        <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
          <property name="name" value="activeIpAddressList"/>
        </bean>
      </set>
    </property>
  </bean>

  <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    <!-- 
      We need to ignore unresolvable placeholders since if multiple PropertyPlaceholderConfigurer
      preprocessors are in use in a single context (such as inside unit tests), Spring will encounter
      the issue documented here:

      https://jira.springsource.org/browse/SPR-6428

      TODO: Fix this behavior after upgrading to Spring 3.1.
    -->
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
    <property name="properties">
      <props>
        <prop key="importer.foreign-source.dir">${opennms.home}/etc/foreign-sources</prop>
        <prop key="importer.requisition.dir">${opennms.home}/etc/imports</prop>
      </props>
    </property>
  </bean>

  <!-- 
    DataSourceFactory has been changed to return TransactionAwareDataSources so
    legacy code can participate in transactions properly.
  -->
  <bean id="dataSource" class="org.opennms.core.db.DataSourceFactoryBean" />

  <onmsgi:service interface="javax.sql.DataSource" ref="dataSource"/>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <bean id="timeKeeper" class="org.opennms.netmgt.collection.support.DefaultTimeKeeper" />

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan">
      <list>
        <!-- TODO: Move into org.opennms.netmgt.model -->
        <value>org.opennms.netmgt.bsm</value>
        <!-- TODO: Move into org.opennms.netmgt.model -->
        <value>org.opennms.netmgt.config.monitoringLocations</value>
        <value>org.opennms.netmgt.dao.hibernate</value>
        <value>org.opennms.netmgt.model</value>
      </list>
    </property>
    <!--  property name="schemaUpdate" value="true">
      </property -->
    <property name="annotatedPackages">
      <list>
        <value>org.opennms.netmgt.dao.hibernate</value>
        <value>org.opennms.netmgt.model</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <value>
        hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
        hibernate.cache.use_second_level_cache=false
        hibernate.cache=false
        hibernate.cache.use_query_cache=false
        hibernate.jdbc.batch_size=0
        <!-- hibernate.format_sql=true -->
      </value>
    </property>
  </bean>
  <bean id="sessionFactoryWrapper" class="org.opennms.netmgt.dao.hibernate.DefaultSessionFactoryWrapper">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
  <onmsgi:service ref="sessionFactoryWrapper" interface="org.opennms.netmgt.dao.api.SessionFactoryWrapper"/>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
    <property name="nestedTransactionAllowed" value="true"/>
  </bean>
  
  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager" />
  </bean>
  
  <onmsgi:service interface="org.springframework.transaction.support.TransactionOperations" ref="transactionTemplate" />
    
  <bean id="filterManager" class="org.opennms.netmgt.dao.hibernate.HibernateFilterManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.model.FilterManager" ref="filterManager" />

  <bean id="lldpLinkDao" class="org.opennms.netmgt.dao.hibernate.LldpLinkDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.HwEntityDao" ref="hwEntityDao" />

  <bean id="hwEntityDao" class="org.opennms.netmgt.dao.hibernate.HwEntityDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.HwEntityAttributeTypeDao" ref="hwEntityAttributeTypeDao" />

  <bean id="hwEntityAttributeTypeDao" class="org.opennms.netmgt.dao.hibernate.HwEntityAttributeTypeDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.LldpLinkDao" ref="lldpLinkDao" />
    
  <bean id="lldpElementDao" class="org.opennms.netmgt.dao.hibernate.LldpElementDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.LldpElementDao" ref="lldpElementDao" />
    
  <bean id="ospfLinkDao" class="org.opennms.netmgt.dao.hibernate.OspfLinkDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.OspfLinkDao" ref="ospfLinkDao" />
    
  <bean id="ospfElementDao" class="org.opennms.netmgt.dao.hibernate.OspfElementDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.OspfElementDao" ref="ospfElementDao" />
    
  <bean id="isisLinkDao" class="org.opennms.netmgt.dao.hibernate.IsIsLinkDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.IsIsLinkDao" ref="isisLinkDao" />
    
  <bean id="isisElementDao" class="org.opennms.netmgt.dao.hibernate.IsIsElementDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.IsIsElementDao" ref="isisElementDao" />

  <bean id="ipNetToMediaDao" class="org.opennms.netmgt.dao.hibernate.IpNetToMediaDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.IpNetToMediaDao" ref="ipNetToMediaDao" />

  <bean id="bridgeMacLinkDao" class="org.opennms.netmgt.dao.hibernate.BridgeMacLinkDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeMacLinkDao" ref="bridgeMacLinkDao" />
    
  <bean id="bridgeBridgeLinkDao" class="org.opennms.netmgt.dao.hibernate.BridgeBridgeLinkDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeBridgeLinkDao" ref="bridgeBridgeLinkDao" />
    
  <bean id="bridgeStpLinkDao" class="org.opennms.netmgt.dao.hibernate.BridgeStpLinkDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeStpLinkDao" ref="bridgeStpLinkDao" />
    
  <bean id="bridgeElementDao" class="org.opennms.netmgt.dao.hibernate.BridgeElementDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeElementDao" ref="bridgeElementDao" />

  <bean id="cdpLinkDao" class="org.opennms.netmgt.dao.hibernate.CdpLinkDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.CdpLinkDao" ref="cdpLinkDao" />
    
  <bean id="cdpElementDao" class="org.opennms.netmgt.dao.hibernate.CdpElementDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.CdpElementDao" ref="cdpElementDao" />

  <bean id="acknowledgmentDao" class="org.opennms.netmgt.dao.hibernate.AcknowledgmentDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.AcknowledgmentDao" ref="acknowledgmentDao" />
 
  <bean id="alarmDao" class="org.opennms.netmgt.dao.hibernate.AlarmDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.AlarmDao" ref="alarmDao" />

  <bean id="alarmRepository" class="org.opennms.netmgt.dao.hibernate.AlarmRepositoryHibernate"/>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.AlarmRepository" ref="alarmRepository" />

  <bean id="memoDao" class="org.opennms.netmgt.dao.hibernate.MemoDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.MemoDao" ref="memoDao" />

  <bean id="assetRecordDao" class="org.opennms.netmgt.dao.hibernate.AssetRecordDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.AssetRecordDao" ref="assetRecordDao" />

  <bean id="categoryDao" class="org.opennms.netmgt.dao.hibernate.CategoryDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.CategoryDao" ref="categoryDao" />

  <bean id="distPollerDao" class="org.opennms.netmgt.dao.hibernate.DistPollerDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.DistPollerDao" ref="distPollerDao" />

  <bean id="demandPollDao" class="org.opennms.netmgt.dao.hibernate.DemandPollDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.DemandPollDao" ref="demandPollDao" />

  <bean id="eventDao" class="org.opennms.netmgt.dao.hibernate.EventDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.EventDao" ref="eventDao" />

  <bean id="eventdServiceManager" class="org.opennms.netmgt.dao.hibernate.EventdServiceManagerHibernate">
    <property name="serviceTypeDao" ref="serviceTypeDao"/>
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.EventdServiceManager" ref="eventdServiceManager" />

  <bean id="ifLabel" class="org.opennms.netmgt.dao.hibernate.IfLabelDaoImpl"/>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.IfLabel" ref="ifLabel" />

  <bean id="ipInterfaceDao" class="org.opennms.netmgt.dao.hibernate.IpInterfaceDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.IpInterfaceDao" ref="ipInterfaceDao" />

  <bean id="monitoredServiceDao" class="org.opennms.netmgt.dao.hibernate.MonitoredServiceDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.MonitoredServiceDao" ref="monitoredServiceDao" />

  <bean id="minionDao" class="org.opennms.netmgt.dao.hibernate.MinionDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.MinionDao" ref="minionDao" />

  <bean id="nodeDao" class="org.opennms.netmgt.dao.hibernate.NodeDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.NodeDao" ref="nodeDao" />

  <bean id="nodeLabel" class="org.opennms.netmgt.dao.hibernate.NodeLabelDaoImpl"/>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.NodeLabel" ref="nodeLabel" />

  <bean id="requisitionedCategoryAssociationDao" class="org.opennms.netmgt.dao.hibernate.RequisitionedCategoryAssociationDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.RequisitionedCategoryAssociationDao" ref="requisitionedCategoryAssociationDao" />

  <bean id="reportCatalogDao" class="org.opennms.netmgt.dao.hibernate.ReportCatalogDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.ReportCatalogDao" ref="reportCatalogDao" />

  <bean id="notificationDao" class="org.opennms.netmgt.dao.hibernate.NotificationDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.NotificationDao" ref="notificationDao" />

  <bean id="outageDao" class="org.opennms.netmgt.dao.hibernate.OutageDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.OutageDao" ref="outageDao" />

   <bean id="pathOutageDao" class="org.opennms.netmgt.dao.hibernate.PathOutageDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.PathOutageDao" ref="pathOutageDao" />

  <bean name="pathOutageManager" class="org.opennms.netmgt.dao.hibernate.PathOutageManagerDaoImpl"/>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.PathOutageManager" ref="pathOutageManager" />

  <bean id="serviceTypeDao" class="org.opennms.netmgt.dao.hibernate.ServiceTypeDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.ServiceTypeDao" ref="serviceTypeDao" />

  <bean id="snmpInterfaceDao" class="org.opennms.netmgt.dao.hibernate.SnmpInterfaceDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.SnmpInterfaceDao" ref="snmpInterfaceDao" />

  <bean id="userNotificationDao" class="org.opennms.netmgt.dao.hibernate.UserNotificationDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.UserNotificationDao" ref="userNotificationDao" />

  <!--
  <bean id="userDao" class="org.opennms.netmgt.dao.hibernate.UserDaoHibernate" >
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

 
  <bean id="groupDao" class="org.opennms.netmgt.dao.hibernate.GroupDaoHibernate" >
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  -->
 
  <bean id="applicationDao" class="org.opennms.netmgt.dao.hibernate.ApplicationDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.ApplicationDao" ref="applicationDao" />

  <bean id="statisticsReportDao" class="org.opennms.netmgt.dao.hibernate.StatisticsReportDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.StatisticsReportDao" ref="statisticsReportDao" />

  <bean id="statisticsReportDataDao" class="org.opennms.netmgt.dao.hibernate.StatisticsReportDataDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.StatisticsReportDataDao" ref="statisticsReportDataDao" />

  <bean id="resourceReferenceDao" class="org.opennms.netmgt.dao.hibernate.ResourceReferenceDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.ResourceReferenceDao" ref="resourceReferenceDao" />

  <bean id="monitoringLocationDao" class="org.opennms.netmgt.dao.hibernate.MonitoringLocationDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.MonitoringLocationDao" ref="monitoringLocationDao" />

  <bean id="locationMonitorDao" class="org.opennms.netmgt.dao.hibernate.LocationMonitorDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
 
  <onmsgi:service interface="org.opennms.netmgt.dao.api.LocationMonitorDao" ref="locationMonitorDao" />

  <bean id="scanReportDao" class="org.opennms.netmgt.dao.hibernate.ScanReportDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
 
  <onmsgi:service interface="org.opennms.netmgt.dao.api.ScanReportDao" ref="scanReportDao" />

  <bean id="surveillanceViewConfigResourceLocation" class="java.lang.String">
    <constructor-arg value="file:${opennms.home}/etc/surveillance-views.xml" />
  </bean>

  <bean id="surveillanceViewConfigDao" class="org.opennms.netmgt.dao.castor.DefaultSurveillanceViewConfigDao">
    <property name="configResource" ref="surveillanceViewConfigResourceLocation" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.SurveillanceViewConfigDao" ref="surveillanceViewConfigDao" />
  
  <bean id="databaseReportConfigResourceLocation" class="java.lang.String">
    <constructor-arg value="file:${opennms.home}/etc/database-reports.xml" />
  </bean>
  
  <bean id="databaseReportConfigDao" class="org.opennms.netmgt.dao.castor.DefaultDatabaseReportConfigDao">
    <property name="configResource" ref="databaseReportConfigResourceLocation" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.DatabaseReportConfigDao" ref="databaseReportConfigDao" />
  
  <bean id="availabilityReportConfigResourceLocation" class="java.lang.String">
    <constructor-arg value="file:${opennms.home}/etc/availability-reports.xml" />
  </bean>
  
  <bean id="availabilityReportConfigDao" class="org.opennms.netmgt.dao.castor.DefaultOnmsReportConfigDao">
    <property name="configResource" ref="availabilityReportConfigResourceLocation" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.OnmsReportConfigDao" ref="availabilityReportConfigDao" />
  
  <bean id="jasperReportConfigResourceLocation" class="java.lang.String">
    <constructor-arg value="file:${opennms.home}/etc/jasper-reports.xml" />
  </bean>
  
  <bean id="jasperReportConfigDao" class="org.opennms.netmgt.dao.castor.DefaultJasperReportConfigDao">
    <property name="configResource" ref="jasperReportConfigResourceLocation" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.JasperReportConfigDao" ref="jasperReportConfigDao" />

  <bean id="filterDaoFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.filter.FilterDaoFactory.setInstance</value></property>
    <property name="arguments">
      <bean id="jdbcFilterDao" class="org.opennms.netmgt.filter.JdbcFilterDao">
        <property name="dataSource" ref="dataSource" />
        <property name="databaseSchemaConfigFactory" ref="databaseSchemaConfigFactory" />
      </bean>
    </property>
  </bean>
  
  <bean id="filterDao" class="org.opennms.netmgt.filter.FilterDaoFactory" depends-on="filterDaoFactory-init" factory-method="getInstance" />

  <bean id="filterFavoriteDao" class="org.opennms.netmgt.dao.hibernate.FilterFavoriteDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.FilterFavoriteDao" ref="filterFavoriteDao" />

  <bean id="topologyDao" class="org.opennms.netmgt.dao.hibernate.TopologyDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeTopologyDao" ref="bridgeTopologyDao" />

  <bean id="bridgeTopologyDao" class="org.opennms.netmgt.dao.BridgeTopologyDaoInMemory">
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.TopologyDao" ref="topologyDao" />

  <!-- The time-series strategy specific context should provide beans that implement:
            org.opennms.netmgt.collection.api.PersisterFactory
            org.opennms.netmgt.dao.api.ResourceStorageDao
            org.opennms.netmgt.rrd.RrdStrategy
   -->
  <import resource="classpath*:/META-INF/opennms/applicationContext-${org.opennms.timeseries.strategy:rrd}.xml"/>

  <bean id="resourceDao" class="org.opennms.netmgt.dao.support.DefaultResourceDao">
    <property name="nodeDao" ref="nodeDao" />
    <property name="locationMonitorDao" ref="locationMonitorDao" />
    <property name="ipInterfaceDao" ref="ipInterfaceDao" />
    <property name="collectdConfig" ref="collectdConfig" />
    <property name="resourceTypesDao" ref="resourceTypesDao" />
    <property name="resourceStorageDao" ref="resourceStorageDao" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.ResourceDao" ref="resourceDao" />

  <bean id="rrdDao" class="org.opennms.netmgt.dao.support.DefaultRrdDao">
    <property name="rrdStrategy" ref="rrdStrategy" />
    <property name="rrdBaseDirectory" value="${rrd.base.dir}" />
    <property name="rrdBinaryPath" value="${rrd.binary}" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.RrdDao" ref="rrdDao" />

  <bean id="statsdConfigResourceLocation" class="java.lang.String">
    <constructor-arg value="file:${opennms.home}/etc/statsd-configuration.xml" />
  </bean>

  <bean id="statsdConfigDao" class="org.opennms.netmgt.dao.castor.DefaultStatisticsDaemonConfigDao">
    <property name="configResource" ref="statsdConfigResourceLocation" />
    <property name="reloadCheckInterval" value="-1" />
  </bean>
  
  <onmsgi:service interface="org.opennms.netmgt.dao.api.StatisticsDaemonConfigDao" ref="statsdConfigDao" />
  
  <bean id="javamailConfigResourceLocation" class="java.lang.String">
    <constructor-arg value="file:${opennms.home}/etc/javamail-configuration.xml" />
  </bean>

  <bean id="javamailConfigDao" class="org.opennms.netmgt.dao.jaxb.DefaultJavamailConfigurationDao">
    <property name="configResource" ref="javamailConfigResourceLocation" />
    <property name="reloadCheckInterval" value="-1" />
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.dao.api.JavaMailConfigurationDao" ref="javamailConfigDao" />

  <bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
    <constructor-arg ref="jdbcTemplate" />
  </bean>

  <bean id="alarmStatisticsService" class="org.opennms.netmgt.dao.stats.DefaultAlarmStatisticsService" />

  <onmsgi:service interface="org.opennms.netmgt.dao.stats.AlarmStatisticsService" ref="alarmStatisticsService" />
</beans>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:onmsgi="http://xmlns.opennms.org/xsd/spring/onms-osgi"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
       http://xmlns.opennms.org/xsd/spring/onms-osgi http://xmlns.opennms.org/xsd/spring/onms-osgi.xsd
       ">

    <!-- NOTE: Contains definitions, which are shared between all containers -->

    <context:annotation-config />
    <cache:annotation-driven />
    <tx:annotation-driven />

    <!-- Spring Cache Manager -->
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <!-- For JdbcFilterDao -->
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                    <property name="name" value="activeIpAddressList"/>
                </bean>
            </set>
        </property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <!-- TODO: Move into org.opennms.netmgt.model -->
                <value>org.opennms.netmgt.bsm</value>
                <value>org.opennms.netmgt.dao.hibernate</value>
                <value>org.opennms.netmgt.model</value>
                <value>org.opennms.netmgt.topology</value>
                <value>org.opennms.netmgt.flows</value>
            </list>
        </property>
        <!--  property name="schemaUpdate" value="true">
          </property -->
        <property name="annotatedPackages">
            <list>
                <value>org.opennms.netmgt.dao.hibernate</value>
                <value>org.opennms.netmgt.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
                hibernate.cache.use_second_level_cache=false
                hibernate.cache=false
                hibernate.cache.use_query_cache=false
                hibernate.jdbc.batch_size=0
                <!-- hibernate.show_sql=true -->
                <!-- hibernate.format_sql=true -->
            </value>
        </property>
    </bean>
    <bean id="sessionFactoryWrapper" class="org.opennms.netmgt.dao.hibernate.DefaultSessionFactoryWrapper">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <onmsgi:service ref="sessionFactoryWrapper" interface="org.opennms.netmgt.dao.api.SessionFactoryWrapper"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="nestedTransactionAllowed" value="true"/>
    </bean>
    <onmsgi:service interface="org.springframework.transaction.PlatformTransactionManager" ref="transactionManager" />
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    <onmsgi:service interface="org.springframework.transaction.support.TransactionOperations" ref="transactionTemplate" />

    <bean id="lldpLinkDao" class="org.opennms.netmgt.dao.hibernate.LldpLinkDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.HwEntityDao" ref="hwEntityDao" />

    <bean id="hwEntityDao" class="org.opennms.netmgt.dao.hibernate.HwEntityDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.HwEntityAttributeTypeDao" ref="hwEntityAttributeTypeDao" />

    <bean id="hwEntityAttributeTypeDao" class="org.opennms.netmgt.dao.hibernate.HwEntityAttributeTypeDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.LldpLinkDao" ref="lldpLinkDao" />

    <bean id="lldpElementDao" class="org.opennms.netmgt.dao.hibernate.LldpElementDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.LldpElementDao" ref="lldpElementDao" />

    <bean id="ospfLinkDao" class="org.opennms.netmgt.dao.hibernate.OspfLinkDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.OspfLinkDao" ref="ospfLinkDao" />

    <bean id="ospfElementDao" class="org.opennms.netmgt.dao.hibernate.OspfElementDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.OspfElementDao" ref="ospfElementDao" />

    <bean id="isisLinkDao" class="org.opennms.netmgt.dao.hibernate.IsIsLinkDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.IsIsLinkDao" ref="isisLinkDao" />

    <bean id="isisElementDao" class="org.opennms.netmgt.dao.hibernate.IsIsElementDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.IsIsElementDao" ref="isisElementDao" />

    <bean id="ipNetToMediaDao" class="org.opennms.netmgt.dao.hibernate.IpNetToMediaDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.IpNetToMediaDao" ref="ipNetToMediaDao" />

    <bean id="bridgeMacLinkDao" class="org.opennms.netmgt.dao.hibernate.BridgeMacLinkDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeMacLinkDao" ref="bridgeMacLinkDao" />

    <bean id="bridgeBridgeLinkDao" class="org.opennms.netmgt.dao.hibernate.BridgeBridgeLinkDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeBridgeLinkDao" ref="bridgeBridgeLinkDao" />

    <bean id="bridgeStpLinkDao" class="org.opennms.netmgt.dao.hibernate.BridgeStpLinkDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeStpLinkDao" ref="bridgeStpLinkDao" />

    <bean id="bridgeElementDao" class="org.opennms.netmgt.dao.hibernate.BridgeElementDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeElementDao" ref="bridgeElementDao" />

    <bean id="bridgeTopologyDao" class="org.opennms.netmgt.dao.hibernate.BridgeTopologyDaoHibernate">
        <property name="nodeDao" ref="nodeDao" />
        <property name="bridgeElementDao" ref="bridgeElementDao" />
        <property name="bridgeBridgeLinkDao" ref="bridgeBridgeLinkDao" />
        <property name="bridgeMacLinkDao" ref="bridgeMacLinkDao" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.BridgeTopologyDao" ref="bridgeTopologyDao" />

    <bean id="cdpLinkDao" class="org.opennms.netmgt.dao.hibernate.CdpLinkDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.CdpLinkDao" ref="cdpLinkDao" />

    <bean id="cdpElementDao" class="org.opennms.netmgt.dao.hibernate.CdpElementDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.CdpElementDao" ref="cdpElementDao" />

    <bean id="acknowledgmentDao" class="org.opennms.netmgt.dao.hibernate.AcknowledgmentDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.AcknowledgmentDao" ref="acknowledgmentDao" />

    <bean id="alarmDao" class="org.opennms.netmgt.dao.hibernate.AlarmDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.AlarmDao" ref="alarmDao" />

    <bean id="alarmRepository" class="org.opennms.netmgt.dao.hibernate.AlarmRepositoryHibernate"/>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.AlarmRepository" ref="alarmRepository" />

    <bean id="memoDao" class="org.opennms.netmgt.dao.hibernate.MemoDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.MemoDao" ref="memoDao" />

    <bean id="assetRecordDao" class="org.opennms.netmgt.dao.hibernate.AssetRecordDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.AssetRecordDao" ref="assetRecordDao" />

    <bean id="categoryDao" class="org.opennms.netmgt.dao.hibernate.CategoryDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.CategoryDao" ref="categoryDao" />

    <bean id="eventDao" class="org.opennms.netmgt.dao.hibernate.EventDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.EventDao" ref="eventDao" />

    <bean id="ifLabel" class="org.opennms.netmgt.dao.hibernate.IfLabelDaoImpl"/>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.IfLabel" ref="ifLabel" />

    <bean id="interfaceToNodeCacheRefreshInterval" class="java.lang.Long" factory-method="getLong">
        <constructor-arg value="org.opennms.interface-node-cache.refresh-timer"></constructor-arg>
        <constructor-arg value="300000"></constructor-arg>
    </bean>
    <bean id="interfaceToNodeCache" class="org.opennms.netmgt.dao.hibernate.InterfaceToNodeCacheDaoImpl">
        <constructor-arg ref="interfaceToNodeCacheRefreshInterval" />
    </bean>
    <bean id="interfaceToNodeCache-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod">
            <value>org.opennms.netmgt.dao.api.AbstractInterfaceToNodeCache.setInstance</value>
        </property>
        <property name="arguments">
            <list>
                <ref bean="interfaceToNodeCache" />
            </list>
        </property>
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.InterfaceToNodeCache" ref="interfaceToNodeCache" />

    <bean id="ipInterfaceDao" class="org.opennms.netmgt.dao.hibernate.IpInterfaceDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.IpInterfaceDao" ref="ipInterfaceDao" />

    <bean id="monitoredServiceDao" class="org.opennms.netmgt.dao.hibernate.MonitoredServiceDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.MonitoredServiceDao" ref="monitoredServiceDao" />

    <bean id="minionDao" class="org.opennms.netmgt.dao.hibernate.MinionDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.MinionDao" ref="minionDao" />

    <bean id="monitoringSystemDao" class="org.opennms.netmgt.dao.hibernate.MonitoringSystemDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.MonitoringSystemDao" ref="monitoringSystemDao" />

    <bean id="nodeDao" class="org.opennms.netmgt.dao.hibernate.NodeDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.NodeDao" ref="nodeDao" />

    <bean id="nodeLabel" class="org.opennms.netmgt.dao.hibernate.NodeLabelDaoImpl"/>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.NodeLabel" ref="nodeLabel" />

    <!-- TODO MVR verify each DAO again and see if it is really working without etc/... -->
    <bean id="requisitionedCategoryAssociationDao" class="org.opennms.netmgt.dao.hibernate.RequisitionedCategoryAssociationDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.RequisitionedCategoryAssociationDao" ref="requisitionedCategoryAssociationDao" />

    <bean id="reportCatalogDao" class="org.opennms.netmgt.dao.hibernate.ReportCatalogDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.ReportCatalogDao" ref="reportCatalogDao" />

    <bean id="notificationDao" class="org.opennms.netmgt.dao.hibernate.NotificationDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.NotificationDao" ref="notificationDao" />

    <bean id="outageDao" class="org.opennms.netmgt.dao.hibernate.OutageDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.OutageDao" ref="outageDao" />

    <bean id="pathOutageDao" class="org.opennms.netmgt.dao.hibernate.PathOutageDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.PathOutageDao" ref="pathOutageDao" />

    <bean id="serviceTypeDao" class="org.opennms.netmgt.dao.hibernate.ServiceTypeDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.ServiceTypeDao" ref="serviceTypeDao" />

    <bean id="snmpInterfaceDao" class="org.opennms.netmgt.dao.hibernate.SnmpInterfaceDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.SnmpInterfaceDao" ref="snmpInterfaceDao" />

    <bean id="userNotificationDao" class="org.opennms.netmgt.dao.hibernate.UserNotificationDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.UserNotificationDao" ref="userNotificationDao" />

    <bean id="applicationDao" class="org.opennms.netmgt.dao.hibernate.ApplicationDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.ApplicationDao" ref="applicationDao" />

    <bean id="statisticsReportDao" class="org.opennms.netmgt.dao.hibernate.StatisticsReportDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.StatisticsReportDao" ref="statisticsReportDao" />

    <bean id="statisticsReportDataDao" class="org.opennms.netmgt.dao.hibernate.StatisticsReportDataDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.StatisticsReportDataDao" ref="statisticsReportDataDao" />

    <bean id="resourceReferenceDao" class="org.opennms.netmgt.dao.hibernate.ResourceReferenceDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.ResourceReferenceDao" ref="resourceReferenceDao" />

    <bean id="monitoringLocationDao" class="org.opennms.netmgt.dao.hibernate.MonitoringLocationDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.MonitoringLocationDao" ref="monitoringLocationDao" />

    <bean id="locationMonitorDao" class="org.opennms.netmgt.dao.hibernate.LocationMonitorDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.LocationMonitorDao" ref="locationMonitorDao" />

    <bean id="scanReportDao" class="org.opennms.netmgt.dao.hibernate.ScanReportDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.ScanReportDao" ref="scanReportDao" />

    <!-- Filter DAO -->
    <bean id="filterDaoFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"><value>org.opennms.netmgt.filter.FilterDaoFactory.setInstance</value></property>
        <property name="arguments">
            <bean id="jdbcFilterDao" class="org.opennms.netmgt.filter.JdbcFilterDao">
                <property name="dataSource" ref="dataSource" />
                <property name="databaseSchemaConfigFactory" ref="databaseSchemaConfigFactory" />
            </bean>
        </property>
    </bean>
    <bean id="filterDao" class="org.opennms.netmgt.filter.FilterDaoFactory" depends-on="filterDaoFactory-init" factory-method="getInstance" />
    <onmsgi:service interface="org.opennms.netmgt.filter.api.FilterDao" ref="filterDao"/>

    <bean id="filterFavoriteDao" class="org.opennms.netmgt.dao.hibernate.FilterFavoriteDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.FilterFavoriteDao" ref="filterFavoriteDao" />

    <bean id="genericHibernateAccessor" class="org.opennms.netmgt.dao.hibernate.GenericHibernateAccessor">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.GenericPersistenceAccessor" ref="genericHibernateAccessor" />

    <bean id="topologyDao" class="org.opennms.netmgt.dao.hibernate.TopologyDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.TopologyDao" ref="topologyDao" />

    <bean id="alarmStatisticsService" class="org.opennms.netmgt.dao.stats.DefaultAlarmStatisticsService" />
    <onmsgi:service interface="org.opennms.netmgt.dao.api.AlarmStatisticsService" ref="alarmStatisticsService" />

    <bean id="alarmEntityNotifier" class="org.opennms.netmgt.dao.support.AlarmEntityNotifierImpl"/>
    <onmsgi:service interface="org.opennms.netmgt.dao.api.AlarmEntityNotifier" ref="alarmEntityNotifier" />
    <onmsgi:list id="alarmEntityListeners" interface="org.opennms.netmgt.dao.api.AlarmEntityListener">
        <onmsgi:listener ref="alarmEntityNotifier" bind-method="onListenerRegistered" unbind-method="onListenerUnregistered" />
    </onmsgi:list>
</beans>
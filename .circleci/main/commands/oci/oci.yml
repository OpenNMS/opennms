commands:
  load-oci:
    parameters:
      match:
        description: regular expression match for OCI filename
        type: string
    steps:
      - download-download-artifacts
      - run:
          name: restore OCI files matching "<< parameters.match >>"
          command: |
            if [ -n "<< parameters.match >>" ]; then
              download-artifacts.pl --include-failed --workflow="${CIRCLE_WORKFLOW_ID}" --match="<< parameters.match >>" oci "${CIRCLE_BRANCH}" /tmp/oci-artifacts
            else
              download-artifacts.pl --include-failed --workflow="${CIRCLE_WORKFLOW_ID}" oci "${CIRCLE_BRANCH}" /tmp/oci-artifacts
            fi

            cd /tmp/oci-artifacts
            if [ "$(ls -1 *.oci | wc -l)" -eq 0 ]; then
              echo "ERROR: No OCI files to load. Something probably went wrong earlier."
              exit 1
            fi

            for FILE in *.oci; do
              echo "Loading ${FILE} into Docker..."
              _tag="$(printf "${FILE}" | sed -e 's,\.oci$,,'):latest"
              if [ -z "$(docker image ls -q "${_tag}")" ]; then
                docker image load -i "${FILE}"
              fi
              _unprefixed="$(echo "${_tag}" | cut -d/ -f2 | cut -d- -f1)"
              echo "Tagging docker image ${_tag} as [opennms/]${_unprefixed}:latest"
              docker image tag "${_tag}" "opennms/${_unprefixed}:latest"
              docker image tag "${_tag}" "${_unprefixed}:latest"
            done

  build-image-single-arch:
    parameters:
      architecture:
        type: string
      container_name:
        type: string
    steps:
      - attach_workspace:
          at: ~/
      # - dockerhub-login
      - qemu-user-static
      - install-buildx
      - run:
          name: build << parameters.container_name >>=<< parameters.architecture >> container image
          command: |
            export DOCKER_CONTENT_TRUST=1
            cd opennms-container/<< parameters.container_name >>
            export ARCH="$(printf "<< parameters.architecture >>" | tr / -)"
            export TAG="<< parameters.container_name >>-${ARCH}"
            make DOCKER_ARCH="<< parameters.architecture >>" \
                 DOCKER_IMAGE_NAME="${TAG}.oci" \
                 DOCKER_TAG="${TAG}" \
                 BUILD_NUMBER="${CIRCLE_BUILD_NUM}" \
                 BUILD_URL="${CIRCLE_BUILD_URL}" \
                 BUILD_BRANCH="${CIRCLE_BRANCH}" \
                 build install
      - store_artifacts:
          path: ~/project/opennms-container/<< parameters.container_name >>/images/
          destination: /

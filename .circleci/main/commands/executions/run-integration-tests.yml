commands:
  run-integration-tests:
    parameters:
      rerun-failtest-count:
        default: 0
        type: integer
      failure-option:
        default: --fail-fast
        type: string
      changes-only:
        default: true
        type: boolean
    steps:
      - run:
          name: Monitor JVM processes
          background: true
          command: |
            .circleci/scripts/jvmprocmon-start.sh
      - run:
          name: Monitor memory usage
          background: true
          command: |
            free -m -c 500 -s 30
      - restore-maven-cache
      - run:
          name: Integration Tests
          no_output_timeout: 15m
          command: |
            export CCI_RERUN_FAILTEST=<< parameters.rerun-failtest-count >>
            export CCI_FAILURE_OPTION=<< parameters.failure-option >>
            export CCI_CHANGES_ONLY=<< parameters.changes-only >>
            .circleci/scripts/itest.sh
      - run:
          name: Gather test results
          when: always
          command: |
            mkdir -p ~/test-results/junit
            find . -type f -name failsafe-summary.xml -exec rm -f {} \;
            find . -type f -regex ".*/target/[^/]*-reports[^/]*/.*xml" -exec cp {} ~/test-results/junit/ \;
            find . -type f -regex ".*/target/[^/]*-reports[^/]*/.*dump.*" -exec cp {} ~/test-results/junit/ \; || :
      - run:
          name: Gather tests
          when: always
          command: |
            mkdir -p ~/generated-tests
            cp target/find-tests/* ~/generated-tests/ || :
            cp /tmp/this_node* ~/generated-tests/     || :
      - run:
          name: Save Code Coverage Data
          when: always
          command: |
            .circleci/scripts/codecoverage-save.sh integration-test
      - persist_to_workspace:
          root: ~/
          paths:
            - code-coverage
            - project/target/find-tests
            - project/target/structure-graph.json
      - run:
          name: Gather system logs
          when: always
          command: |
            mkdir -p ~/test-results/system-logs
            (dmesg || :) > ~/test-results/system-logs/dmesg 2>&1
            (ps auxf || :) > ~/test-results/system-logs/ps 2>&1
            (free -m || :) > ~/test-results/system-logs/free 2>&1
            cp -R /tmp/jvmprocmon ~/test-results/system-logs/ || :

            (date '+%T' || :)                       > ~/test-results/system-logs/docker_stats 2>&1
            (docker stats --all --no-stream || :) >> ~/test-results/system-logs/docker_stats 2>&1
            (docker ps ---all || :)               >> ~/test-results/system-logs/docker_stats 2>&1
            for CONTAINER in `docker ps --all --quiet`; do
              ((docker logs --timestamps "$CONTAINER" 2>&1 | tail -n 20 ) || :) > ~/test-results/system-logs/"docker-${CONTAINER}.log" 2>&1
            done
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          when: always
          path: ~/test-results
          destination: test-results
      - store_artifacts:
          when: always
          path: ~/build-results
          destination: build-results
      - store_artifacts:
          when: always
          path: ~/generated-tests
          destination: generated-tests

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.opennms</groupId>
    <artifactId>org.opennms.container</artifactId>
    <version>34.0.0-SNAPSHOT</version>
  </parent>
  <groupId>org.opennms.karaf</groupId>
  <artifactId>opennms</artifactId>
  <packaging>pom</packaging>
  <name>OpenNMS :: OSGi Container :: Karaf Features</name>
  <properties>
    <systemStartLevel>30</systemStartLevel>
    <earlyStartLevel>60</earlyStartLevel>
    <lateStartLevel>100</lateStartLevel>
    <license-skip-maven>true</license-skip-maven>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <executions>
          <execution>
            <id>exec</id>
            <goals>
              <goal>replace</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <file>${project.build.directory}/downloaded-features/apache-camel-${camelVersion}-features.xml</file>
              <replacements>
                <!-- fix CXF dependency with the weird/bad version and lock it to ours -->
                <replacement>
                  <token>apache-cxf/[\d\.]+</token>
                  <value>apache-cxf/${cxfVersion}</value>
                </replacement>
                <!-- fix an issue with resolving multiple versions of spring by forcing the dep to spring 4.2 -->
                <replacement>
                  <token>\[4\.\d,5\)</token>
                  <value>[4.2,4.3)</value>
                </replacement>
                <!-- standardize on the "final" version of jms-api 2.x -->
                <replacement>
                  <token>org.apache.geronimo.specs/geronimo-jms_2.0_spec/1.0-alpha-2</token>
                  <value>javax.jms/javax.jms-api/${jmsApiVersion}</value>
                </replacement>
              </replacements>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <skip>${skipTests}</skip>
        </configuration>
        <executions>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <javase>11</javase>
              <descriptors>
                <descriptor>file:${project.build.directory}/classes/features.xml</descriptor>
                <descriptor>file:${project.build.directory}/classes/features-core.xml</descriptor>
                <descriptor>file:${project.build.directory}/classes/features-experimental.xml</descriptor>
                <descriptor>file:${project.build.directory}/classes/features-minion.xml</descriptor>
                <descriptor>file:${project.build.directory}/classes/features-sentinel.xml</descriptor>
                <descriptor>file:${project.build.directory}/downloaded-features/apache-camel-${camelVersion}-features.xml</descriptor>
                <descriptor>file:${project.build.directory}/classes/karaf-extensions.xml</descriptor>
                <descriptor>file:${project.build.directory}/classes/spring-legacy.xml</descriptor>
              </descriptors>
              <distribution>org.apache.karaf.features:framework</distribution>
              <framework>
                <feature>framework</feature>
                <feature>aries-blueprint</feature>
                <feature>shell</feature>
                <feature>bundle</feature>
                <feature>eventadmin</feature>
              </framework>
              <features>
                <!-- core features -->
                <feature>bouncycastle</feature>
                <feature>bson</feature>
                <feature>cassandra-driver</feature>
                <feature>commons-beanutils</feature>
                <feature>commons-cli</feature>
                <feature>commons-codec</feature>
                <feature>commons-collections</feature>
                <feature>commons-compress</feature>
                <feature>commons-configuration</feature>
                <feature>commons-csv</feature>
                <feature>commons-digester</feature>
                <feature>commons-exec</feature>
                <feature>commons-io</feature>
                <feature>commons-jexl</feature>
                <feature>commons-jxpath</feature>
                <feature>commons-lang</feature>
                <feature>commons-lang3</feature>
                <feature>commons-net</feature>
                <feature>commons-pool2</feature>
                <feature>dropwizard-metrics</feature>
                <feature>fst</feature>
                <feature>guava</feature>
                <feature>guava-dependencies</feature>
                <feature>jackson-core</feature>
                <feature>jackson-dataformat-xml</feature>
                <feature>jackson-dataformat-yaml</feature>
                <feature>jackson-datatype-jdk8</feature>
                <feature>jackson-datatype-json</feature>
                <feature>jackson-datatype-jsr310</feature>
                <feature>jackson1</feature>
                <feature>java-native-access</feature>
                <feature>javax.mail</feature>
                <feature>javax.servlet</feature>
                <feature>javax.validation</feature>
                <feature>jetty</feature>
                <feature>jung</feature>
                <feature>netty</feature>
                <feature>org.json</feature>
                <feature>pax-jetty</feature>
                <feature>scv-api</feature>
                <feature>scv-jceks-impl</feature>
                <feature>scv-shell</feature>
                <feature>snakeyaml</feature>
                <feature>ssh</feature>
                <feature>zookeeper-dependencies</feature>

                <!-- base API features -->
                <feature>opennms-activemq-pool</feature>
                <feature>opennms-alarm-history-elastic</feature>
                <feature>opennms-camel-amqp</feature>
                <feature>opennms-core-camel</feature>
                <feature>opennms-core-daemon</feature>
                <feature>opennms-core-ipc-jms</feature>
                <feature>opennms-core-ipc-rpc-api</feature>
                <feature>opennms-core-ipc-sink-camel-common</feature>
                <feature>opennms-core-ipc-sink-camel</feature>
                <feature>opennms-core-ipc-sink-camel-server</feature>
                <feature>opennms-core-ipc-twin-jms</feature>
                <feature>opennms-distributed-core-jms</feature>
                <feature>opennms-events-api</feature>
                <feature>opennms-health</feature>
                <feature>opennms-events-sink-dispatcher</feature>
                <feature>opennms-health-api</feature>
                <feature>opennms-mate-api</feature>
                <feature>opennms-mate-impl</feature>
                <feature>opennms-mate-shell</feature>
                <feature>opennms-newts</feature>
                <feature>opennms-poller-monitors-core</feature>
                <feature>opennms-telemetry-daemon</feature>
                <feature>opennms-timeseries-api</feature>
                <feature>vaadin</feature>

                <!-- minion features -->
                <feature>dominion-grpc-client</feature>
                <feature>dominion-secure-credentials-vault</feature>
                <feature>minion-api-layer</feature>
                <feature>minion-collection</feature>
                <feature>minion-core</feature>
                <feature>minion-core-shell</feature>
                <feature>minion-health-check</feature>
                <feature>minion-heartbeat-producer</feature>
                <feature>minion-icmp-proxy</feature>
                <feature>minion-jms</feature>
                <feature>minion-poller</feature>
                <feature>minion-provisiond-detectors</feature>
                <feature>minion-provisiond-requisitions</feature>
                <feature>minion-shell-collection</feature>
                <feature>minion-shell-poller</feature>
                <feature>minion-shell-provision</feature>
                <feature>minion-snmp-proxy</feature>
                <feature>minion-telemetryd-receivers</feature>
                <feature>opennms-dao-minion</feature>
                <feature>opennms-trapd-listener</feature>

                <!-- sentinel features -->
                <feature>sentinel-api-layer</feature>
                <feature>sentinel-events-forwarder</feature>
                <feature>sentinel-jms</feature>
                <feature>sentinel-newts</feature>
                <feature>sentinel-timeseries-api</feature>
              </features>
              <configuration>file:${project.build.directory}/apache-karaf-${karafVersion}/etc/config.properties</configuration>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- Unpack Karaf to get access to a default etc/ for verify -->
          <execution>
            <id>unpack-karaf</id>
            <goals>
              <goal>unpack</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.karaf</groupId>
                  <artifactId>apache-karaf</artifactId>
                  <version>${karafVersion}</version>
                  <type>tar.gz</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <includes>**/etc/**/*</includes>
                  <excludes>**/custom.properties</excludes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-camel-feature</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.camel.karaf</groupId>
                  <artifactId>apache-camel</artifactId>
                  <version>${camelVersion}</version>
                  <classifier>features</classifier>
                  <type>xml</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/downloaded-features</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Filter the features.xml files -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <encoding>UTF-8</encoding>
              <escapeString>\</escapeString>
              <nonFilteredFileExtensions>
                <nonFilteredFileExtension>swp</nonFilteredFileExtension>
              </nonFilteredFileExtensions>
            </configuration>
          </execution>
          <!-- karaf-maven-plugin:verify doesn't know about external sun.nio.* packages, so we need to put a custom config in there -->
          <execution>
            <id>copy-karaf-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/apache-karaf-${karafVersion}/etc</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>src/test/karaf-resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.outputDirectory}/features-experimental.xml</file>
                  <type>xml</type>
                  <classifier>experimental</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.outputDirectory}/features-minion.xml</file>
                  <type>xml</type>
                  <classifier>minion</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.outputDirectory}/features-sentinel.xml</file>
                  <type>xml</type>
                  <classifier>sentinel</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.outputDirectory}/karaf-extensions.xml</file>
                  <type>xml</type>
                  <classifier>karaf-extensions</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.outputDirectory}/spring-legacy.xml</file>
                  <type>xml</type>
                  <classifier>spring-legacy</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.outputDirectory}/features-core.xml</file>
                  <type>xml</type>
                  <classifier>core</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.outputDirectory}/features.xml</file>
                  <type>xml</type>
                  <classifier>features</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/downloaded-features/apache-camel-${camelVersion}-features.xml</file>
                  <type>xml</type>
                  <classifier>camel</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.outputDirectory}/overrides.properties</file>
                  <type>properties</type>
                  <classifier>overrides</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.outputDirectory}/features-processing.xml</file>
                  <type>xml</type>
                  <classifier>features-processing</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.newts</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.situation-feedback</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.alarms.history</groupId>
      <artifactId>org.opennms.features.alarms.history.elastic</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.alarms.history.rest</groupId>
      <artifactId>org.opennms.features.alarms.history.rest.impl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.minion.heartbeat</groupId>
      <artifactId>org.opennms.features.minion.heartbeat.consumer</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.minion.heartbeat</groupId>
      <artifactId>org.opennms.features.minion.heartbeat.producer</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.minion.shell</groupId>
      <artifactId>org.opennms.features.minion.shell.collection</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.notifications</groupId>
      <artifactId>org.opennms.features.notifications.shell</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topology.plugins</groupId>
      <artifactId>org.opennms.features.topology.plugins.browsers</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topology.plugins.topo</groupId>
      <artifactId>asset</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topology.plugins.topo</groupId>
      <artifactId>org.opennms.features.topology.plugins.topo.application</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topology.plugins.topo</groupId>
      <artifactId>org.opennms.features.topology.plugins.topo.bsm</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topology.plugins.topo</groupId>
      <artifactId>org.opennms.features.topology.plugins.topo.linkd</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topology.plugins.topo</groupId>
      <artifactId>org.opennms.features.topology.plugins.topo.pathoutage</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topology.plugins.topo</groupId>
      <artifactId>org.opennms.features.topology.plugins.topo.vmware</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.newts</groupId>
      <artifactId>newts-karaf</artifactId>
      <version>${newtsVersion}</version>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>
    <!-- Framework distribution -->
    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>framework</artifactId>
      <version>${karafVersion}</version>
      <type>kar</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-bsf</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-datagram</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-dhcp</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-generic</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-jdbc</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-jms</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-jmx</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-rdns-lookup</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-registry</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-ssh</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detector-web</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-detectorclient-rpc</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-icmp-commands</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-icmp-jni</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-icmp-jni6</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-provision-persistence</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-vmware</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-wmi</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>org.opennms.icmp.proxy.rpc-impl</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.container</groupId>
      <artifactId>extender</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.container</groupId>
      <artifactId>noop-jetty-extension</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.container</groupId>
      <artifactId>org.opennms.container.jaas-login-module</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.container</groupId>
      <artifactId>spring-extender</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core</groupId>
      <artifactId>org.opennms.core.commands</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.grpc</groupId>
      <artifactId>org.opennms.core.grpc.common</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.grpc</groupId>
      <artifactId>org.opennms.core.grpc.osgi</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.health</groupId>
      <artifactId>org.opennms.core.health.impl</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.health</groupId>
      <artifactId>org.opennms.core.health.rest-cxf</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.health</groupId>
      <artifactId>org.opennms.core.health.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.common</groupId>
      <artifactId>org.opennms.core.ipc.common.kafka-shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.grpc</groupId>
      <artifactId>org.opennms.core.ipc.grpc.client</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.rpc</groupId>
      <artifactId>org.opennms.core.ipc.rpc.commands</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.rpc</groupId>
      <artifactId>org.opennms.core.ipc.rpc.kafka</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.sink.camel</groupId>
      <artifactId>org.opennms.core.ipc.sink.camel.client</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.sink.camel</groupId>
      <artifactId>org.opennms.core.ipc.sink.camel.server</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.sink.kafka</groupId>
      <artifactId>org.opennms.core.ipc.sink.kafka.client</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.twin</groupId>
      <artifactId>org.opennms.core.ipc.twin.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.twin.grpc</groupId>
      <artifactId>org.opennms.core.ipc.twin.grpc.subscriber</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.twin.jms</groupId>
      <artifactId>org.opennms.core.ipc.twin.jms.subscriber</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.ipc.twin.kafka</groupId>
      <artifactId>org.opennms.core.ipc.twin.kafka.subscriber</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.mate</groupId>
      <artifactId>org.opennms.core.mate.shell-commands</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.snmp</groupId>
      <artifactId>org.opennms.core.snmp.commands</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.snmp</groupId>
      <artifactId>org.opennms.core.snmp.proxy.rpc-impl</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.tracing</groupId>
      <artifactId>org.opennms.core.tracing.jaeger-osgi</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.tracing</groupId>
      <artifactId>org.opennms.core.tracing.jaeger-tracer</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>eclipse-npn-alpn</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>jackson1-dependencies</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>jung-shaded</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>oia-dependencies</artifactId>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>datachoices</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>jira-troubleticketer</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>jmxconfiggenerator</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>opennms-integration-tsrm</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.discovery</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.eif-adapter</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.ifttt</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.jdbc-collector</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.newts</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.opennms-es-rest</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.prometheus-collector</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.timeseries</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.wsman</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>vaadin</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>vaadin-components</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>vaadin-dashboard</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>vaadin-jmxconfiggenerator</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>vaadin-snmp-events-and-metrics</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>vaadin-surveillance-views</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.activemq</groupId>
      <artifactId>org.opennms.features.activemq.component</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.activemq</groupId>
      <artifactId>org.opennms.features.activemq.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.api-layer</groupId>
      <artifactId>org.opennms.features.api-layer.core</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.api-layer</groupId>
      <artifactId>org.opennms.features.api-layer.minion</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.api-layer</groupId>
      <artifactId>org.opennms.features.api-layer.sentinel</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.bsm</groupId>
      <artifactId>org.opennms.features.bsm.shell-commands</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.bsm</groupId>
      <artifactId>vaadin-adminpage</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.collection</groupId>
      <artifactId>org.opennms.features.collection.commands</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.config.osgi</groupId>
      <artifactId>org.opennms.features.config.osgi.cm</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.config.osgi</groupId>
      <artifactId>org.opennms.features.config.osgi.del</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.device-config</groupId>
      <artifactId>org.opennms.features.device-config.rest</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.device-config</groupId>
      <artifactId>org.opennms.features.device-config.retrieval</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.device-config</groupId>
      <artifactId>org.opennms.features.device-config.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.device-config</groupId>
      <artifactId>org.opennms.features.device-config.ssh-scripting</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.device-config</groupId>
      <artifactId>org.opennms.features.device-config.tftp</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.device-config.sink</groupId>
      <artifactId>org.opennms.features.device-config.sink.dispatcher</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.device-config.sink</groupId>
      <artifactId>org.opennms.features.device-config.sink.module</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.distributed</groupId>
      <artifactId>jms</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.distributed</groupId>
      <artifactId>org.opennms.features.distributed.dao-api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.distributed</groupId>
      <artifactId>org.opennms.features.distributed.dao-healthcheck</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.distributed</groupId>
      <artifactId>org.opennms.features.distributed.dao-impl</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.distributed</groupId>
      <artifactId>org.opennms.features.distributed.dao-shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.distributed</groupId>
      <artifactId>org.opennms.features.distributed.datasource</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.distributed</groupId>
      <artifactId>org.opennms.features.distributed.opennms-identity</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.distributed</groupId>
      <artifactId>org.opennms.features.distributed.serviceregistry</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.dnsresolver</groupId>
      <artifactId>org.opennms.features.dnsresolver.netty</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.dnsresolver</groupId>
      <artifactId>org.opennms.features.dnsresolver.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.enlinkd</groupId>
      <artifactId>org.opennms.features.enlinkd.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.events</groupId>
      <artifactId>org.opennms.features.events.commands</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.events</groupId>
      <artifactId>org.opennms.features.events.syslog</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.events</groupId>
      <artifactId>org.opennms.features.events.traps</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.events.sink</groupId>
      <artifactId>org.opennms.features.events.sink.command</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.jest</groupId>
      <artifactId>opennms-jest</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.kafka</groupId>
      <artifactId>org.opennms.features.kafka.consumer</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.kafka</groupId>
      <artifactId>org.opennms.features.kafka.producer</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.poller</groupId>
      <artifactId>org.opennms.features.poller.client-rpc</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.scv</groupId>
      <artifactId>org.opennms.features.scv.dominion-grpc-impl</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.scv</groupId>
      <artifactId>org.opennms.features.scv.jceks-impl</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.scv</groupId>
      <artifactId>org.opennms.features.scv.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.sentinel</groupId>
      <artifactId>core</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry</groupId>
      <artifactId>org.opennms.features.telemetry.api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry</groupId>
      <artifactId>org.opennms.features.telemetry.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.config</groupId>
      <artifactId>org.opennms.features.telemetry.config.api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.distributed</groupId>
      <artifactId>org.opennms.features.telemetry.distributed.common</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.distributed</groupId>
      <artifactId>org.opennms.features.telemetry.distributed.minion</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.distributed</groupId>
      <artifactId>org.opennms.features.telemetry.distributed.sentinel</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.protocols.bmp</groupId>
      <artifactId>org.opennms.features.telemetry.protocols.bmp.parser</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.protocols.bmp</groupId>
      <artifactId>org.opennms.features.telemetry.protocols.bmp.transport</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.protocols.netflow</groupId>
      <artifactId>org.opennms.features.telemetry.protocols.netflow.parser</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.protocols.netflow</groupId>
      <artifactId>org.opennms.features.telemetry.protocols.netflow.transport</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.telemetry.protocols.sflow</groupId>
      <artifactId>org.opennms.features.telemetry.protocols.sflow.parser</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topologies</groupId>
      <artifactId>org.opennms.features.topologies.service.api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.topology</groupId>
      <artifactId>org.opennms.features.topology.shell</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.vaadin-dashlets</groupId>
      <artifactId>dashlet-features</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.integration.api</groupId>
      <artifactId>karaf-features</artifactId>
      <version>${opennmsApiVersion}</version>
      <type>xml</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.opennms.osgi</groupId>
      <artifactId>opennms-osgi-core-rest</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.osgi.features.topology</groupId>
      <artifactId>opennms-topology-runtime-base</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.osgi.features.topology</groupId>
      <artifactId>opennms-topology-runtime-graphml</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.nsclient</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.xml</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <!-- override a bad repo that's causing issues -->
  <repositories>
    <repository>
      <id>spring-ext</id>
      <name>OpenNMS Mega-Repository (spring-ext override)</name>
      <url>https://maven.opennms.org/repository/everything/</url>
    </repository>
  </repositories>
</project>

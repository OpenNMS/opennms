################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

# OPENNMS: Override Karaf's standard-${karafVersion}-features.xml with our customized version with the HTTP bridge code
# and override Karaf's spring-${karafVersion}-features.xml and spring-legacy-${karafVersion}-features.xml with our versions
# that point to the modified standard features.
# OPENNMS: Include the main product features file generated by the mvn:org.opennms.karaf/opennms project
featuresRepositories = \
    mvn:org.opennms.karaf/opennms/${project.version}/xml/standard, \
    mvn:org.opennms.karaf/opennms/${project.version}/xml/spring, \
    mvn:org.opennms.karaf/opennms/${project.version}/xml/spring-legacy, \
    mvn:org.apache.karaf.features/framework/${karafVersion}/xml/features, \
    mvn:org.opennms.karaf/opennms/${project.version}/xml/features

# OPENNMS: Parenthesize standard Karaf boot features, add OpenNMS product features
featuresBoot = ( \
    instance/${karafVersion}, \
    package/${karafVersion}, \
    log/${karafVersion}, \
    ssh/${karafVersion}, \
    aries-blueprint/${karafVersion}, \
    framework/${karafVersion}, \
    system/${karafVersion}, \
    eventadmin/${karafVersion}, \
    feature/${karafVersion}, \
    shell/${karafVersion}, \
    management/${karafVersion}, \
    service/${karafVersion}, \
    jaas/${karafVersion}, \
    shell-compat,/${karafVersion} \
    deployer/${karafVersion}, \
    diagnostic/${karafVersion}, \
    wrap/2.6.7, \
    bundle/${karafVersion}, \
    config/${karafVersion}, \
    kar/${karafVersion} \
  ), \
  http,\
  http-whiteboard,\
  opennms-jaas-login-module,\
  karaf-extender, \
  opennms-osgi-core-rest, \
  opennms-health-rest,\
  datachoices, \
  opennms-activemq-shell, \
  opennms-collection-commands, \
  opennms-core-ipc-rpc-commands, \
  opennms-core-ipc-kafka-shell, \
  opennms-dhcpd, \
  opennms-events-commands, \
  opennms-send-event-command, \
  opennms-identity, \
  opennms-icmp-commands, \
  opennms-snmp-commands, \
  opennms-telemetry-collection,\
  opennms-telemetry-bmp,\
  opennms-telemetry-jti,\
  opennms-telemetry-nxos,\
  opennms-telemetry-graphite,\
  opennms-telemetry-openconfig, \
  opennms-dnsresolver-shell,\
  opennms-dnsresolver-netty,\
  opennms-flows,\
  opennms-topology-runtime-browsers,\
  opennms-topology-runtime-linkd,\
  opennms-topology-runtime-vmware,\
  opennms-topology-runtime-application,\
  opennms-topology-runtime-bsm,\
  opennms-topology-runtime-pathoutage,\
  opennms-provisioning-shell,\
  opennms-poller-shell,\
  opennms-topology-runtime-graphml,\
  opennms-topology-runtime-asset,\
  opennms-api-layer,\
  opennms-blobstore-postgres,\
  opennms-jsonstore-shell,\
  opennms-threshold-states-shell,\
  opennms-measurements-shell,\
  opennms-graphml,\
  opennms-graphs,\
  osgi-nrtg-local,\
  vaadin-node-maps,\
  vaadin-snmp-events-and-metrics, \
  vaadin-dashboard, \
  dashlet-summary, \
  dashlet-alarms, \
  dashlet-bsm, \
  dashlet-map, \
  dashlet-image, \
  dashlet-charts, \
  dashlet-grafana, \
  dashlet-rtc, \
  dashlet-rrd, \
  dashlet-ksc, \
  dashlet-topology, \
  dashlet-url, \
  dashlet-surveillance, \
  vaadin-surveillance-views, \
  vaadin-jmxconfiggenerator, \
  vaadin-adminpage, \
  org.opennms.features.bsm.shell-commands, \
  geolocation, \
  ifttt-integration, \
  opennms-endpoints-grafana, \
  opennms-reporting, \
  opennms-search, \
  opennms-karaf-health
# Ensure that the 'opennms-karaf-health' feature is installed *last*

#
# Resource repositories (OBR) that the features resolver can use
# to resolve requirements/capabilities
#
# The format of the resourceRepositories is 
# resourceRepositories=[xml:url|json:url],...
# for Instance:
#
#resourceRepositories=xml:http://host/path/to/index.xml
# or
#resourceRepositories=json:http://host/path/to/index.json
#

#
# Defines if the boot features are started in asynchronous mode (in a dedicated thread)
#
featuresBootAsynchronous=false

#
# Service requirements enforcement
#
# By default, the feature resolver checks the service requirements/capabilities of
# bundles for new features (xml schema >= 1.3.0) in order to automatically installs
# the required bundles.
# The following flag can have those values:
#   - disable: service requirements are completely ignored
#   - default: service requirements are ignored for old features
#   - enforce: service requirements are always verified
#
# OPENNMS: We need to disable this so that Pax Web doesn't complain about bring run
# inside our Felix bridge HTTP service (which does not implement the Pax Web services)
serviceRequirements=disable

#
# Store cfg file for config element in feature
#
#configCfgStore=true

#
# Configuration of features processing mechanism (overrides, blacklisting, modification of features)
# XML file defines instructions related to features processing
# versions.properties may declare properties to resolve placeholders in XML file
# both files are relative to ${karaf.etc}
#
#featureProcessing=org.apache.karaf.features.xml
#featureProcessingVersions=versions.properties

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
    <parent>
        <groupId>org.opennms</groupId>
        <artifactId>org.opennms.container</artifactId>
        <version>30.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.opennms.container</groupId>
    <artifactId>org.opennms.container.karaf</artifactId>
    <packaging>karaf-assembly</packaging>
    <name>OpenNMS :: OSGi Container :: Embedded Karaf</name>

    <build>
        <!-- Include resources from src/main in the distribution -->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/filtered-resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!--
                This configuration mimics the default Karaf assembly from:

                https://github.com/apache/karaf/blob/karaf-X.X.X/assemblies/apache-karaf/pom.xml
            -->
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
                <version>${karafVersion}</version>
                <extensions>true</extensions>
                <configuration>
                    <javase>1.8</javase>

                    <bootRepositories>
                        <!--Karaf standard features-->
                        <repository>mvn:org.apache.karaf.features/standard/${karafVersion}/xml/features</repository>
                        <!-- OPENNMS: Replace the spring-legacy features files with our modified versions -->
                        <repository>mvn:org.opennms.karaf/opennms/${project.version}/xml/spring-legacy</repository>

                        <!-- OPENNMS: Add the OpenNMS feature repository -->
                        <repository>mvn:org.opennms.karaf/opennms/${project.version}/xml/features</repository>
                    </bootRepositories>

                    <startupFeatures>
                        <feature>eventadmin</feature>
                    </startupFeatures>
                    <bootFeatures>
                        <feature>standard</feature>
                        <feature>eventadmin</feature>

                        <!-- Add the OpenNMS whiteboard to the default list of features -->
                        <feature>opennms-http-whiteboard</feature>

                        <!-- early bootstrap startup -->
                        <feature>opennms-jaas-login-module</feature>
                        <feature>karaf-extender</feature>
                        <feature>opennms-health-rest</feature>

                        <!-- main services startup -->
                        <feature>datachoices</feature>
                        <feature>geolocation</feature>
                        <feature>ifttt-integration</feature>
                        <feature>opennms-identity</feature>
                        <feature>opennms-api-layer</feature>
                        <feature>opennms-blobstore-postgres</feature>
                        <feature>opennms-config-management</feature>
                        <feature>opennms-core-ipc-rpc-commands</feature>
                        <feature>opennms-deviceconfig-monitor</feature>
                        <feature>opennms-deviceconfig-sink-consumer</feature>
                        <feature>opennms-deviceconfig-rest</feature>
                        <feature>opennms-deviceconfig-service</feature>
                        <feature>opennms-dhcpd</feature>
                        <feature>opennms-dnsresolver-netty</feature>
                        <feature>opennms-endpoints-grafana</feature>
                        <feature>opennms-flows</feature>
                        <feature>opennms-graphml</feature>
                        <feature>opennms-graphs</feature>
                        <feature>opennms-osgi-core-rest</feature>
                        <feature>opennms-reporting</feature>
                        <feature>opennms-scv-rest</feature>
                        <feature>opennms-search</feature>
                        <feature>opennms-telemetry-bmp</feature>
                        <feature>opennms-telemetry-collection</feature>
                        <feature>opennms-telemetry-graphite</feature>
                        <feature>opennms-telemetry-jti</feature>
                        <feature>opennms-telemetry-nxos</feature>
                        <feature>opennms-telemetry-openconfig</feature>
                        <feature>opennms-topology-runtime-application</feature>
                        <feature>opennms-topology-runtime-asset</feature>
                        <feature>opennms-topology-runtime-browsers</feature>
                        <feature>opennms-topology-runtime-bsm</feature>
                        <feature>opennms-topology-runtime-graphml</feature>
                        <feature>opennms-topology-runtime-linkd</feature>
                        <feature>opennms-topology-runtime-pathoutage</feature>
                        <feature>opennms-topology-runtime-vmware</feature>
                        <feature>osgi-nrtg-local</feature>

                        <!-- Vaadin UI -->
                        <feature>vaadin-adminpage</feature>
                        <feature>vaadin-dashboard</feature>
                        <feature>vaadin-jmxconfiggenerator</feature>
                        <feature>vaadin-node-maps</feature>
                        <feature>vaadin-snmp-events-and-metrics</feature>
                        <feature>vaadin-surveillance-views</feature>

                        <!-- Vaadin Dashboard Plugins -->
                        <feature>dashlet-alarms</feature>
                        <feature>dashlet-bsm</feature>
                        <feature>dashlet-charts</feature>
                        <feature>dashlet-grafana</feature>
                        <feature>dashlet-image</feature>
                        <feature>dashlet-ksc</feature>
                        <feature>dashlet-map</feature>
                        <feature>dashlet-rtc</feature>
                        <feature>dashlet-rrd</feature>
                        <feature>dashlet-summary</feature>
                        <feature>dashlet-surveillance</feature>
                        <feature>dashlet-topology</feature>
                        <feature>dashlet-url</feature>

                        <!-- shell commands (and their dependencies) -->
                        <feature>opennms-activemq-shell</feature>
                        <feature>opennms-collection-commands</feature>
                        <feature>opennms-core-ipc-kafka-shell</feature>
                        <feature>opennms-core-ipc-twin-shell</feature>
                        <feature>opennms-dnsresolver-shell</feature>
                        <feature>opennms-events-commands</feature>
                        <feature>opennms-icmp-commands</feature>
                        <feature>opennms-jsonstore-shell</feature>
                        <feature>opennms-measurements-shell</feature>
                        <feature>opennms-poller-shell</feature>
                        <feature>opennms-provisioning-shell</feature>
                        <feature>opennms-send-event-command</feature>
                        <feature>opennms-snmp-commands</feature>
                        <feature>opennms-threshold-states-shell</feature>
                        <feature>org.opennms.features.bsm.shell-commands</feature>

                        <!-- always load karaf health last, to trigger core Karaf startup complete -->
                        <feature>opennms-karaf-health</feature>
                    </bootFeatures>
                    <installedFeatures>
                        <!-- general priming to make sure the right spring is started -->
                        <feature>spring/${springVersion}</feature>
                        <feature>spring-aspects/${springVersion}</feature>
                        <feature>spring-instrument/${springVersion}</feature>
                        <feature>spring-jdbc/${springVersion}</feature>
                        <feature>spring-jms/${springVersion}</feature>

                        <!-- karaf wrapper feature -->
                        <feature>wrapper</feature>
                    </installedFeatures>

                    <blacklistedBundles>
                        <bundle>mvn:org.springframework/*</bundle>
                    </blacklistedBundles>

                    <libraries>
                        <library>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xerces/2.11.0_1;type:=endorsed;export:=true;delegate:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxp-api-1.4/${karaf.servicemix.specs.version};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/${karaf.servicemix.specs.version};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.3/2.3_1;type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxws-api-2.2/${karaf.servicemix.specs.version};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.saaj-api-1.3/${karaf.servicemix.specs.version};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/${karaf.servicemix.specs.version};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.2/${karaf.servicemix.specs.version};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xalan/2.7.2_3;type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xalan-serializer/2.7.2_1;type:=endorsed;export:=true</library>
                        <library>mvn:javax.annotation/javax.annotation-api/1.2;type:=endorsed;export:=true</library>

                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activator/${karaf.servicemix.specs.version};type:=default;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.locator/${karaf.servicemix.specs.version};type:=default;export:=true</library>

                        <library>mvn:net.java.dev.jna/jna/${jnaVersion};type:=boot;export:=false</library>
                        <library>mvn:net.java.dev.jna/jna-platform/${jnaVersion};type:=boot;export:=false</library>

                        <!-- OPENNMS: Add MINA bundles to prevent mina-sshd-core from refreshing (KARAF-5384) -->
                        <library>mvn:org.apache.mina/mina-core/${minaVersion};type:=boot;export:=false</library>

                        <!-- OPENNMS: Add our custom branding JAR -->
                        <library>mvn:org.opennms.container/org.opennms.container.branding/${project.version};type:=default;export:=true</library>
                    </libraries>

                    <generateConsistencyReport>${project.build.directory}</generateConsistencyReport>
                    <consistencyReportProjectName>OpenNMS Core (full)</consistencyReportProjectName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.nicoulaj.maven.plugins</groupId>
                <artifactId>checksum-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals><goal>files</goal></goals>
                    </execution>
                </executions>
                <configuration>
                    <algorithms><algorithm>SHA-1</algorithm></algorithms>
                    <fileSets>
                        <fileSet>
                            <directory>${project.build.directory}/assembly/system</directory>
                            <includes>
                                <include>**/*.jar</include>
                                <include>**/*.pom</include>
                                <include>**/*.war</include>
                                <include>**/*.xml</include>
                            </includes>
                        </fileSet>
                    </fileSets>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <id>cleanup-after-integration-tests</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/assembly</directory>
                                </fileset>
                            </filesets>
                            <overrideUid>0</overrideUid>
                            <overrideGid>0</overrideGid>
                            <tarLongFileMode>posix</tarLongFileMode>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Karaf internals and features -->
        <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>framework</artifactId>
            <version>${karafVersion}</version>
            <type>kar</type>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>standard</artifactId>
            <version>${karafVersion}</version>
            <classifier>features</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>

        <!-- OpenNMS Karaf features -->
        <dependency>
            <groupId>org.opennms.karaf</groupId>
            <artifactId>opennms</artifactId>
            <version>${project.version}</version>
            <classifier>spring-legacy</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.opennms.karaf</groupId>
            <artifactId>opennms</artifactId>
            <version>${project.version}</version>
            <classifier>features</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>

        <!-- OpenNMS Karaf tools -->
        <dependency>
            <groupId>org.opennms.dependencies</groupId>
            <artifactId>felix-dependencies</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.opennms.container</groupId>
            <artifactId>org.opennms.container.branding</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.opennms.dependencies</groupId>
            <artifactId>spring-beans-shaded-dependencies</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.opennms</groupId>
        <artifactId>org.opennms.container</artifactId>
        <version>34.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.opennms.container</groupId>
    <artifactId>org.opennms.container.shared</artifactId>
    <packaging>karaf-assembly</packaging>
    <name>OpenNMS :: Container :: Karaf (Shared)</name>

    <properties>
        <license.skipAddThirdParty>true</license.skipAddThirdParty>
        <enforcer-skip-banned-dependencies>true</enforcer-skip-banned-dependencies>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/filtered-resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!--
                This configuration mimics the default Karaf assembly from:

                https://github.com/apache/karaf/blob/karaf-X.X.X/assemblies/apache-karaf/pom.xml
            -->
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
                <configuration>
                    <blacklistedRepositories>
                        <!-- make sure the custom opennms karaf repo doesn't make it in -->
                        <repository>mvn:org.opennms.karaf/opennms/${project.version}/xml/standard</repository>
                    </blacklistedRepositories>
                    <bootRepositories>
                        <!-- OPENNMS: Add the OpenNMS Karaf extensions feature repository -->
                        <repository>mvn:org.opennms.karaf/opennms/${project.version}/xml/karaf-extensions</repository>
                        <!-- OPENNMS: Additional tools -->
                        <repository>mvn:io.hawt/hawtio-karaf/${hawtio.version}/xml/features</repository>
                        <!-- OPENNMS: get a good version of pax-cdi-features for inclusion -->
                        <repository>mvn:org.ops4j.pax.cdi/pax-cdi-features/${paxCdiVersion}/xml/features</repository>
                    </bootRepositories>
                    <installedFeatures>
                        <feature>wrapper</feature>

                        <!-- OPENNMS: Add Spring features that we need in the base container -->
                        <!-- These versions match the versions shipped with Apache Karaf 4.1.5 -->
                        <feature>spring/4.0.9.RELEASE_1</feature>
                        <feature>spring/4.1.9.RELEASE_1</feature>
                        <feature>spring/4.2.9.RELEASE_1</feature>
                        <feature>spring/4.3.30.RELEASE_1</feature>

                        <feature>spring-jms/4.1.9.RELEASE_1</feature>
                        <feature>spring/${springVersion}</feature>
                        <feature>spring-jms/${springVersion}</feature>

                        <feature>cassandra-driver/${cassandraVersion}</feature>
                        <feature>jetty/${jettyVersion}</feature>
                        <feature>pax-jetty/${jettyVersion}</feature>
                        <feature>pax-http-whiteboard</feature>
                    </installedFeatures>
                    <startupFeatures>
                        <feature>eventadmin</feature>
                    </startupFeatures>
                    <bootFeatures>
                        <!-- Karaf "standard" features to include in the core -->
                        <feature>aries-blueprint</feature>
                        <feature>http</feature>
                        <feature>http-whiteboard</feature>
                        <feature>jaas</feature>
                        <feature>jaas-deployer</feature>
                        <feature>jasypt-encryption</feature>
                        <feature>shell-compat</feature>
                        <feature>standard</feature>
                        <feature>war</feature>

                        <!-- OPENNMS: Add our enhancements to the container -->
                        <feature>karaf-extender</feature>
                        <feature>scv-api</feature>
                        <feature>scv-jceks-impl</feature>
                        <feature>scv-shell</feature>

                        <!-- OPENNMS: Additional or overrided tools -->
                        <feature>hawtio</feature>
                        <feature>jolokia/${jolokiaVersion}</feature>
                        <feature>ssh/${karafSshdVersion}</feature>
                    </bootFeatures>
                    <blacklistedFeatures>
                        <!-- make sure the custom opennms features don't make it in -->
                        <feature>opennms-bridge-http-service</feature>
                        <feature>opennms-http-whiteboard</feature>

                        <feature>jetty/9.4.43.v20210629</feature>
                        <feature>pax-jetty/9.4.43.v20210629</feature>
                        <feature>ssh/${karafVersion}</feature>
                    </blacklistedFeatures>
                    <installedBundles>
                        <bundle>mvn:org.ops4j.pax.logging/pax-logging-api/${paxLoggingVersion}</bundle>
                        <bundle>mvn:org.ops4j.pax.logging/pax-logging-log4j2/${paxLoggingVersion}</bundle>
                        <bundle>mvn:org.ops4j.pax.logging/pax-logging-logback/${paxLoggingVersion}</bundle>

                        <bundle>mvn:com.fasterxml.jackson.core/jackson-annotations/${jackson2Version}</bundle>
                        <bundle>mvn:com.fasterxml.jackson.core/jackson-core/${jackson2Version}</bundle>
                        <bundle>mvn:com.fasterxml.jackson.core/jackson-databind/${jackson2Version}</bundle>

                        <bundle>mvn:org.apache.felix/org.apache.felix.http.bridge/${felixBridgeVersion}</bundle>
                        <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jasypt/${jasyptVersion}_1</bundle>
                        <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jasypt-spring31/${jasyptVersion}_1</bundle>
                        <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/${xstreamVersion}_1</bundle>
                        <bundle>mvn:org.codehaus.jettison/jettison/${jettisonVersion}</bundle>
                    </installedBundles>
                    <libraries>
                        <!-- OPENNMS: Add JNA bundles to prevent jline from refreshing (KARAF-5251) -->
                        <library>mvn:net.java.dev.jna/jna/${jnaVersion};type:=boot;export:=false</library>
                        <library>mvn:net.java.dev.jna/jna-platform/${jnaVersion};type:=boot;export:=false</library>

                        <!-- OPENNMS: Add MINA bundles to prevent mina-sshd-core from refreshing (KARAF-5384) -->
                        <library>mvn:org.apache.mina/mina-core/${minaVersion};type:=boot;export:=false</library>
                    </libraries>
                    <javase>1.8</javase>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <id>cleanup-after-integration-tests</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/assembly</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <!-- scope is compile so all features (there is only one) are 
                installed into startup.properties and the feature repo itself is not added 
                in etc/org.apache.karaf.features.cfg file -->
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>framework</artifactId>
            <version>${karafVersion}</version>
            <type>kar</type>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>standard</artifactId>
            <version>${karafVersion}</version>
            <classifier>features</classifier>
            <type>xml</type>
        </dependency>
        <dependency>
            <groupId>org.opennms.karaf</groupId>
            <artifactId>opennms</artifactId>
            <version>${project.version}</version>
            <classifier>spring-legacy</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.opennms.karaf</groupId>
            <artifactId>opennms</artifactId>
            <version>${project.version}</version>
            <classifier>karaf-extensions</classifier>
            <type>xml</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.opennms.dependencies</groupId>
            <artifactId>spring-dependencies</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>

<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app id="opennms" version="2.4"
		 xmlns="http://java.sun.com/xml/ns/j2ee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <jsp-config>
    <jsp-property-group>
        <url-pattern>*.jsp</url-pattern>
        <page-encoding>UTF-8</page-encoding>
    </jsp-property-group>
  </jsp-config>
		 
  <display-name>opennms</display-name>

  <!-- Uncomment this to set the webapp timeout to infinite.
  <session-config>
    <session-timeout>-1</session-timeout>
  </session-config>
  -->
  
  <context-param>
    <param-name>dontBlameOpenNMS</param-name>
    <param-value>false</param-value>
  </context-param>
  
  <!--  This is used by the Spring Log4jConfigListener <listener> below -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>/WEB-INF/log4j.properties</param-value>
  </context-param>

  <!--  This is used by the Spring ContextLoaderListener <listener> below -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
        /WEB-INF/applicationContext-common.xml
        classpath:/org/opennms/web/svclayer/applicationContext-svclayer.xml
        classpath:/META-INF/opennms/applicationContext-reporting.xml
        /WEB-INF/applicationContext-spring-security.xml
        /WEB-INF/applicationContext-jersey.xml
    </param-value>
  </context-param>
  
  <context-param>
    <param-name>parentContextKey</param-name>
    <param-value>daoContext</param-value>
  </context-param>
  

	<filter>
	  <!--  note the name of this filter is important and is used in the app contexts -->
	  <filter-name>springSecurityFilterChain</filter-name>
	  <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

  <filter>
    <description>Adds the refresh HTTP header to a servlet's or JSP's output so it will be automatically reloaded.</description>
    <filter-name>AddRefreshHeader-300</filter-name>
    <filter-class>org.opennms.web.AddRefreshHeaderFilter</filter-class>
    <init-param>
      <description>This parameter specifies how often to refresh the page.</description>
      <param-name>seconds</param-name>
      <param-value>300</param-value>
    </init-param>
  </filter>

  <filter>
    <description>Adds the refresh HTTP header to a servlet's or JSP's output so it will be automatically reloaded.</description>
    <filter-name>AddRefreshHeader-120</filter-name>
    <filter-class>org.opennms.web.AddRefreshHeaderFilter</filter-class>
    <init-param>
      <description>This parameter specifies how often to refresh the page.</description>
      <param-name>seconds</param-name>
      <param-value>120</param-value>
    </init-param>
  </filter>
  
  <filter>
    <description>Adds the refresh HTTP header to a servlet's or JSP's output so it will be automatically reloaded.</description>
    <filter-name>AddRefreshHeader-30</filter-name>
    <filter-class>org.opennms.web.AddRefreshHeaderFilter</filter-class>
    <init-param>
      <description>This parameter specifies how often to refresh the page.</description>
      <param-name>seconds</param-name>
      <param-value>30</param-value>
    </init-param>
  </filter>

  
  <filter>
    <description>Stores HTTP request parameters in request attributes for later access</description>
    <filter-name>StoreRequestProperties</filter-name>
    <filter-class>org.opennms.web.StoreRequestPropertiesFilter</filter-class>
    <init-param>
      <description>Into which request attribute the value of HttpServletRequest.getServletPath() is stored</description>
      <param-name>relativeServletPathAttribute</param-name>
      <param-value>relativeRequestPath</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>openSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
  </filter>
  
  <filter>
    <filter-name>eXtremeExport</filter-name>
    <filter-class>org.extremecomponents.table.filter.ExportFilter</filter-class>
  </filter>
  
  <filter-mapping>
    <filter-name>openSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>StoreRequestProperties</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/index.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/rtc/category.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/node.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/linkednode.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/interface.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/service.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/outage/list.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/graph/results.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/KSC/customView.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-120</filter-name>
    <url-pattern>/event/list</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-30</filter-name>
    <url-pattern>/alarm/list.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-30</filter-name>
    <url-pattern>/alarm/detail.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>eXtremeExport</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <listener>
    <!-- This listener handles our custom startup/shutdown behavior. -->
    <listener-class>org.opennms.web.InitializerServletContextListener</listener-class>
  </listener>

  <!--
    Log4jConfigListener must come after InitializerServletContextListener
    because the opennms.webapplogs.dir system property used in log4j.properties
    is set by InitializerServletContextListener.

    However, putting this after InitializerServletContextListener means you
    won't see any of the log messages generated in contextInitialized() in
    InitializerServletContextListener.

    So, if you're getting a 'SEVERE: Error listenerStart' or similar error from
    Tomcat, and the OpenNMS webapp logs don't appear to contain any errors, try
    manually replacing ${opennms.webapplogs.dir} in log4j.properties, and moving
    this listener above InitializerServletContextListener, so you can see the
    messages generated by InitializerServletContextListener.
  -->
  <listener>
    <listener-class>org.opennms.web.Log4jConfigListener</listener-class>
  </listener>

  <listener>
    <!-- This listener handles our custom startup/shutdown behavior. -->
    <listener-class>org.opennms.web.DependencyCheckingContextListener</listener-class>
  </listener>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!--  RESTful Web Services -->
  <servlet>
    <servlet-name>opennmsRestWebServices</servlet-name>
    <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
    <init-param>
      <param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
      <param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
    </init-param>
    <init-param>
      <param-name>com.sun.jersey.config.property.packages</param-name>
      <param-value>org.opennms.web.rest</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <error-page>
    <exception-type>org.opennms.web.category.CategoryNotFoundException</exception-type>
    <location>/errors/categorynotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.MissingParameterException</exception-type>
    <location>/errors/missingparam.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.event.EventIdNotFoundException</exception-type>
    <location>/errors/eventidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.alarm.AlarmIdNotFoundException</exception-type>
    <location>/errors/alarmidnotfound.jsp</location>
  </error-page>
    <error-page>
    <exception-type>org.opennms.web.element.ElementIdNotFoundException</exception-type>
    <location>/errors/elementidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.notification.NoticeIdNotFoundException</exception-type>
    <location>/errors/noticeidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.outage.OutageIdNotFoundException</exception-type>
    <location>/errors/outageidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>java.lang.SecurityException</exception-type>
    <location>/errors/sealingviolation.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.controller.statisticsReports.StatisticsReportIdNotFoundException</exception-type>
    <location>/errors/statisticsreportidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.vulnerability.VulnerabilityIdNotFoundException</exception-type>
    <location>/errors/vulnerabilityidnotfound.jsp</location>
  </error-page>  
  <error-page>
    <exception-type>org.opennms.netmgt.model.events.EventProxyException</exception-type>
    <location>/errors/eventproxyexception.jsp</location>
  </error-page>  
  <error-page>
    <exception-type>org.opennms.web.admin.nodeManagement.NoManagedInterfacesException</exception-type>
    <location>/errors/nomanagedinterfaces.jsp</location>
  </error-page>
  <error-page>
    <exception-type>java.lang.Throwable</exception-type>
    <location>/errors/unknownexception.jsp</location>
  </error-page>  
  
  <!-- the welcome-file elements need to point at a file that exists or
       a non-wildcard url-pattern in a servlet-mapping element. -->
  <welcome-file-list>
    <welcome-file>frontPage.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>


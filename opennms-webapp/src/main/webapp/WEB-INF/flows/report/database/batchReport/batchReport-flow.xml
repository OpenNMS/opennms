<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<secured attributes="ROLE_USER" />

	<var name="triggerDetails" class="org.opennms.web.report.database.model.TriggerDetails" />

	<input name="reportId" required="true" />
	<input name="schedule" type="boolean" required="true" />

	<on-start>
		<evaluate expression="reportWrapperService.getParameters(reportId)" result="flowScope.parameters" />
	</on-start>
	
	<decision-state id="hasParameters">
    	<if test="reportWrapperService.hasParameters(reportId)" then="reportParameters" else="deliveryOptions" />
	</decision-state>
	
	<view-state id="reportParameters" model="parameters">
		<on-render>
        	<evaluate expression="categoryConfigService.getCategoriesList()"
                  result="viewScope.categories" />
            <evaluate expression="categoryDao.getAllCategoryNames()"
                  result="viewScope.onmsCategories" />
    	</on-render>
		<transition on="proceed" to="deliveryOptions" />
		<transition on="cancel" to="reportCancelled" bind="false" />
	</view-state>

	<view-state id="deliveryOptions" model="deliveryOptions">

		<on-render>
			<evaluate expression="reportWrapperService.getDeliveryOptions(reportId, currentUser.name)" 
				result="flowScope.deliveryOptions" />
			<evaluate expression="reportWrapperService.getFormats(reportId)"
				result="viewScope.formats" />
		</on-render>
		<transition on="proceed" to="scheduleOrExecute" />
    <transition on="revise" to="hasParameters" />
		<transition on="cancel" to="reportCancelled" />
	</view-state>
	
	<decision-state id="scheduleOrExecute">
    	<if test="schedule" then="cronExpression" else="executeReport" />
	</decision-state>

	<action-state id="executeReport">
		<evaluate expression="reportSchedulerService.execute(reportId, parameters, deliveryOptions, flowRequestContext)" />
		<transition on="success" to="reportRunning" />
		<transition on="error" to="reportError" />
	</action-state>
	
	<view-state id="cronExpression" model="triggerDetails">
		<transition on="revise" to="deliveryOptions" />
		<transition on="cancel" to="reportCancelled" />
		<transition on="proceed" to="scheduleReport" />
	</view-state>
	
	<action-state id="scheduleReport">
		<evaluate expression="reportSchedulerService.addCronTrigger(reportId,
			parameters, 
			deliveryOptions,
        	triggerDetails.getCronExpression(),
        	flowRequestContext)" />
		<transition on="success" to="reportScheduled" />
		<transition on="error" to="reportError" />
	</action-state>
		
	<view-state id="reportError">
		<transition on="proceed" to="reportCancelled" />
	</view-state>
	
	<view-state id="reportRunning">
		<transition on="proceed" to="reportComplete" />
	</view-state>
	
	<view-state id="reportScheduled">
		<transition on="proceed" to="reportComplete" />
	</view-state>

	<end-state id="reportCancelled" />
	<end-state id="reportComplete" />

</flow>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>opennms</artifactId>
    <groupId>org.opennms</groupId>
    <version>1.13.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>opennms-webapp</artifactId>
  <packaging>war</packaging>
  <name>OpenNMS Web Application</name>
  <properties>
    <moduleName>org.opennms.dashboard.Dashboard</moduleName>
    <moduleHtml>index.html</moduleHtml>
    <web.port>8080</web.port>
		<!-- this is used by runInPlace.sh to get the overwise provided 
				 onms libs into the WEB-INF/lib for jetty -->
		<onmsLibScope>provided</onmsLibScope>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>test-compile</phase>
            <goals><goal>copy</goal></goals>
          </execution>
        </executions>
        <configuration>
          <artifactItems>
            <artifactItem>
              <groupId>org.opennms.dependencies</groupId>
              <artifactId>jaxb-dependencies</artifactId>
              <type>pom</type>
              <overWrite>false</overWrite>
              <outputDirectory>${basedir}/target/endorsed</outputDirectory>
            </artifactItem>
          </artifactItems>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>-Xmx1g -Djava.endorsed.dirs=${basedir}/target/endorsed</argLine>
          <systemProperties>
            <property>
              <name>java.endorsed.dirs</name>
              <value>${basedir}/target/endorsed</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>.gwt-cache</directory>
            </fileset>
            <fileset>
              <directory>tomcat</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archiveClasses>true</archiveClasses>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>${basedir}/src/main/web-filtered</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.opennms.maven.plugins</groupId>
        <artifactId>castor-maven-plugin</artifactId>
      </plugin>

      <!-- plugin to use to run webapp in an embedded tomcat -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
          <path>/${project.artifactId}</path>
          <port>${web.port}</port>
        </configuration>
      </plugin>
      <!-- plugin to use to run webapp in an embedded jetty -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <contextPath>/opennms</contextPath>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <connectors>
            <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
              <port>${web.port}</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
          <systemProperties>
            <systemProperty>
              <name>log4j.configuration</name>
              <value>file:${basedir}/runInPlace-log4j.properties</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.sun.tools.jxc.maven2</groupId>
        <artifactId>maven-jaxb-schemagen-plugin</artifactId>
        <version>1.2</version>
        <configuration>
          <destdir>${project.build.directory}/xsds</destdir>
          <srcdir>${basedir}/src/main/java</srcdir>
          <verbose>false</verbose>
          <includes>
            <include>org/opennms/web/snmpinfo/*.java</include>
          </includes>
          <schemas>
            <schema>
              <namespace>http://xmlns.opennms.org/xsd/config/snmp-info</namespace>
              <file>snmp-info.xsd</file>
            </schema>
          </schemas>
        </configuration>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/meta-inf.xml</descriptor>
            <descriptor>src/assembly/web-inf.xml</descriptor>
            <descriptor>src/assembly/xsds.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Generates the GWT Container and Nature for GWT projects when eclipse:eclipse is run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <additionalBuildcommands>
            <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
            <buildcommand>com.google.gwt.eclipse.core.gwtProjectValidator</buildcommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
            <projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
          </additionalProjectnatures>
          <classpathContainers>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
            <classpathContainer>com.google.gwt.eclipse.core.GWT_CONTAINER</classpathContainer>
          </classpathContainers>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
            <execution>
                <id>attach-artifacts</id>
                <phase>package</phase>
                <goals>
                    <goal>attach-artifact</goal>
                </goals>
                <configuration>
                    <artifacts>
                        <artifact>
                            <file>target/opennms-webapp-1.13.0-SNAPSHOT/WEB-INF/lib/opennms-webapp-1.13.0-SNAPSHOT.jar</file>
                            <type>jar</type>
                        </artifact>
                    </artifacts>
                </configuration>
            </execution>
            <execution>
              <id>add-source</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.build.directory}/generated-sources/castor</source>
                </sources>
              </configuration>
            </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									org.opennms.maven.plugins
    								</groupId>
    								<artifactId>
    									castor-maven-plugin
    								</artifactId>
    								<versionRange>[1.0,)</versionRange>
    								<goals>
    									<goal>generate</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									org.apache.maven.plugins
    								</groupId>
    								<artifactId>
    									maven-dependency-plugin
    								</artifactId>
    								<versionRange>[2.4,)</versionRange>
    								<goals>
    									<goal>copy</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>jspc</id>
      <activation><activeByDefault>true</activeByDefault></activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-jspc-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>jspc</id>
                <goals>
                  <goal>jspc</goal>
                </goals>
                <configuration>
                  <webXmlFragment>${basedir}/target/web.xml.jspc-insert</webXmlFragment>
                  <generatedClasses>${basedir}/target/jsp-classes</generatedClasses>
                  <useProvidedScope>true</useProvidedScope>
                  <tldJarNamePatterns>.*\.jar$</tldJarNamePatterns>
                </configuration>
              </execution>
            </executions>
            <!-- add some jars to the plugin classpath so they can be searched for .tld files -->
            <dependencies>
              <dependency>
                <groupId>org.opennms.dependencies</groupId>
                <artifactId>spring-web-dependencies</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
              </dependency>
              <dependency>
                <groupId>org.opennms.dependencies</groupId>
                <artifactId>spring-security-dependencies</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
              </dependency>
              <dependency>
                <groupId>org.extremecomponents</groupId>
                <artifactId>extremecomponents</artifactId>
                <version>1.0.1</version>
                <exclusions>
                  <exclusion>
                    <groupId>taglibs</groupId>
                    <artifactId>standard</artifactId>
                  </exclusion>
                </exclusions>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencies>

    <!-- indirect OpenNMS dependencies that belong in $OPENNMS_HOME/lib -->
    <!-- these should all be <scope>${onmsLibScope}</scope> and also included in opennms-base-assembly -->

    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-dao</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-web-api</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-reporting</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-provision-persistence</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rrd-jrobin</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-web-dependencies</artifactId>
      <type>pom</type>
      <scope>${onmsLibScope}</scope>
      <!-- 
        We have to exclude this Java compiler from the classpath because it
        conflicts with one bundled inside gwt-dev that is used when GWT compiles
        code into Javascript.

        http://code.google.com/p/google-web-toolkit/issues/detail?id=5290
      -->
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.jdt.core.compiler</groupId>
          <artifactId>ecj</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.opennms.core</groupId>
      <artifactId>org.opennms.core.soa</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>felix-dependencies</artifactId>
      <type>pom</type>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>gwt-dependencies</artifactId>
      <type>pom</type>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>rancid-dependencies</artifactId>
      <type>pom</type>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>snmp-dependencies</artifactId>
      <type>pom</type>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.gwt-ksc-add</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.gwt-ksc-combobox</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.gwt-suggestion-combobox</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.gwt-graph-resources-list</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.gwt-snmpselect-list</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.instrumentationLogReader</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>   
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.node-page-list</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.opennms-gwt-theme</artifactId>
      <version>${project.version}</version>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.reporting</groupId>
      <artifactId>org.opennms.features.reporting.core</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.reporting</groupId>
      <artifactId>org.opennms.features.reporting.api</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.reporting</groupId>
      <artifactId>org.opennms.features.reporting.availability</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.reporting</groupId>
      <artifactId>org.opennms.features.reporting.model</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.reporting</groupId>
      <artifactId>org.opennms.features.reporting.dao</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.reporting</groupId>
      <artifactId>org.opennms.features.reporting.repository</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.request-tracker</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.springframework-security</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.system-report</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>

    <!-- indirect 3rd-party dependencies that belong in $OPENNMS_HOME/lib -->
    <!-- these should all be <scope>${onmsLibScope}</scope> and also included in opennms-base-assembly -->

    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <classifier>jdk15</classifier>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>ognl</groupId>
      <artifactId>ognl</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-dom</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-svg-dom</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-transcoder</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-xml</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-util</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.orbit</groupId>
      <artifactId>org.apache.taglibs.standard.glassfish</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>org.extremecomponents</groupId>
      <artifactId>extremecomponents</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <!--

      JMesa is the latest version of the extremecomponents library. We
      should eventually migrate our code to use it.

    <dependency>
      <groupId>org.jmesa</groupId>
      <artifactId>jmesa</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    -->
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>poi</groupId>
      <artifactId>poi</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>rome</groupId>
      <artifactId>rome</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>
    <dependency>
      <groupId>struts</groupId>
      <artifactId>struts</artifactId>
      <scope>${onmsLibScope}</scope>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwtVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-dao</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-provision-persistence</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.test-api</groupId>
      <artifactId>org.opennms.core.test-api.db</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.test-api</groupId>
      <artifactId>org.opennms.core.test-api.http</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.test-api</groupId>
      <artifactId>org.opennms.core.test-api.xml</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.test-api</groupId>
      <artifactId>org.opennms.core.test-api.services</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opennms.tests</groupId>
      <artifactId>org.opennms.tests.mock-elements</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-core</artifactId>
      <version>1.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-server-jndi</artifactId>
      <version>1.0.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
       default-lazy-init="true">

  <bean id="configTester" class="org.opennms.netmgt.config.tester.ConfigTester">
    <property name="configs">
      <map>
        <entry key="ackd-configuration.xml" value="ackdConfigurationDao"/>
        <entry key="actiond-configuration.xml" value="actiondConfigFactory"/>
        <entry key="ami-config.xml" value="amiPeerFactory"/>
        <!-- <entry key="asterisk-configuration.properties" value="asteriskConfigProperties"/> --><!-- Not part of standard build -->
        <entry key="availability-reports.xml" value="onmsReportConfigDao"/>
        <entry key="capsd-configuration.xml" value="capsdConfigFactory"/>
        <entry key="categories.xml" value="categoryFactory"/>
        <entry key="chart-configuration.xml" value="chartConfigFactory"/>
        <!-- <entry key="collectd-configuration.xml" value="collectdConfigFactory"/>--><!-- database access -->
        <entry key="database-reports.xml" value="databaseReportConfigDao"/>
        <entry key="database-schema.xml" value="databaseSchemaConfigFactory"/>
        <entry key="datacollection-config.xml" value="dataCollectionConfigDao"/>
        <entry key="destinationPaths.xml" value="destinationPathFactory"/>
        <!-- <entry key="dhcpd-configuration.xml" value="dhcpdConfigFactory"/> --><!-- Not part of standard build -->
        <entry key="discovery-configuration.xml" value="discoveryConfigFactory"/>
        <entry key="eventconf.xml" value="eventConfDao"/>
        <entry key="eventd-configuration.xml" value="eventdConfigFactory"/>
        <entry key="exclude-ueis.properties" value="excludeUeisProperties"/>
        <entry key="groups.xml" value="groupFactory"/>
        <entry key="http-datacollection-config.xml" value="httpCollectionConfigFactory"/>
        <entry key="jasper-reports.xml" value="jasperReportConfigDao"/>
        <entry key="javamail-configuration.properties" value="javaMailerConfig"/>
        <entry key="javamail-configuration.xml" value="javamailConfigurationDao"/>
        <entry key="jdbc-datacollection-config.xml" value="jdbcDataCollectionConfigDao"/>
        <entry key="jmx-datacollection-config.xml" value="jmxDataCollectionConfigFactory"/>
        <entry key="ksc-performance-reports.xml" value="kscReportFactory"/>
        <!-- <entry key="linkd-configuration.xml" value="linkdConfigFactory"/> --><!-- database access -->
        <entry key="magic-users.properties" value="userDao"/>
        <entry key="map.properties" value="mapPropertiesFactory"/>
        <!-- <entry key="mapsadapter-configuration.xml" value="mapsAdapterConfigFactory"/> --><!--  database access -->
        <entry key="microblog-configuration.xml" value="microblogConfigurationDao"/>
        <entry key="model-importer.properties" value="modelImporterProperties"/>
        <!--  <entry key="modemConfig.properties" value="unknown"/> -->
        <!--  <entry key="monitoring-locations.xml" value="locationMonitorDaoHibernate"/> -->
        <entry key="notifd-configuration.xml" value="notifdConfigFactory"/>
        <entry key="notificationCommands.xml" value="notificationCommandFactory"/>
        <!-- <entry key="notifications.xml" value="notificationFactory"/> --><!-- database access -->
        <!-- <entry key="nsclient-config.xml" value="nsClientPeerFactory"/> -->
        <!-- <entry key="nsclient-datacollection-config.xml" value="nsClientDataCollectionConfigFactory"/> -->
        <entry key="opennms-datasources.xml" value="dataSourceTester"/>
        <entry key="opennms-server.xml" value="opennmsServerConfigFactory"/>
        <!-- <entry key="opennms.properties" value="unknown"/> -->
        <!-- <entry key="otrs.properties" value="otrsConfigDaoCheck"/> --> <!-- Not part of standard build -->
        <entry key="poll-outages.xml" value="pollOutagesConfigFactory"/>
        <entry key="poller-config.properties" value="pollerConfigProperties"/>
        <!-- <entry key="poller-configuration.xml" value="pollerConfigFactory"/> --><!-- database access -->
        <entry key="provisiond-configuration.xml" value="provisiondConfigurationDao"/>
        <!-- <entry key="rancid-configuration.xml" value="rancidAdapterConfigFactory"/> --><!-- Not part of standard build -->
        <entry key="reportd-configuration.xml" value="reportdConfigurationDao"/>
        <entry key="response-adhoc-graph.properties" value="responseAdhocGraph"/>
        <entry key="response-graph.properties" value="responsePrefabGraph"/>
        <entry key="rrd-configuration.properties" value="rrdConfigurationProperties"/>
        <!-- <entry key="rt.properties" value="rtConfigDaoCheck"/> --><!-- Not part of standard build -->
        <entry key="rtc-configuration.xml" value="rtcConfigFactory"/>
        <entry key="rws-configuration.xml" value="rwsConfigFactory"/>
        <entry key="scriptd-configuration.xml" value="scriptdConfigFactory"/>
        <entry key="service-configuration.xml" value="serviceConfigFactory"/>
        <entry key="site-status-views.xml" value="siteStatusViewConfigDao"/>
        <entry key="snmp-adhoc-graph.properties" value="snmpAdhocGraph"/>
        <!-- <entry key="snmp-asset-adapter-configuration.xml" value="snmpAssetAdapterConfigFactory"/> --><!-- Not part of standard build -->
        <entry key="snmp-config.xml" value="snmpConfigDao"/>
        <entry key="snmp-graph.properties" value="snmpPrefabGraph"/>
        <!-- <entry key="snmp-interface-poller-configuration.xml" value="snmpInterfacePollerConfigFactory"/> --><!-- database access -->
        <entry key="statsd-configuration.xml" value="statisticsDaemonConfigDao"/>
        <entry key="surveillance-views.xml" value="surveillanceViewConfigDao"/>
        <entry key="syslogd-configuration.xml" value="syslogdConfigFactory"/>
        <entry key="syslog-northbounder-configuration.xml" value="syslogNorthbounderConfigDao"/>
        <!-- <entry key="threshd-configuration.xml" value="threshdConfigFactory"/> --><!-- database access -->
        <entry key="thresholds.xml" value="thresholdingConfigFactory"/>
        <entry key="tl1d-configuration.xml" value="tl1ConfigurationDao"/>
        <entry key="translator-configuration.xml" value="eventTranslatorConfigFactory"/>
        <entry key="trapd-configuration.xml" value="trapdConfigFactory"/>
        <entry key="users.xml" value="userFactory"/>
        <entry key="vacuumd-configuration.xml" value="vacuumdConfigFactory"/>
        <entry key="viewsdisplay.xml" value="viewsDisplayFactory"/>
        <entry key="wmi-config.xml" value="wmiPeerFactory"/>
        <entry key="wmi-datacollection-config.xml" value="wmiDataCollectionConfigFactory"/>

        <!-- VMware configuration files -->
        <entry key="vmware-cim-datacollection-config.xml" value="VmwareCimDatacollectionConfigDao"/>
        <entry key="vmware-datacollection-config.xml" value="VmwareDatacollectionConfigDao"/>
        <entry key="vmware-config.xml" value="VmwareConfigDao"/>
        <entry key="xmlrpcd-configuration.xml" value="xmlrpcdConfigFactory"/>
        <!-- <entry key="xmp-config.xml" value="xmpConfigFactory"/> --><!-- Not part of standard build -->
        <!-- <entry key="xmp-datacollection-config.xml" value="xmpCollectionFactory"/> --><!-- Not part of standard build -->
        <!-- <entry key="xmpp-configuration.properties" value="unknown"/> --><!-- config code not in its own class -->
      </map>
    </property>
  </bean>
  
  <bean id="ackdConfigurationDao" class="org.opennms.netmgt.dao.jaxb.DefaultAckdConfigurationDao">
    <property name="configResource" value="file:${opennms.home}/etc/ackd-configuration.xml" />
  </bean>
  
  <bean id="actiondConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.ActiondConfigFactory.init</value></property>
  </bean>

  <bean id="actiondConfigFactory" class="org.opennms.netmgt.config.ActiondConfigFactory" depends-on="actiondConfigFactory-init" factory-method="getInstance"/>
  
  <bean id="amiPeerFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.AmiPeerFactory.init</value></property>
  </bean>

  <bean id="amiPeerFactory" class="org.opennms.netmgt.config.AmiPeerFactory" depends-on="amiPeerFactory-init" factory-method="getInstance"/>
  
  <bean id="asteriskConfigProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.asterisk.utils.AsteriskConfig.getProperties</value></property>
  </bean>
  
  <bean id="onmsReportConfigDao" class="org.opennms.netmgt.dao.castor.DefaultOnmsReportConfigDao">
    <property name="configResource" value="file:${opennms.home}/etc/availability-reports.xml"/>
  </bean>
  
  <bean id="capsdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.CapsdConfigFactory.init</value></property>
  </bean>

  <bean id="capsdConfigFactory" class="org.opennms.netmgt.config.CapsdConfigFactory" depends-on="capsdConfigFactory-init" factory-method="getInstance"/>
  
  <bean id="categoryFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.CategoryFactory.init</value></property>
  </bean>

  <bean id="categoryFactory" class="org.opennms.netmgt.config.CategoryFactory" depends-on="categoryFactory-init" factory-method="getInstance"/>
  
  <bean id="chartConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.ChartConfigFactory.init</value></property>
  </bean>

  <bean id="chartConfigFactory" class="org.opennms.netmgt.config.ChartConfigFactory" depends-on="chartConfigFactory-init" factory-method="getInstance"/>

<!-- 
  Ugh, CollectdConfigFactory tries to hit the database via CollectdConfig.createPackageIpListMap -> CollectdPackage.createIpList
  
  2010-09-05 00:43:45,462 ERROR [main] org.opennms.netmgt.config.CollectdPackage: createPackageIpMap: failed to map package: example1 to an IP List: org.opennms.netmgt.filter.FilterParseException: SQL Exception occurred getting IP List: java.sql.SQLException: Connections could not be acquired from the underlying database!
org.opennms.netmgt.filter.FilterParseException: SQL Exception occurred getting IP List: java.sql.SQLException: Connections could not be acquired from the underlying database!
	at org.opennms.netmgt.filter.JdbcFilterDao.getIPList(JdbcFilterDao.java:326)
	at org.opennms.netmgt.config.CollectdPackage.createIpList(CollectdPackage.java:316)
	at org.opennms.netmgt.config.CollectdConfig.createPackageIpListMap(CollectdConfig.java:130)
	at org.opennms.netmgt.config.CollectdConfig.initialize(CollectdConfig.java:148)
	at org.opennms.netmgt.config.CollectdConfig.<init>(CollectdConfig.java:73)
	at org.opennms.netmgt.config.CollectdConfigFactory.<init>(CollectdConfigFactory.java:129)
	at org.opennms.netmgt.config.CollectdConfigFactory.init(CollectdConfigFactory.java:199)
  
  Interestingly, that exception does not bubble up and the initialization eventually completes once C3P0 gives up.
  -->
  <!--
  <bean id="collectdConfigFactory" class="org.opennms.netmgt.config.CollectdConfigFactory"/>
  -->

  <bean id="databaseReportConfigDao" class="org.opennms.netmgt.dao.castor.DefaultDatabaseReportConfigDao">
    <property name="configResource" value="file:${opennms.home}/etc/database-reports.xml"/>
  </bean>
  
  <bean id="databaseSchemaConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.DatabaseSchemaConfigFactory.init</value></property>
  </bean>

  <bean id="databaseSchemaConfigFactory" class="org.opennms.netmgt.config.DatabaseSchemaConfigFactory" depends-on="databaseSchemaConfigFactory-init" factory-method="getInstance"/>
  
  <bean id="dataCollectionConfigDao" class="org.opennms.netmgt.config.DefaultDataCollectionConfigDao">
    <property name="configResource" value="file:${opennms.home}/etc/datacollection-config.xml"/>
  </bean>
  
  <bean id="destinationPathFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.DestinationPathFactory.init</value></property>
  </bean>

  <bean id="destinationPathFactory" class="org.opennms.netmgt.config.DestinationPathFactory" depends-on="destinationPathFactory-init" factory-method="getInstance"/>
  
<!-- not part of the standard build
  <bean id="dhcpdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.DhcpdConfigFactory.init</value></property>
  </bean>

  <bean id="dhcpdConfigFactory" class="org.opennms.netmgt.config.DhcpdConfigFactory" depends-on="dhcpdConfigFactory-init" factory-method="getInstance"/>
-->
  
  <bean id="discoveryConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.DiscoveryConfigFactory.init</value></property>
  </bean>

  <bean id="discoveryConfigFactory" class="org.opennms.netmgt.config.DiscoveryConfigFactory" depends-on="discoveryConfigFactory-init" factory-method="getInstance"/>

  <bean id="eventConfDao" class="org.opennms.netmgt.config.DefaultEventConfDao">
    <property name="configResource" value="file:${opennms.home}/etc/eventconf.xml"/>
  </bean>
  


  <bean id="eventdConfigFactory" class="org.opennms.netmgt.config.EventdConfigManager"/>
  
  <bean id="excludeUeisProperties" class="org.opennms.netmgt.config.tester.support.ExcludeUeisProperties"/>
  
  <bean id="groupFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.GroupFactory.init</value></property>
  </bean>

  <bean id="groupFactory" class="org.opennms.netmgt.config.GroupFactory" depends-on="groupFactory-init" factory-method="getInstance"/>
  
  <bean id="httpCollectionConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.HttpCollectionConfigFactory.init</value></property>
  </bean>

  <bean id="httpCollectionConfigFactory" class="org.opennms.netmgt.config.HttpCollectionConfigFactory" depends-on="httpCollectionConfigFactory-init" factory-method="getInstance"/>

  <bean id="jasperReportConfigDao" class="org.opennms.netmgt.dao.castor.DefaultJasperReportConfigDao">
    <property name="configResource" value="file:${opennms.home}/etc/jasper-reports.xml"/>
  </bean>
  
  <bean id="javaMailerConfig" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.javamail.JavaMailerConfig.getProperties</value></property>
  </bean>
    
  <bean id="javamailConfigurationDao" class="org.opennms.netmgt.dao.castor.DefaultJavamailConfigurationDao">
    <property name="configResource" value="file:${opennms.home}/etc/javamail-configuration.xml"/>
  </bean>
  
  <bean id="jdbcDataCollectionConfigDao" class="org.opennms.netmgt.dao.jaxb.JdbcDataCollectionConfigDaoJaxb">
    <property name="configResource" value="file:${opennms.home}/etc/jdbc-datacollection-config.xml"/>
  </bean>
  
  <bean id="jmxDataCollectionConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.JMXDataCollectionConfigFactory.init</value></property>
  </bean>

  <bean id="jmxDataCollectionConfigFactory" class="org.opennms.netmgt.config.JMXDataCollectionConfigFactory" depends-on="jmxDataCollectionConfigFactory-init" factory-method="getInstance"/>
    
  <bean id="kscReportFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.KSC_PerformanceReportFactory.init</value></property>
  </bean>

  <bean id="kscReportFactory" class="org.opennms.netmgt.config.KSC_PerformanceReportFactory" depends-on="kscReportFactory-init" factory-method="getInstance"/>
    
  <bean id="linkdConfigFactory" class="org.opennms.netmgt.config.LinkdConfigFactory"/>

  <bean id="groupManager-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.GroupFactory.init</value></property>
  </bean>

  <bean id="groupManager" class="org.opennms.netmgt.config.GroupFactory" depends-on="groupManager-init" factory-method="getInstance"/>

  <bean id="userManager-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.UserFactory.init</value></property>
  </bean>

  <bean id="userManager" class="org.opennms.netmgt.config.UserFactory" depends-on="userManager-init" factory-method="getInstance"/>

  <bean id="userDao" class="org.opennms.web.springframework.security.SpringSecurityUserDaoImpl">
    <property name="magicUsersConfigurationFile" value="${opennms.home}/etc/magic-users.properties" />
    <property name="usersConfigurationFile" value="${opennms.home}/etc/users.xml" />
    <property name="groupsConfigurationFile" value="${opennms.home}/etc/groups.xml" />
    <property name="useGroups" value="false" />
    <property name="userManager" ref="userManager" />
    <property name="groupManager" ref="groupManager" />
  </bean>
  
  <bean id="mapPropertiesFactory" class="org.opennms.web.map.config.MapPropertiesFactory"/>
  
  <bean id="microblogConfigurationDao" class="org.opennms.netmgt.dao.castor.DefaultMicroblogConfigurationDao">
    <property name="configResource" value="file:${opennms.home}/etc/microblog-configuration.xml"/>
  </bean>

  <bean id="mapsAdapterConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.MapsAdapterConfigFactory.init</value></property>
  </bean>

  <bean id="mapsAdapterConfigFactory" class="org.opennms.netmgt.config.MapsAdapterConfigFactory" depends-on="mapsAdapterConfigFactory-init" factory-method="getInstance"/>

  <bean id="modelImporterProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location">
      <value>file:${opennms.home}/etc/model-importer.properties</value>
    </property>
  </bean>

<!-- 
  <bean id="specFile-constructor" class="org.opennms.netmgt.importer.specification.SpecFile"/>
    
  <bean id="specFile" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	<property name="targetObject"><ref local="specFile-constructor"/></property>
    <property name="targetMethod"><value>loadResource</value></property>
    <property name="arguments">
      <list>
        <value>file:${opennms.home}/etc/model-importer.properties</value>
      </list>
    </property>
  </bean>
  -->

  <bean id="notifdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.NotifdConfigFactory.init</value></property>
  </bean>

  <bean id="notifdConfigFactory" class="org.opennms.netmgt.config.NotifdConfigFactory" depends-on="notifdConfigFactory-init" factory-method="getInstance"/>

  <bean id="notificationCommandFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.NotificationCommandFactory.init</value></property>
  </bean>

  <bean id="notificationCommandFactory" class="org.opennms.netmgt.config.NotificationCommandFactory" depends-on="notificationCommandFactory-init" factory-method="getInstance"/>

  <bean id="notificationFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.NotificationFactory.init</value></property>
  </bean>

  <bean id="notificationFactory" class="org.opennms.netmgt.config.NotificationFactory" depends-on="notificationFactory-init" factory-method="getInstance"/>
  
  <!--
  <bean id="nsClientPeerFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.protocols.nsclient.config.NSClientPeerFactory.init</value></property>
  </bean>

  <bean id="nsClientPeerFactory" class="org.opennms.netmgt.protocols.nsclient.config.NSClientPeerFactory" depends-on="nsClientPeerFactory-init" factory-method="getInstance"/>

  <bean id="nsClientDataCollectionConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.protocols.nsclient.config.NSClientDataCollectionConfigFactory.init</value></property>
  </bean>

  <bean id="nsClientDataCollectionConfigFactory" class="org.opennms.netmgt.protocols.nsclient.config.NSClientDataCollectionConfigFactory" depends-on="nsClientDataCollectionConfigFactory-init" factory-method="getInstance"/>
  -->

  <!-- This doesn't work because it pokes the database -->
  <!--
  <bean id="dataSourceFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.DataSourceFactory.init</value></property>
  </bean>

  <bean id="dataSourceFactory" class="org.opennms.netmgt.config.DataSourceFactory" depends-on="dataSourceFactory-init" factory-method="getInstance"/>
  -->
    
  <bean id="dataSourceTester" class="org.opennms.core.db.DataSourceConfigurationFactory">
    <constructor-arg value="${opennms.home}/etc/opennms-datasources.xml"/>
  </bean>

  <bean id="opennmsServerConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.OpennmsServerConfigFactory.init</value></property>
  </bean>

  <bean id="opennmsServerConfigFactory" class="org.opennms.netmgt.config.OpennmsServerConfigFactory" depends-on="opennmsServerConfigFactory-init" factory-method="getInstance"/>

  <bean id="otrsConfigDao" class="org.opennms.netmgt.ticketer.otrs.DefaultOtrsConfigDao"/>

  <bean id="otrsConfigDaoCheck" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	<property name="targetObject"><ref local="otrsConfigDao"/></property>
    <property name="targetMethod"><value>getEndpoint</value></property>
  </bean>

  <bean id="pollOutagesConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.PollOutagesConfigFactory.init</value></property>
  </bean>

  <bean id="pollOutagesConfigFactory" class="org.opennms.netmgt.config.PollOutagesConfigFactory" depends-on="pollOutagesConfigFactory-init" factory-method="getInstance"/>
    
<!-- 
  <bean id="pollerConfigFactory" class="org.opennms.netmgt.config.PollerConfigFactory">
    <constructor-arg>
      <bean class="java.io.FileInputStream">
        <constructor-arg><value>${opennms.home}/etc/poller-configuration.xml</value></constructor-arg>
      </bean>
    </constructor-arg>
    <constructor-arg><value>nms1</value></constructor-arg>
    <constructor-arg><value>false</value></constructor-arg>
  </bean>
  -->
  
  <bean id="pollerConfigProperties-constructor" class="java.util.Properties"/>
  
  <bean id="pollerConfigProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	<property name="targetObject"><ref local="pollerConfigProperties-constructor"/></property>
    <property name="targetMethod"><value>load</value></property>
    <property name="arguments">
      <list>
        <bean class="java.io.FileInputStream">
          <constructor-arg><value>${opennms.home}/etc/poller-config.properties</value></constructor-arg>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="pollerConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.PollerConfigFactory.init</value></property>
  </bean>

  <bean id="pollerConfigFactory" class="org.opennms.netmgt.config.PollerConfigFactory" depends-on="pollerConfigFactory-init" factory-method="getInstance"/>
  
  <bean id="provisiondConfigurationDao" class="org.opennms.netmgt.dao.castor.DefaultProvisiondConfigurationDao">
    <property name="configResource" value="file:${opennms.home}/etc/provisiond-configuration.xml"/>
  </bean>

  <bean id="rancidAdapterConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.RancidAdapterConfigFactory.init</value></property>
  </bean>

  <bean id="rancidAdapterConfigFactory" class="org.opennms.netmgt.config.RancidAdapterConfigFactory" depends-on="rancidAdapterConfigFactory-init" factory-method="getInstance"/>

  <bean id="reportdConfigurationDao" class="org.opennms.netmgt.dao.castor.DefaultReportdConfigurationDao">
    <property name="configResource" value="file:${opennms.home}/etc/reportd-configuration.xml"/>
  </bean>
  
  <bean id="responseAdhocGraph" class="org.opennms.netmgt.dao.support.PropertiesGraphDao">
  	<property name="prefabConfigs">
  	  <map>
  	  </map>
    </property>
  	<property name="adhocConfigs">
  	  <map>
  	    <entry key="response" value="file:${opennms.home}/etc/response-adhoc-graph.properties"/>
  	  </map>
    </property>
  </bean>

  <bean id="responsePrefabGraph" class="org.opennms.netmgt.dao.support.PropertiesGraphDao">
  	<property name="prefabConfigs">
  	  <map>
  	    <entry key="response" value="file:${opennms.home}/etc/response-graph.properties"/>
  	  </map>
    </property>
  	<property name="adhocConfigs">
  	  <map>
  	  </map>
    </property>
  </bean>

  <bean id="rrdConfigurationProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.rrd.RrdConfig.getProperties</value></property>
  </bean>

  <bean id="rtConfigDao" class="org.opennms.netmgt.rt.ReadOnlyRtConfigDao"/>

  <bean id="rtConfigDaoCheck" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	<property name="targetObject"><ref local="rtConfigDao"/></property>
    <property name="targetMethod"><value>getBaseURL</value></property>
  </bean>

  <bean id="rtcConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.RTCConfigFactory.init</value></property>
  </bean>

  <bean id="rtcConfigFactory" class="org.opennms.netmgt.config.RTCConfigFactory" depends-on="rtcConfigFactory-init" factory-method="getInstance"/>

  <bean id="rwsConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.RWSConfigFactory.init</value></property>
  </bean>

  <bean id="rwsConfigFactory" class="org.opennms.netmgt.config.RWSConfigFactory" depends-on="rwsConfigFactory-init" factory-method="getInstance"/>

  <bean id="scriptdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.ScriptdConfigFactory.init</value></property>
  </bean>

  <bean id="scriptdConfigFactory" class="org.opennms.netmgt.config.ScriptdConfigFactory" depends-on="scriptdConfigFactory-init" factory-method="getInstance"/>

  <bean id="serviceConfigFactory" class="org.opennms.netmgt.config.ServiceConfigFactory" />

  <bean id="siteStatusViewConfigDao" class="org.opennms.netmgt.dao.castor.DefaultSiteStatusViewConfigDao"/>
  
  <bean id="snmpAssetAdapterConfigFactory" class="org.opennms.netmgt.config.SnmpAssetAdapterConfigFactory"/>

  <bean id="snmpConfigDao" class="org.opennms.netmgt.dao.api.FactoryBasedSnmpConfigDao"/>
  
  <bean id="snmpAdhocGraph" class="org.opennms.netmgt.dao.support.PropertiesGraphDao">
  	<property name="prefabConfigs">
  	  <map>
  	  </map>
    </property>
  	<property name="adhocConfigs">
  	  <map>
  	    <entry key="performance" value="file:${opennms.home}/etc/snmp-adhoc-graph.properties"/>
  	  </map>
    </property>
  </bean>
  
  <bean id="snmpPrefabGraph" class="org.opennms.netmgt.dao.support.PropertiesGraphDao">
  	<property name="prefabConfigs">
  	  <map>
  	    <entry key="performance" value="file:${opennms.home}/etc/snmp-graph.properties"/>
  	  </map>
    </property>
  	<property name="adhocConfigs">
  	  <map>
  	  </map>
    </property>
  </bean>
  
  <bean id="snmpInterfacePollerConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.SnmpInterfacePollerConfigFactory.init</value></property>
  </bean>

  <bean id="snmpInterfacePollerConfigFactory" class="org.opennms.netmgt.config.SnmpInterfacePollerConfigFactory" depends-on="snmpInterfacePollerConfigFactory-init" factory-method="getInstance"/>

  <bean id="statisticsDaemonConfigDao" class="org.opennms.netmgt.dao.castor.DefaultStatisticsDaemonConfigDao">
    <property name="configResource" value="file:${opennms.home}/etc/statsd-configuration.xml"/>
  </bean>

  <bean id="surveillanceViewConfigDao" class="org.opennms.netmgt.dao.castor.DefaultSurveillanceViewConfigDao">
    <property name="configResource" value="file:${opennms.home}/etc/surveillance-views.xml"/>
  </bean>
  
  <bean id="syslogdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.SyslogdConfigFactory.init</value></property>
  </bean>

  <bean id="syslogdConfigFactory" class="org.opennms.netmgt.config.SyslogdConfigFactory" depends-on="syslogdConfigFactory-init" factory-method="getInstance"/>
  
  <bean name="syslogNorthbounderConfigDao" class="org.opennms.netmgt.alarmd.northbounder.syslog.SyslogNorthbounderConfigDao">
    <property name="configResource" value="file:${opennms.home}/etc/syslog-northbounder-configuration.xml" />
  </bean>

  <bean id="threshdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.ThreshdConfigFactory.init</value></property>
  </bean>

  <bean id="threshdConfigFactory" class="org.opennms.netmgt.config.ThreshdConfigFactory" depends-on="threshdConfigFactory-init" factory-method="getInstance"/>
  
  <bean id="thresholdingConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.ThresholdingConfigFactory.init</value></property>
  </bean>

  <bean id="thresholdingConfigFactory" class="org.opennms.netmgt.config.ThresholdingConfigFactory" depends-on="thresholdingConfigFactory-init" factory-method="getInstance"/>

  <bean id="tl1ConfigurationDao" class="org.opennms.netmgt.dao.castor.DefaultTl1ConfigurationDao">
    <property name="configResource" value="file:${opennms.home}/etc/tl1d-configuration.xml"/>
  </bean>
  
  <bean id="eventTranslatorConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.EventTranslatorConfigFactory.init</value></property>
  </bean>

  <bean id="eventTranslatorConfigFactory" class="org.opennms.netmgt.config.EventTranslatorConfigFactory" depends-on="eventTranslatorConfigFactory-init" factory-method="getInstance"/>
  
  <bean id="trapdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.TrapdConfigFactory.init</value></property>
  </bean>

  <bean id="trapdConfigFactory" class="org.opennms.netmgt.config.TrapdConfigFactory" depends-on="trapdConfigFactory-init" factory-method="getInstance"/>

  <bean id="userFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.UserFactory.init</value></property>
  </bean>

  <bean id="userFactory" class="org.opennms.netmgt.config.UserFactory" depends-on="userFactory-init" factory-method="getInstance"/>

  <bean id="vacuumdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.VacuumdConfigFactory.init</value></property>
  </bean>

  <bean id="vacuumdConfigFactory" class="org.opennms.netmgt.config.VacuumdConfigFactory" depends-on="vacuumdConfigFactory-init" factory-method="getInstance"/>

  <bean id="viewsDisplayFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.ViewsDisplayFactory.init</value></property>
  </bean>

  <bean id="viewsDisplayFactory" class="org.opennms.netmgt.config.ViewsDisplayFactory" depends-on="viewsDisplayFactory-init" factory-method="getInstance"/>

  <bean id="wmiPeerFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.WmiPeerFactory.init</value></property>
  </bean>

  <bean id="wmiPeerFactory" class="org.opennms.netmgt.config.WmiPeerFactory" depends-on="wmiPeerFactory-init" factory-method="getInstance"/>

  <bean id="wmiDataCollectionConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.WmiDataCollectionConfigFactory.init</value></property>
  </bean>

  <bean id="wmiDataCollectionConfigFactory" class="org.opennms.netmgt.config.WmiDataCollectionConfigFactory" depends-on="wmiDataCollectionConfigFactory-init" factory-method="getInstance"/>

  <!-- VMware configuration files -->
  <bean id="VmwareCimDatacollectionConfigDao" class="org.opennms.netmgt.dao.jaxb.VmwareCimDatacollectionConfigDaoJaxb">
    <property name="configResource" value="file:${opennms.home}/etc/vmware-cim-datacollection-config.xml"/>
  </bean>

  <bean id="VmwareDatacollectionConfigDao" class="org.opennms.netmgt.dao.jaxb.VmwareDatacollectionConfigDaoJaxb">
    <property name="configResource" value="file:${opennms.home}/etc/vmware-datacollection-config.xml"/>
  </bean>

  <bean id="VmwareConfigDao" class="org.opennms.netmgt.dao.jaxb.VmwareConfigDaoJaxb">
    <property name="configResource" value="file:${opennms.home}/etc/vmware-config.xml"/>
  </bean>

  <bean id="xmlrpcdConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.config.XmlrpcdConfigFactory.init</value></property>
  </bean>

  <bean id="xmlrpcdConfigFactory" class="org.opennms.netmgt.config.XmlrpcdConfigFactory" depends-on="xmlrpcdConfigFactory-init" factory-method="getInstance"/>

  <!--
  <bean id="xmpConfigFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.protocols.xmp.config.XmpConfigFactory.init</value></property>
  </bean>

  <bean id="xmpConfigFactory" class="org.opennms.netmgt.protocols.xmp.config.XmpConfigFactory" depends-on="xmpConfigFactory-init" factory-method="getInstance"/>
 
  <bean id="xmpCollectionFactory-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.protocols.xmp.collector.XmpCollectionFactory.init</value></property>
  </bean>

  <bean id="xmpCollectionFactory" class="org.opennms.netmgt.protocols.xmp.collector.XmpCollectionFactory" depends-on="xmpCollectionFactory-init" factory-method="getInstance"/>
  -->
 
</beans>

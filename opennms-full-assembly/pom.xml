<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.opennms</groupId>
    <artifactId>opennms</artifactId>
    <version>19.0.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>opennms-full-assembly</artifactId>
  <packaging>pom</packaging>
  <name>OpenNMS Full Assembly</name>
  <properties>
    <build.profile>default</build.profile>
    <maven.metadata.legacy>true</maven.metadata.legacy>
    <skipITs>true</skipITs>
  </properties>
  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <property>
          <name>build.profile</name>
          <value>default</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <inherited>false</inherited>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/default.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <tarLongFileMode>posix</tarLongFileMode>
              <outputDirectory>${dist.dir}</outputDirectory>
              <finalName>${dist.name}</finalName>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>full</id>
      <activation>
        <property>
          <name>build.profile</name>
          <value>full</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <inherited>false</inherited>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/full.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <tarLongFileMode>posix</tarLongFileMode>
              <outputDirectory>${dist.dir}</outputDirectory>
              <finalName>${dist.name}</finalName>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dir</id>
      <activation>
        <property>
          <name>build.profile</name>
          <value>dir</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <inherited>false</inherited>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/dir.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <tarLongFileMode>posix</tarLongFileMode>
              <outputDirectory>${dist.dir}</outputDirectory>
              <finalName>${dist.name}</finalName>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>fulldir</id>
      <activation>
        <property>
          <name>build.profile</name>
          <value>fulldir</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <inherited>false</inherited>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/fulldir.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <tarLongFileMode>posix</tarLongFileMode>
              <outputDirectory>${dist.dir}</outputDirectory>
              <finalName>${dist.name}</finalName>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <plugins>
      <!-- Because this is a POM project, we need to explicitly enable test compilation and execution -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
              <encoding>UTF-8</encoding>
              <optimize>true</optimize>
            </configuration>
          </execution>
        </executions>
      </plugin> 
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <skipITs>${skipITs}</skipITs>
        </configuration>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>copy-filtered-resources</id>
            <phase>process-resources</phase>
            <goals><goal>copy-resources</goal></goals>
            <configuration>
               <encoding>UTF-8</encoding>
               <escapeString>\</escapeString>
               <outputDirectory>target/resources</outputDirectory>
               <resources>
                 <resource>
                   <directory>src/main/filtered-resources</directory>
                   <filtering>true</filtering>
                 </resource>
               </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>features-maven-plugin</artifactId>
        <version>${karafVersion}</version>

        <executions>
          <execution>
            <id>add-features-to-repo</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-features-to-repo</goal>
            </goals>
            <configuration>
              <karafVersion>DONT_USE_STANDARD_FEATURES</karafVersion>
              <descriptors>
                <!-- 
                  All of these feature files need to be added to the featuresRepositories parameter in the
                  org.apache.karaf.features.cfg file so that the features are available to the container.
                -->

                <!-- Karaf standard features -->
                <descriptor>mvn:org.apache.karaf.assemblies.features/standard/${karafVersion}/xml/features</descriptor>
                <!-- Karaf Spring features -->
                <descriptor>mvn:org.apache.karaf.assemblies.features/spring/${karafVersion}/xml/features</descriptor>
                <!-- Pax Exam features -->
                <descriptor>mvn:org.ops4j.pax.exam/pax-exam-features/${paxExamVersion}/xml</descriptor>
                <!-- Pax Web features -->
                <descriptor>mvn:org.ops4j.pax.web/pax-web-features/3.2.4/xml/features</descriptor>

                <!-- Features for the OpenNMS-modified Karaf container -->
                <descriptor>mvn:org.opennms.container/karaf/${project.version}/xml/features</descriptor>
                <!-- OpenNMS product features generated by container/features/pom.xml -->
                <descriptor>mvn:org.opennms.karaf/opennms/${project.version}/xml/features</descriptor>
                <!-- OpenNMS Minion features generated by container/features/pom.xml -->
                <descriptor>mvn:org.opennms.karaf/opennms/${project.version}/xml/minion</descriptor>
              </descriptors>
              <features>
                <!-- Pax Exam feature that is necessary to run the tests -->
                <feature>exam</feature>

                <!-- Standard Karaf features -->
                <feature>admin</feature>
                <feature>aries-blueprint</feature>
                <feature>aries-proxy</feature>
                <feature>blueprint-web</feature>
                <feature>config</feature>
                <feature>deployer</feature>
                <feature>diagnostic</feature>
                <feature>eventadmin</feature>
                <feature>features</feature>
                <feature>http</feature>
                <feature>http-whiteboard</feature>
                <feature>jaas</feature>
                <feature>jasypt-encryption</feature>
                <feature>jetty</feature>
                <feature>karaf-framework</feature>
                <feature>kar</feature>
                <feature>management</feature>
                <feature>obr</feature>
                <feature>scr</feature>
                <feature>service-security</feature>
                <feature>service-wrapper</feature>
                <feature>shell</feature>
                <feature>ssh</feature>
                <feature>war</feature>
                <feature>webconsole</feature>
                <feature>wrap</feature>
                <feature>wrapper</feature>

                <!-- Spring features -->
                <feature>spring</feature>
                <feature>spring-aspects</feature>
                <feature>spring-instrument</feature>
                <feature>spring-jdbc</feature>
                <feature>spring-jms</feature>
                <feature>spring-test</feature>
                <feature>spring-orm</feature>
                <feature>spring-oxm</feature>
                <feature>spring-tx</feature>
                <feature>spring-web</feature>

                <!-- Include everything in the opennms-${project.version} feature produced by container/features/pom.xml -->
                <feature>opennms-${project.version}</feature>

                <!-- Include the OpenNMS Minion features produced by container/features/pom.xml -->
                <feature>minion-core-api</feature>
                <feature>opennms-discoverer</feature>
                <feature>opennms-discovery-distPollerDaoMinion</feature>
                <feature>opennms-trapd-handler-minion</feature>

              </features>
              <repository>${project.build.directory}/features-repo</repository>
            </configuration>
          </execution>
        </executions>
        <!-- https://issues.apache.org/jira/browse/SM-2416 -->
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-http-lightweight</artifactId>
            <version>2.6</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin> 
        <artifactId>maven-clean-plugin</artifactId> 
        <executions> 
          <execution> 
            <id>cleanup-integration-tests</id> 
            <phase>post-integration-test</phase> 
            <goals> 
              <goal>clean</goal> 
            </goals> 
            <configuration> 
              <excludeDefaultDirectories>true</excludeDefaultDirectories> 
              <filesets> 
                <fileset> 
                  <directory>${project.build.directory}/features-repo</directory> 
                </fileset> 
              </filesets> 
            </configuration> 
          </execution> 
        </executions> 
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <echo>Build Profile is '${build.profile}'.</echo>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <modules>
    <module>../opennms-install</module>
    <module>../opennms-assemblies</module>
    <module>../opennms-doc</module>
    <module>../opennms-base-assembly</module>
  </modules>

  <dependencies>
    <dependency>
      <groupId>org.opennms.container</groupId>
      <artifactId>karaf</artifactId>
      <type>tar.gz</type>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.dependencies</groupId>
      <artifactId>jaxb-dependencies</artifactId>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>root-webapp</artifactId>
      <type>war</type>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.assemblies</groupId>
      <artifactId>org.opennms.assemblies.webapp-full</artifactId>
      <type>war</type>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-webapp</artifactId>
      <type>tar.gz</type>
      <classifier>meta-inf</classifier>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.assemblies</groupId>
      <artifactId>org.opennms.assemblies.http-remoting</artifactId>
      <type>war</type>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-base-assembly</artifactId>
      <type>tar.gz</type>
      <version>${project.version}</version>
      <classifier>daemon</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-base-assembly</artifactId>
      <type>tar.gz</type>
      <version>${project.version}</version>
      <classifier>log4j2</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.doc</groupId>
      <artifactId>guide-all</artifactId>
      <type>tar.gz</type>
      <version>${project.version}</version>
      <classifier>docs</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.assemblies</groupId>
      <artifactId>org.opennms.assemblies.xsds</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>xsds</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-dns-provisioning-adapter</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-jetty</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-snmp-asset-provisioning-adapter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-snmp-hardware-inventory-provisioning-adapter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-rancid-provisioning-adapter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.cifs</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.dhcp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.dhcp</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.dhcp</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>lib</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.nsclient</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.nsclient</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.radius</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.xml</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.xml</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.xml</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>contrib</classifier>
    </dependency>
    <dependency>
      <groupId>com.ximpleware</groupId>
      <artifactId>vtd-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-vtdxml-collector-handler</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.xmp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.xmp</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>org.opennms.protocols.xmp</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>lib</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>selenium-monitor</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>selenium-monitor</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.protocols</groupId>
      <artifactId>selenium-monitor</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>lib</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.ncs</groupId>
      <artifactId>ncs-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.ncs</groupId>
      <artifactId>ncs-persistence</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.ncs</groupId>
      <artifactId>ncs-drools</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.ncs</groupId>
      <artifactId>ncs-drools</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.ncs</groupId>
      <artifactId>ncs-northbounder</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.ncs</groupId>
      <artifactId>ncs-northbounder</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.juniper-tca-collector</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features</groupId>
      <artifactId>org.opennms.features.juniper-tca-collector</artifactId>
      <version>${project.version}</version>
      <type>tar.gz</type>
      <classifier>etc</classifier>
    </dependency>

    <!-- Apache Karaf features.xml artifacts -->
    <dependency>
      <groupId>org.apache.karaf.assemblies.features</groupId>
      <artifactId>standard</artifactId>
      <version>${karafVersion}</version>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.assemblies.features</groupId>
      <artifactId>spring</artifactId>
      <version>${karafVersion}</version>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-features</artifactId>
      <version>${paxExamVersion}</version>
      <type>xml</type>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.web</groupId>
      <artifactId>pax-web-features</artifactId>
      <version>3.2.4</version>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>
    <dependency>
      <groupId>org.opennms.karaf</groupId>
      <artifactId>opennms</artifactId>
      <version>${project.version}</version>
      <type>xml</type>
      <classifier>features</classifier>
    </dependency>
    <dependency>
      <groupId>org.opennms.karaf</groupId>
      <artifactId>opennms</artifactId>
      <version>${project.version}</version>
      <type>xml</type>
      <classifier>minion</classifier>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.opennms.core.test-api</groupId>
      <artifactId>org.opennms.core.test-api.karaf</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- 
    You need to have all Maven repos here that contain artifacts that you need installed
    into the Karaf system folder.
  -->
  <pluginRepositories>
    <pluginRepository>
      <id>opennms-repo</id>
      <name>OpenNMS Repository</name>
      <url>http://maven.opennms.org/content/groups/opennms.org-release/</url>
    </pluginRepository>
  </pluginRepositories>
  <repositories>
    <repository>
      <id>opennms-repo</id>
      <name>OpenNMS Repository</name>
      <url>http://maven.opennms.org/content/groups/opennms.org-release/</url>
    </repository>
    <repository>
      <snapshots><enabled>true</enabled></snapshots>
      <releases><enabled>false</enabled></releases>
      <id>opennms-snapshots</id>
      <name>OpenNMS Snapshot Maven Repository</name>
      <url>http://maven.opennms.org/content/groups/opennms.org-snapshot/</url>
    </repository>
    <repository>
      <id>oosnmp-repo</id>
      <name>OOSNMP Repository</name>
      <url>http://maven.opennms.org/content/repositories/oosnmp-repo/</url>
    </repository>
    <repository>
      <id>com.springsource.repository.bundles.release</id>
      <name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
      <url>http://maven.opennms.org/content/repositories/com.springsource.repository.bundles.release/</url>
    </repository>
    <repository>
      <id>com.springsource.repository.bundles.external</id>
      <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
      <url>http://maven.opennms.org/content/repositories/com.springsource.repository.bundles.external/</url>
    </repository>
    <repository>
       <id>vaadin-addons</id>
       <url>http://maven.opennms.org/content/repositories/vaadin-addons/</url>
    </repository>
    <repository>
      <id>sonatype-public-repo</id>
      <name>Sonatype Public Maven Repository</name>
      <url>http://maven.opennms.org/content/repositories/sonatype-public-repo/</url>
    </repository>
  </repositories>
</project>

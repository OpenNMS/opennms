<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
           xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0
		http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
">

    <!-- Configuration properties -->
    <cm:property-placeholder id="alarmHistoryElastic" persistent-id="org.opennms.features.alarms.history.elastic" update-strategy="reload">
        <cm:default-properties>
            <!-- Elastic Connection Settings -->
            <cm:property name="elasticUrl" value="http://localhost:9200" />
            <cm:property name="globalElasticUser" value="" />
            <cm:property name="globalElasticPassword" value="" />
            <cm:property name="elasticIndexStrategy" value="monthly" />
            <cm:property name="defaultMaxTotalConnectionPerRoute" value="-1" />
            <cm:property name="maxTotalConnection" value="-1" />
            <cm:property name="nodeDiscovery" value="false" />
            <cm:property name="nodeDiscoveryFrequency" value="0" />
            <cm:property name="proxy" value=""/>
            <cm:property name="retryCooldown" value="500" />
            <cm:property name="connTimeout" value="5000" /> <!-- 5 second timeout for Elasticsearch operations -->
            <cm:property name="readTimeout" value="30000" /> <!-- 30 second timeout for Elasticsearch socket reads -->
            <cm:property name="retries" value="0" /> <!-- Disable retries by default -->
            <cm:property name="nodeCache.enabled" value="true" /> <!-- Set to false to disable caching -->
            <cm:property name="nodeCache.maximumSize" value="1000"/> <!-- Set value for unlimited size -->
            <cm:property name="nodeCache.expireAfterWrite" value="300"/> <!-- in seconds. Set to 0 to never evict elements -->
            <cm:property name="nodeCache.recordStats" value="true"/> <!-- Set to false to not expose cache statistics via jmx -->

            <!-- Index settings -->
            <!-- https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings -->
            <cm:property name="settings.index.number_of_shards" value="" />
            <cm:property name="settings.index.number_of_replicas" value="" />
            <cm:property name="settings.index.refresh_interval" value="" />
            <cm:property name="settings.index.routing_partition_size" value="" />

            <!-- Alarm History settings -->
            <cm:property name="indexAllUpdates" value="false" />
            <cm:property name="batchIndexSize" value="200" /> <!-- Maximum number of records inserted in a single batch insert -->
            <cm:property name="bulkRetryCount" value="3" /> <!-- Number of retries until a bulk operation is considered failed -->
            <cm:property name="alarmReindexDurationMs" value="3600000" /> <!-- Number of milliseconds to wait before re-indexing an alarm if nothing "interesting" has changed -->
            <cm:property name="taskQueueCapacity" value="5000" />
            <cm:property name="lookbackPeriodMs" value="604800000" /> <!-- Number of milliseconds to go back when searching for alarms -->
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Used to define credentials in a properties file and enforcing the bundle to reload when credentials change -->
    <bean id="credentialsProvider" class="org.opennms.plugins.elasticsearch.rest.credentials.DefaultCredentialsProvider">
        <argument value="elastic-credentials.xml" />
    </bean>

    <!-- Metrics -->
    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry"/>
    <bean id="metricRegistryJmxReporterBuilder" class="com.codahale.metrics.JmxReporter" factory-method="forRegistry">
        <argument ref="metricRegistry"/>
    </bean>
    <bean id="metricRegistryDomainedJmxReporterBuilder" factory-ref="metricRegistryJmxReporterBuilder" factory-method="inDomain">
        <argument value="org.opennms.features.es.alarms"/>
    </bean>
    <bean id="metricRegistryJmxReporter"
          factory-ref="metricRegistryDomainedJmxReporterBuilder"
          factory-method="build"
          init-method="start"
          destroy-method="stop" />
    <service interface="com.codahale.metrics.MetricSet" ref="metricRegistry" >
        <service-properties>
            <entry key="name" value="org.opennms.features.alarms.history.elastic"/>
            <entry key="description" value="Alarm history in Elasticsearch"/>
        </service-properties>
    </service>

    <!-- Configure node cache -->
    <bean id="nodeCacheConfig" class="org.opennms.core.cache.CacheConfig">
        <argument value="nodes-for-alarm-history-in-es"/>
        <property name="metricRegistry" ref="metricRegistry" />
        <property name="enabled" value="${nodeCache.enabled}" />
        <property name="maximumSize" value="${nodeCache.maximumSize}" />
        <property name="expireAfterWrite" value="${nodeCache.expireAfterWrite}" />
        <property name="recordStats" value="${nodeCache.recordStats}" />
    </bean>

    <!-- Proxy for the JestClientFactory -->
    <bean id="requestExecutorFactory" class="org.opennms.plugins.elasticsearch.rest.executors.DefaultRequestExecutor">
        <argument value="${retryCooldown}"/>
    </bean>
    <bean id="clientFactory" class="org.opennms.plugins.elasticsearch.rest.RestClientFactory">
        <argument value="${elasticUrl}"/>
        <argument value="${globalElasticUser}"/>
        <argument value="${globalElasticPassword}"/>
        <property name="defaultMaxTotalConnectionPerRoute" value="${defaultMaxTotalConnectionPerRoute}"/>
        <property name="maxTotalConnection" value="${maxTotalConnection}"/>
        <property name="discovery" value="${nodeDiscovery}" />
        <property name="discoveryFrequency" value="${nodeDiscoveryFrequency}" />
        <property name="proxy" value="${proxy}" />
        <property name="credentials" ref="credentialsProvider" />
        <property name="requestExecutorFactory" ref="requestExecutorFactory" />
        <property name="connTimeout" value="${connTimeout}" />
        <property name="readTimeout" value="${readTimeout}" />
        <property name="retries" value="${retries}" />
    </bean>

    <!-- Actually creates the client, but only once -->
    <bean id="jestClient" factory-ref="clientFactory" factory-method="createClient" destroy-method="shutdownClient"/>

    <bean id="indexStrategy" class="org.opennms.plugins.elasticsearch.rest.index.IndexStrategyFactory" factory-method="createIndexStrategy">
        <argument value="${elasticIndexStrategy}"/>
    </bean>

    <bean id="indexSettings" class="org.opennms.plugins.elasticsearch.rest.template.IndexSettings">
        <property name="numberOfShards" value="${settings.index.number_of_shards}"/>
        <property name="numberOfReplicas" value="${settings.index.number_of_replicas}"/>
        <property name="refreshInterval" value="${settings.index.refresh_interval}"/>
        <property name="routingPartitionSize" value="${settings.index.routing_partition_size}"/>
    </bean>

    <!-- Template initializer -->
    <bean id="templateInitializer" class="org.opennms.features.alarms.history.elastic.TemplateInitializerForAlarms">
        <argument ref="blueprintBundleContext"/>
        <argument ref="jestClient"/>
        <argument ref="indexSettings"/>
    </bean>

    <!-- The indexer -->
    <bean id="elasticAlarmIndexer" class="org.opennms.features.alarms.history.elastic.ElasticAlarmIndexer" init-method="init" destroy-method="destroy">
        <argument ref="metricRegistry"/>
        <argument ref="jestClient"/>
        <argument ref="templateInitializer" />
        <argument ref="nodeCacheConfig" />
        <argument value="${taskQueueCapacity}"/>
        <argument ref="indexStrategy"/>
        <property name="bulkRetryCount" value="${bulkRetryCount}" />
        <property name="batchSize" value="${batchIndexSize}" />
        <property name="alarmReindexDurationMs" value="${alarmReindexDurationMs}"/>
        <property name="lookbackPeriodMs" value="${lookbackPeriodMs}"/>
        <property name="indexAllUpdates" value="${indexAllUpdates}"/>
    </bean>
    <!-- Register for alarm callbacks -->
    <service ref="elasticAlarmIndexer" interface="org.opennms.netmgt.alarmd.api.AlarmLifecycleListener">
        <service-properties>
            <entry key="registration.export" value="true"/>
        </service-properties>
    </service>

    <!-- The repository -->
    <bean id="elasticAlarmHistoryRepository" class="org.opennms.features.alarms.history.elastic.ElasticAlarmHistoryRepository">
        <argument ref="jestClient"/>
        <argument ref="indexStrategy"/>
        <property name="lookbackPeriodMs" value="${lookbackPeriodMs}"/>
    </bean>
    <service ref="elasticAlarmHistoryRepository" interface="org.opennms.features.alarms.history.api.AlarmHistoryRepository"/>

    <!-- Our health Check -->
    <service interface="org.opennms.core.health.api.HealthCheck">
        <bean class="org.opennms.features.alarms.history.elastic.ElasticHealthCheck" >
            <argument ref="elasticAlarmHistoryRepository"/>
        </bean>
    </service>

</blueprint>

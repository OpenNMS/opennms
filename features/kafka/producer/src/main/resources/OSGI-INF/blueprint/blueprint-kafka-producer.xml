<blueprint
	xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		
		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
">

  <!-- Configuration properties -->
  <cm:property-placeholder id="kafkaProducerProperties" persistent-id="org.opennms.features.kafka.producer" update-strategy="reload">
    <cm:default-properties>
      <cm:property name="eventTopic" value="events"/>
      <cm:property name="alarmTopic" value="alarms"/>
      <cm:property name="nodeTopic" value="nodes"/>
      <cm:property name="nodeRefreshTimeoutMs" value="300000"/> <!-- 5 minutes -->
      <cm:property name="alarmSyncIntervalMs" value="300000"/> <!-- 5 minutes -->
      <cm:property name="eventFilter" value=""/>
      <cm:property name="alarmFilter" value=""/>
    </cm:default-properties>
  </cm:property-placeholder>

  <reference id="configAdmin" interface="org.osgi.service.cm.ConfigurationAdmin" />
  <reference id="eventConfDao" interface="org.opennms.netmgt.config.api.EventConfDao" />
  <reference id="eventSubscriptionService" interface="org.opennms.netmgt.events.api.EventSubscriptionService" />
  <reference id="alarmLifecycleSubscriptionService" interface="org.opennms.netmgt.alarmd.api.AlarmLifecycleSubscriptionService" />
  <reference id="nodeDao" interface="org.opennms.netmgt.dao.api.NodeDao" />
  <reference id="transactionOperations" interface="org.springframework.transaction.support.TransactionOperations" />
  <reference id="alarmDao" interface="org.opennms.netmgt.dao.api.AlarmDao" />

  <bean id="protobufMapper" class="org.opennms.features.kafka.producer.ProtobufMapper">
    <argument ref="eventConfDao"/>
  </bean>

  <bean id="nodeCache" class="org.opennms.features.kafka.producer.NodeCache">
    <argument ref="nodeDao"/>
    <argument ref="transactionOperations"/>
    <property name="timeoutInMs" value="${nodeRefreshTimeoutMs}"/>
  </bean>

  <bean id="kafkaProducer" class="org.opennms.features.kafka.producer.OpennmsKafkaProducer"
          init-method="init" destroy-method="destroy">
    <argument ref="protobufMapper"/>
    <argument ref="nodeCache"/>
    <argument ref="configAdmin"/>
    <argument ref="eventSubscriptionService"/>
    <argument ref="alarmLifecycleSubscriptionService"/>

    <property name="eventTopic" value="${eventTopic}"/>
    <property name="alarmTopic" value="${alarmTopic}"/>
    <property name="nodeTopic" value="${nodeTopic}"/>
    <property name="eventFilter" value="${eventFilter}"/>
    <property name="alarmFilter" value="${alarmFilter}"/>
  </bean>

  <service ref="alarmDataSync" interface="org.opennms.features.kafka.producer.datasync.AlarmDataStore" />

  <bean id="alarmDataSync" class="org.opennms.features.kafka.producer.datasync.KafkaAlarmDataSync"
		init-method="init" destroy-method="destroy">
    <argument ref="configAdmin"/>
    <argument ref="kafkaProducer"/>
    <argument ref="alarmDao" />
    <argument ref="protobufMapper" />
    <argument ref="transactionOperations"/>
    <property name="alarmTopic" value="${alarmTopic}"/>
    <property name="alarmSyncIntervalMs" value="${alarmSyncIntervalMs}"/>
  </bean>

</blueprint>

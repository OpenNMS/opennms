<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0 
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0
		http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
">

	<cm:property-placeholder id="trapHandlerDefaultProperties" persistent-id="org.opennms.netmgt.trapd.handler.kafka.default" update-strategy="reload">
		<cm:default-properties>
			<cm:property name="kafkaAddress" value="127.0.0.1:9092" />
			<!-- TODO: Use JmsQueueNameFactory to generate this name? -->
			<cm:property name="kafkatopic" value="trapd" />
			<cm:property name="zookeeperhost" value="127.0.0.1"/>
			<cm:property name="zookeeperport" value="2181"/>
			<cm:property name="groupId" value="trapdconsumer"/>
			<cm:property name="consumerstreams" value="1"/>	
		</cm:default-properties>
	</cm:property-placeholder>

	<!-- Get a reference to the org.opennms.netmgt.dao.api.InterfaceToNodeCache -->
	<reference id="interfaceToNodeCache" interface="org.opennms.netmgt.dao.api.InterfaceToNodeCache" availability="mandatory"/>

	<!-- Get a reference to the org.opennms.netmgt.events.api.EventForwarder -->
	<reference id="eventForwarder" interface="org.opennms.netmgt.events.api.EventForwarder" availability="mandatory"/>

	<!-- Get a reference to the org.opennms.netmgt.config.api.EventConfDao -->
	<reference id="eventConfDao" interface="org.opennms.netmgt.config.api.EventConfDao" availability="mandatory"/>

	<!-- Get a reference to the org.opennms.netmgt.config.TrapdConfig -->
	<reference id="trapdConfig" interface="org.opennms.netmgt.config.TrapdConfig" availability="mandatory"/>

	<bean id="newSuspectOnTrap" factory-ref="trapdConfig" factory-method="getNewSuspectOnTrap"/>

	<bean id="processorFactory" class="org.opennms.netmgt.trapd.TrapQueueProcessorFactory">
		<property name="eventConfDao" ref="eventConfDao"/>
		<property name="eventForwarder" ref="eventForwarder"/>
		<property name="newSuspect" ref="newSuspectOnTrap"/>
	</bean>

	<bean id="trapNotificationHandlerDefault" class="org.opennms.netmgt.trapd.TrapNotificationHandlerDefaultImpl">
		<property name="interfaceToNodeCache" ref="interfaceToNodeCache"/>
		<property name="processorFactory" ref="processorFactory"/>
	</bean>

	<bean id="unmarshaller" class="org.opennms.core.camel.JaxbUtilsUnmarshalProcessor">
		<argument value="org.opennms.netmgt.snmp.TrapNotification" />
	</bean>

	<!-- @see http://www.davsclaus.com/2012/06/locking-down-jmx-naming-now-easier-with.html -->
	<camelContext id="trapdHandlerKafkaDefaultContext" managementNamePattern="#name#" xmlns="http://camel.apache.org/schema/blueprint">
		<propertyPlaceholder id="properties" location="blueprint:trapHandlerDefaultProperties" />

		<route id="receiveTrapConnectionViaKafka">
			<from uri="kafka:{{kafkaAddress}}?topic={{kafkatopic}}&amp;zookeeperHost={{zookeeperhost}}&amp;zookeeperPort={{zookeeperport}}&amp;groupId={{groupId}}&amp;consumerStreams={{consumerstreams}}"/>

			<!-- TODO: Implement this unmarshaller -->
			<!-- <bean ref="kafkaDecoder" method="fromBytes"/> -->

			<!-- <convertBodyTo type="org.opennms.netmgt.snmp.TrapNotification"/> -->
			<to uri="seda:trapHandler"/>
		</route>

		<route id="trapHandler">
			<from uri="seda:trapHandler" />
			<!--
				Pass the message to the default handler which will convert it into 
				an event and broadcast the event.
			-->
			<bean ref="trapNotificationHandlerDefault"/>
		</route>
	</camelContext>

</blueprint>

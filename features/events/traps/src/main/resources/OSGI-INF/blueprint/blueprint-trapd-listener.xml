<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		   xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
		   xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
		   xsi:schemaLocation="
        http://www.osgi.org/xmlns/blueprint/v1.0.0
        http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
        http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
        http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0
        http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
">

	<cm:property-placeholder id="trapHandlerDefaultProperties" persistent-id="org.opennms.netmgt.trapd" update-strategy="reload">
		<cm:default-properties>
			<cm:property name="trapd.listen.interface" value="127.0.0.1" /> <!-- the interface the TrapListener listens for traps -->
			<cm:property name="trapd.listen.port" value="1162" /> <!-- the port the TrapListener listens for traps -->
			<cm:property name="trapd.threads" value="0"/> <!-- the number of threads for the producer -->
			<cm:property name="trapd.includeRawMessage" value="false" />
			<cm:property name="trapd.queue.size" value="10000" />
			<cm:property name="trapd.batch.size" value="1000" />
			<cm:property name="trapd.batch.interval" value="500" />
		</cm:default-properties>
	</cm:property-placeholder>

	<reference id="messageDispatcherFactory" interface="org.opennms.core.ipc.sink.api.MessageDispatcherFactory"/>
	<reference id="distPollerDao" interface="org.opennms.netmgt.dao.api.DistPollerDao"/>
	<reference id="restClient" interface="org.opennms.minion.core.api.RestClient"/>

	<!-- Camel Event for unmarshalling processor -->
	<bean id="unmarshaller" class="org.opennms.core.camel.JaxbUtilsUnmarshalProcessor">
		<argument value="org.opennms.netmgt.config.trapd.TrapdConfiguration" />
	</bean>

	<!-- Reduces the graceful shutdown time from 300 to 15 seconds. -->
	<bean id="shutdownStrategy" class="org.apache.camel.impl.DefaultShutdownStrategy">
		<property name="timeout" value="15"/>
	</bean>

	<!-- Config Bean -->
	<bean id="trapdConfig" class="org.opennms.netmgt.trapd.TrapdConfigBean">
		<property name="snmpTrapPort" value="${trapd.listen.port}"/>
		<property name="snmpTrapAddress" value="${trapd.listen.interface}"/>
		<property name="numThreads" value="${trapd.threads}" />
		<property name="queueSize" value="${trapd.queue.size}" />
		<property name="batchSize" value="${trapd.batch.size}" />
		<property name="batchIntervalMs" value="${trapd.batch.interval}" />
		<property name="includeRawMessage" value="${trapd.includeRawMessage}"/>
	</bean>
	<service ref="trapdConfig" interface="org.opennms.netmgt.config.TrapdConfig" />

	<!-- The TrapdConfiguration is retreived via the OpenNMS ReST API every n ms and merged with the trapdConfiguration by invoking "trapdConfig.onUpdate"-->
	<!-- @see http://www.davsclaus.com/2012/06/locking-down-jmx-naming-now-easier-with.html -->
	<camelContext id="trapdListenerContext" managementNamePattern="#name#" xmlns="http://camel.apache.org/schema/blueprint">
		<propertyPlaceholder id="minionproperties" location="blueprint:minionProperties" />
		<route id="restClientToTrapdConfig">
			<from uri="timer://restTrapConfigurationTimer?fixedRate=true&amp;period=60000"/>
			<bean ref="restClient" method="getSnmpV3Users"/>
			<bean ref="unmarshaller" />
			<bean ref="trapListener" method="setSnmpV3Users" />
		</route>
	</camelContext>

	<!--
		The TrapListener handles received traps (the ones we were listening for) and forwards
	 	them via the MessageProducer (obtained by the MessageProducerFactory)
	-->
	<bean id="trapListener" class="org.opennms.netmgt.trapd.TrapListener" init-method="start" destroy-method="stop">
		<argument ref="trapdConfig"/>
		<property name="messageDispatcherFactory" ref="messageDispatcherFactory"/>
		<property name="distPollerDao" ref="distPollerDao"/>
	</bean>
</blueprint>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
    xsi:schemaLocation="
        http://www.osgi.org/xmlns/blueprint/v1.0.0 
        http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
        http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
        http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0
        http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
">

    <cm:property-placeholder id="trapHandlerDefaultProperties" persistent-id="org.opennms.netmgt.trapd" update-strategy="none">
        <cm:default-properties>
            <cm:property name="trapd.listen.interface" value="127.0.0.1" />
            <cm:property name="trapd.listen.port" value="162" />
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Camel Event for unmarshalling processor -->
    <bean id="unmarshaller" class="org.opennms.core.camel.JaxbUtilsUnmarshalProcessor">
        <argument value="org.opennms.netmgt.config.trapd.TrapdConfiguration" />
    </bean>
    
    
 <bean id="jceksSecureCredentialsVault" class="org.opennms.features.scv.jceks.JCEKSSecureCredentialsVault">
        <argument value="$[karaf.etc]$[file.separator]scv.jce"/>
        <argument value="[[key]]"/>
    </bean>

    <service ref="jceksSecureCredentialsVault" interface="org.opennms.features.scv.api.SecureCredentialsVault">
        <service-properties>
            <entry key="type" value="jceks"/>
        </service-properties>
    </service>


    <camelContext id="trapConnectionHandlerDefaultContext" xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="minionproperties" location="blueprint:minionProperties" />
        <route id="restClientToTrapdConfig">
            <from uri="timer://restTrapConfigurationTimer?fixedRate=true&amp;period=60000"/>
             <bean ref="restClient" method="getSnmpV3Users"/>
            <bean ref="unmarshaller" />
            <to uri="bean:trapdConfig?method=onUpdate" />
            <bean ref="trapReceiver" method="setTrapdConfig" />
        </route>
    </camelContext>

    <cm:property-placeholder id="minionProperties" persistent-id="org.opennms.minion.controller" placeholder-prefix="[[" placeholder-suffix="]]" update-strategy="none">
        <cm:default-properties>
            <cm:property name="location" value="MINION"/>
            <cm:property name="id" value="00000000-0000-0000-0000-000000ddba11"/>
            <cm:property name="http-url" value="http://cerniossfabric111.cernerasp.com:8980/opennms"/>
            <cm:property name="username" value="admin"/>
            <cm:property name="password" value="admin"/>
        </cm:default-properties>
    </cm:property-placeholder>
    
  

    <!-- A canonical source for this Minion's identity -->
    <bean id="minionIdentity" class="org.opennms.minion.core.impl.MinionIdentityImpl">
       <argument value="[[location]]"/>
       <argument value="[[id]]"/>
    </bean>
    <service ref="minionIdentity" interface="org.opennms.minion.core.api.MinionIdentity"/>

    <!-- REST Client used to communicate with the OpenNMS controller -->
    <bean id="restClient" class="org.opennms.minion.core.impl.ScvEnabledRestClientImpl">
        <argument value="[[http-url]]"/>
        <argument ref="jceksSecureCredentialsVault"/>
        <argument value="opennms.http"/>
    </bean>
    <service ref="restClient" interface="org.opennms.minion.core.api.RestClient"/>

    <bean id="trapdConfig" class="org.opennms.netmgt.trapd.TrapdConfigBean">
        <property name="snmpTrapPort" value="${trapd.listen.port}"/>
        <property name="snmpTrapAddress" value="${trapd.listen.interface}"/>
    </bean>

    <reference id="trapNotificationHandlers" interface="org.opennms.netmgt.trapd.TrapNotificationHandler"/>

    <bean id="trapReceiver" class="org.opennms.netmgt.trapd.TrapReceiverImpl" init-method="start" destroy-method="stop">
        <argument ref="trapdConfig"/>
        <property name="trapNotificationHandlers" ref="trapNotificationHandlers"/>
    </bean>

</blueprint>

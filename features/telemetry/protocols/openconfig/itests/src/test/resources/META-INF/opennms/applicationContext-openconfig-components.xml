<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:onmsgi="http://xmlns.opennms.org/xsd/spring/onms-osgi"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
       http://xmlns.opennms.org/xsd/spring/onms-osgi http://xmlns.opennms.org/xsd/spring/onms-osgi.xsd
       ">

  <context:annotation-config />

  <bean id="openConfigAdapterFactory" class="org.opennms.netmgt.telemetry.protocols.openconfig.adapter.OpenConfigAdapterFactory" />
  <onmsgi:service interface="org.opennms.netmgt.telemetry.api.adapter.AdapterFactory" ref="openConfigAdapterFactory" />


  <bean id="openConfigClientFactory" class="org.opennms.features.openconfig.telemetry.OpenConfigClientFactoryImpl" />
  <onmsgi:service interface="org.opennms.features.openconfig.api.OpenConfigClientFactory" ref="openConfigClientFactory"/>

  <bean id="connectorFactory" class="org.opennms.netmgt.telemetry.protocols.openconfig.connector.OpenConfigConnectorFactory" >
    <constructor-arg ref="telemetryRegistry" />
    <constructor-arg ref="openConfigClientFactory"/>
  </bean>

  <onmsgi:service interface="org.opennms.netmgt.telemetry.api.receiver.ConnectorFactory" ref="connectorFactory" />

    <bean id="locationPublisherManager"
          class="org.opennms.netmgt.telemetry.daemon.LocationPublisherManager"/>


    <bean id="openConfigTwinPublisher"
          class="org.opennms.netmgt.telemetry.daemon.OpenConfigTwinPublisherImpl">
        <constructor-arg ref="locationPublisherManager"/>
    </bean>

    <bean id="jmsTwinPublisher" class="org.opennms.core.ipc.twin.jms.publisher.JmsTwinPublisher" primary="true"
          init-method="init" destroy-method="close" >
        <constructor-arg ref="twinRpcServer"/>
        <constructor-arg ref="localTwinSubscriber"/>
        <constructor-arg ref="tracerRegistry"/>
        <constructor-arg ref="jmsTwinMetricRegistry"/>
    </bean>

    <bean id="localTwinSubscriber" class="org.opennms.core.ipc.twin.common.LocalTwinSubscriberImpl">
        <constructor-arg ref="identity"/>
    </bean>

    <onmsgi:service interface="org.opennms.core.ipc.twin.api.LocalTwinSubscriber" ref="localTwinSubscriber">
        <onmsgi:service-properties>
            <entry key="registration.export" value="true" />
        </onmsgi:service-properties>
    </onmsgi:service>

    <bean id="connectorStarter"
          class="org.opennms.netmgt.telemetry.connectors.ConnectorStarter"
        init-method="start">
        <property name="M_twinSubscriber" ref="localTwinSubscriber"/>
        <property name="configMap">
            <map key-type="java.lang.String" value-type="java.lang.String">
                <entry key="name"         value="OpenConfig"/>
                <entry key="class-name"   value="org.opennms.netmgt.telemetry.protocols.openconfig.connector.OpenConfigConnector"/>
                <entry key="queue"        value="OpenConfig"/>
                <entry key="service-name" value="OpenConfig"/>
            </map>
        </property>
        <property name="distPollerDao" ref="distPollerDao" />
        <property name="telemetryRegistry" ref="telemetryRegistry" />
    </bean>

</beans>

/*
 * Licensed to The OpenNMS Group, Inc (TOG) under one or more
 * contributor license agreements.  See the LICENSE.md file
 * distributed with this work for additional information
 * regarding copyright ownership.
 *
 * TOG licenses this file to You under the GNU Affero General
 * Public License Version 3 (the "License") or (at your option)
 * any later version.  You may not use this file except in
 * compliance with the License.  You may obtain a copy of the
 * License at:
 *
 *      https://www.gnu.org/licenses/agpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.  See the License for the specific
 * language governing permissions and limitations under the
 * License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.20 at 10:20:43 PM EDT 
//


package org.opennms.netmgt.config.prometheus;

import java.util.Objects;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

import org.opennms.netmgt.collection.api.AttributeType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;attribute name="filter-exp" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="alias-exp" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="type"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *             &lt;pattern value="([Cc](ounter|OUNTER)|[Gg](auge|AUGE))"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *       &lt;attribute name="compress-alias" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "numeric-attribute")
public class NumericAttribute {

    @XmlAttribute(name = "filter-exp")
    @XmlSchemaType(name = "anySimpleType")
    protected String filterExp;
    @XmlAttribute(name = "alias-exp", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String aliasExp;
    @XmlAttribute(name="type")
    protected AttributeType type;
    @XmlAttribute(name = "compress-alias")
    protected Boolean compressAlias;

    /**
     * Gets the value of the filterExp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFilterExp() {
        return filterExp;
    }

    /**
     * Sets the value of the filterExp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFilterExp(String value) {
        this.filterExp = value;
    }

    /**
     * Gets the value of the aliasExp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAliasExp() {
        return aliasExp;
    }

    /**
     * Sets the value of the aliasExp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAliasExp(String value) {
        this.aliasExp = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link AttributeType }
     *     
     */
    public AttributeType getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link AttributeType }
     *     
     */
    public void setType(AttributeType value) {
        this.type = value;
    }

    /**
     * Gets the value of the compressAlias property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isCompressAlias() {
        if (compressAlias == null) {
            return true;
        } else {
            return compressAlias;
        }
    }

    /**
     * Sets the value of the compressAlias property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCompressAlias(Boolean value) {
        this.compressAlias = value;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof NumericAttribute)) return false;
        NumericAttribute that = (NumericAttribute) o;
        return Objects.equals(filterExp, that.filterExp) &&
                Objects.equals(aliasExp, that.aliasExp) &&
                type == that.type &&
                Objects.equals(compressAlias, that.compressAlias);
    }

    @Override
    public int hashCode() {
        return Objects.hash(filterExp, aliasExp, type, compressAlias);
    }
}

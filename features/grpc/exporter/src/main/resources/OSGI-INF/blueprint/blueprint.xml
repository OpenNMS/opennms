<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
                http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">


    <!-- Configuration properties -->
    <cm:property-placeholder id="grpcExporterProperties" persistent-id="org.opennms.features.grpc.exporter"
                             update-strategy="reload">
        <cm:default-properties>
            <cm:property name="host" value="bsm.onmshs.local:1443"/>
            <cm:property name="snapshot.interval" value="3600"/>
            <cm:property name="tls.enabled" value="true"/>
            <cm:property name="tls.cert.path" value=""/>
            <cm:property name="tenant.id" value="opennms-prime"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="onmsNodeDao" interface="org.opennms.netmgt.dao.api.NodeDao" availability="optional"/>
    <reference id="onmsIpInterfaceDao" interface="org.opennms.netmgt.dao.api.IpInterfaceDao" availability="optional"/>
    <reference id="onmsSnmpInterfaceDao" interface="org.opennms.netmgt.dao.api.SnmpInterfaceDao" availability="optional"/>
    <reference id="onmsMonitoredServiceDao" interface="org.opennms.netmgt.dao.api.MonitoredServiceDao" availability="optional"/>

    <reference id="nodeDao" interface="org.opennms.integration.api.v1.dao.NodeDao" availability="optional"/>
    <reference id="eventSubscriptionService" interface="org.opennms.integration.api.v1.events.EventSubscriptionService" availability="optional"/>
    <reference id="netmgtEventSubscriptionService" interface="org.opennms.netmgt.events.api.EventSubscriptionService" availability="optional"/>
    <reference id="runtimeInfo" interface="org.opennms.integration.api.v1.runtime.RuntimeInfo" availability="optional"/>

    <bean id="grpcClientInterceptor" class="org.opennms.features.grpc.exporter.GrpcHeaderInterceptor">
        <argument value="${tenant.id}"/>
    </bean>

    <bean id="bsmGrpcClient" class="org.opennms.features.grpc.exporter.bsm.BsmGrpcClient" init-method="start" destroy-method="stop">
        <argument value="${host}"/>
        <argument value="${tls.cert.path}"/>
        <argument value="${tls.enabled}"/>
        <argument ref="grpcClientInterceptor"/>
    </bean>

    <bean id="alarmInvoiceGrpcClient" class="org.opennms.features.grpc.exporter.alarms.AlarmInventoryGrpcClient" init-method="start" destroy-method="stop">
        <argument value="${host}"/>
        <argument value="${tls.cert.path}"/>
        <argument value="${tls.enabled}"/>
        <argument ref="grpcClientInterceptor"/>
    </bean>

    <bean id="inventoryService" class="org.opennms.features.grpc.exporter.bsm.InventoryService" init-method="start" destroy-method="stop" >
        <argument ref="nodeDao"/>
        <argument ref="runtimeInfo"/>
        <argument ref="bsmGrpcClient"/>
        <argument value="${snapshot.interval}" />
    </bean>
    <service ref="inventoryService" interface="org.opennms.features.grpc.exporter.bsm.InventoryService" />

    <bean id="stateService" class="org.opennms.features.grpc.exporter.bsm.StateService" >
        <argument ref="nodeDao"/>
        <argument ref="runtimeInfo"/>
        <argument ref="bsmGrpcClient"/>
    </bean>
    <service ref="stateService" interface="org.opennms.features.grpc.exporter.bsm.StateService" />

    <bean id="inventoryEventHandler" class="org.opennms.features.grpc.exporter.events.bsm.InventoryEventHandler" init-method="start" destroy-method="stop">
        <argument ref="eventSubscriptionService"/>
        <argument ref="nodeDao"/>
        <argument ref="inventoryService" />
    </bean>

    <bean id="stateEventHandler" class="org.opennms.features.grpc.exporter.events.bsm.StateEventHandler" init-method="start" destroy-method="stop">
        <argument ref="eventSubscriptionService"/>
        <argument ref="nodeDao"/>
        <argument ref="stateService" />
    </bean>

    <bean id="alarmService" class="org.opennms.features.grpc.exporter.alarms.AlarmService" >
        <argument ref="runtimeInfo"/>
        <argument ref="alarmInvoiceGrpcClient"/>
    </bean>
    <service ref="alarmService" interface="org.opennms.features.grpc.exporter.alarms.AlarmService" />

    <bean id="alarmEventHandler" class="org.opennms.features.grpc.exporter.events.alarms.AlarmEventHandler">
        <argument ref="alarmService" />
    </bean>
    <service ref="alarmEventHandler" interface="org.opennms.netmgt.alarmd.api.AlarmLifecycleListener">
        <service-properties>
            <entry key="registration.export" value="true"/>
        </service-properties>
    </service>

    <bean id="nmsInventoryService" class="org.opennms.features.grpc.exporter.alarms.NmsInventoryService" init-method="start" destroy-method="stop" >
        <argument ref="onmsNodeDao"/>
        <argument ref="onmsIpInterfaceDao"/>
        <argument ref="onmsSnmpInterfaceDao"/>
        <argument ref="onmsMonitoredServiceDao"/>
        <argument ref="runtimeInfo"/>
        <argument ref="alarmInvoiceGrpcClient"/>
        <argument value="${snapshot.interval}" />
    </bean>
    <service ref="nmsInventoryService" interface="org.opennms.features.grpc.exporter.alarms.NmsInventoryService" />

    <bean id="nmsInventoryEventHandler" class="org.opennms.features.grpc.exporter.events.alarms.NmsInventoryEventHandler" init-method="start" destroy-method="stop">
        <argument ref="eventSubscriptionService"/>
        <argument ref="onmsNodeDao"/>
        <argument ref="nmsInventoryService" />
    </bean>


    <bean id="eventsService" class="org.opennms.features.grpc.exporter.alarms.EventService" >
        <argument ref="runtimeInfo"/>
        <argument ref="alarmInvoiceGrpcClient"/>
    </bean>
    <service ref="eventsService" interface="org.opennms.features.grpc.exporter.alarms.EventService" />

    <bean id="eventsEventHandler" class="org.opennms.features.grpc.exporter.events.alarms.EventsEventHandler" init-method="start" destroy-method="stop">
        <argument ref="netmgtEventSubscriptionService"/>
        <argument ref="eventsService" />
    </bean>
    <service ref="eventsEventHandler" interface="org.opennms.netmgt.events.api.EventListener">
        <service-properties>
            <entry key="registration.export" value="true"/>
        </service-properties>
    </service>

</blueprint>
<blueprint
    xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
    xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <cm:property-placeholder id="sshScriptingServiceProperties" persistent-id="org.opennms.features.deviceconfig.sshscripting" update-strategy="reload">
        <cm:default-properties>
            <!--
            The device config backup feature allows the retrieval of network device configurations by using the TFTP
            protocol. To achieve this, a TFTP server needs to be started on the OpenNMS instance or on a minion. Normally
            the IP address to use is determined by picking the interface address that the operating system will use to reach
            the destination device. In the case of a dockerized minion running not in host networking mode, the IP address
            cannot be automatically determined. In this case this property can be set to specify the IP address to be used.
            -->
            <cm:property name="tftpServerIPv4Address" value=""/>
            <cm:property name="tftpServerIPv6Address" value=""/>
            <!--
            By default, the ssh session output is saved in the PollerStatus object. If this could potentially
            contain sensitive information, this can be disabled using the option below.
            -->
            <cm:property name="disableIOCollection" value="false"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="sshScriptingService" class="org.opennms.features.deviceconfig.sshscripting.impl.SshScriptingServiceImpl">
        <property name="tftpServerIPv4Address" value="${tftpServerIPv4Address}" />
        <property name="tftpServerIPv6Address" value="${tftpServerIPv6Address}" />
        <property name="disableIOCollection"   value="${disableIOCollection}" />
    </bean>

    <service ref="sshScriptingService" interface="org.opennms.features.deviceconfig.sshscripting.SshScriptingService"/>

</blueprint>

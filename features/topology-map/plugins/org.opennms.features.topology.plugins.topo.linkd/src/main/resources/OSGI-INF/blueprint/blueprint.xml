<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 
					https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
					http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0 
					http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd
					http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0 
					http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.5.xsd">

    <reference id="transactionOperations" interface="org.springframework.transaction.support.TransactionOperations" availability="mandatory" />

    <reference id="nodeDao" interface="org.opennms.netmgt.dao.api.NodeDao" availability="mandatory" />
    <reference id="topologyEntityCache" interface="org.opennms.netmgt.enlinkd.persistence.api.TopologyEntityCache" availability="mandatory" />
    <reference id="ipInterfaceDao" interface="org.opennms.netmgt.dao.api.IpInterfaceDao" availability="mandatory" />
    <reference id="snmpInterfaceDao" interface="org.opennms.netmgt.dao.api.SnmpInterfaceDao" availability="mandatory" />
    <reference id="lldpLinkDao" interface="org.opennms.netmgt.enlinkd.persistence.api.LldpLinkDao" availability="mandatory" />
    <reference id="lldpElementDao" interface="org.opennms.netmgt.enlinkd.persistence.api.LldpElementDao" availability="mandatory" />
    <reference id="cdpLinkDao" interface="org.opennms.netmgt.enlinkd.persistence.api.CdpLinkDao" availability="mandatory"/>
    <reference id="cdpElementDao" interface="org.opennms.netmgt.enlinkd.persistence.api.CdpElementDao" availability="mandatory"/>
    <reference id="ospfLinkDao" interface="org.opennms.netmgt.enlinkd.persistence.api.OspfLinkDao" availability="mandatory" />
    <reference id="ospfElementDao" interface="org.opennms.netmgt.enlinkd.persistence.api.OspfElementDao" availability="mandatory" />
    <reference id="isisLinkDao" interface="org.opennms.netmgt.enlinkd.persistence.api.IsIsLinkDao" availability="mandatory" />
    <reference id="isisElementDao" interface="org.opennms.netmgt.enlinkd.persistence.api.IsIsElementDao" availability="mandatory" />
    <reference id="bridgeTopologyService" interface="org.opennms.netmgt.enlinkd.service.api.BridgeTopologyService" availability="mandatory" />
    <reference id="ipNetToMediaDao" interface="org.opennms.netmgt.enlinkd.persistence.api.IpNetToMediaDao" availability="mandatory"/>
    <reference id="alarmDao" interface="org.opennms.netmgt.dao.api.AlarmDao" availability="mandatory" />
    <reference id="filterManager" interface="org.opennms.netmgt.model.FilterManager" availability="mandatory" />

    <bean id="enlinkdTopologyProviderInfo" class="org.opennms.features.topology.api.topo.DefaultTopologyProviderInfo">
        <property name="name" value="Enhanced Linkd Topology Provider"/>
        <property name="description" value="This Topology Provider displays the topology information discovered by the Enhanced Linkd daemon. It uses the SNMP information of several protocols like OSPF, ISIS, LLDP and CDP to generate an overall topology."/>
        <property name="supportsCategorySearch" value="true"/>
    </bean>

    <!-- Metrics -->
    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry" />

    <bean id="metricRegistryJmxReporterBuilder" class="com.codahale.metrics.JmxReporter" factory-method="forRegistry">
        <argument ref="metricRegistry"/>
    </bean>

    <bean id="metricRegistryDomainedJmxReporterBuilder" factory-ref="metricRegistryJmxReporterBuilder" factory-method="inDomain">
        <argument value="org.opennms.features.topology.plugins.topo.linkd" />
    </bean>

    <bean id="metricRegistryJmxReporter"
        factory-ref="metricRegistryDomainedJmxReporterBuilder"
        factory-method="build"
        init-method="start"
        destroy-method="stop" />

    <bean id="topologyProvider" scope="singleton" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdTopologyProvider">
        <argument ref="metricRegistry" />
        <property name="transactionOperations" ref="transactionOperations"/>
        <property name="nodeDao" ref="nodeDao" />
        <property name="topologyEntityCache" ref="topologyEntityCache" />
        <property name="snmpInterfaceDao" ref="snmpInterfaceDao" />
        <property name="ipInterfaceDao" ref="ipInterfaceDao" />
        <property name="filterManager" ref="filterManager" />
        <property name="lldpElementDao" ref="lldpElementDao" />
        <property name="lldpLinkDao" ref="lldpLinkDao" />
        <property name="cdpElementDao" ref="cdpElementDao"/>
        <property name="ospfLinkDao" ref="ospfLinkDao"/>
        <property name="isisLinkDao" ref="isisLinkDao" />
        <property name="isisElementDao" ref="isisElementDao" />
        <property name="bridgeTopologyService" ref="bridgeTopologyService" />
        <property name="ipNetToMediaDao" ref="ipNetToMediaDao"/>
        <property name="topologyProviderInfo" ref="enlinkdTopologyProviderInfo"/>
    </bean>

    <bean id="topologyHopProvider" class="org.opennms.features.topology.api.support.VertexHopGraphProvider">
        <argument ref="topologyProvider"/>
    </bean>

    <!-- Search topology provider -->
    <bean id="linkdSearchProvider" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdSearchProvider">
        <argument ref="topologyProvider" />
    </bean>

    <service interface="org.opennms.features.topology.api.topo.SearchProvider" ref="linkdSearchProvider" />

    <!-- Meta topology provider -->
    <bean id="linkdMetaTopologyProvider" class="org.opennms.features.topology.api.topo.SimpleMetaTopologyProvider">
        <argument ref="topologyHopProvider" />
    </bean>

    <service interface="org.opennms.features.topology.api.topo.MetaTopologyProvider" ref="linkdMetaTopologyProvider">
        <service-properties>
            <entry key="label" value="Enhanced Linkd" />
        </service-properties>
    </service>

    <!-- EnhancedLinkd StatusProviders Service and CheckedOperation -->
    <bean id="linkdEdgeStatusProvider" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdEdgeStatusProvider">
        <property name="alarmDao" ref="alarmDao"/>
    </bean>

	<bean id="linkdWrappedEdgeStatusProvider" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdWrappedEdgeStatusProviders" init-method="init">
        <property name="edgeStatusProvider" ref="linkdEdgeStatusProvider"/>
    </bean>

    <service interface="org.opennms.features.topology.api.topo.EdgeStatusProvider" ref="linkdWrappedEdgeStatusProvider" />

    <!-- status provider -->
    <bean id="linkdStatusProvider" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdStatusProvider">
        <argument ref="alarmDao"/>
    </bean>
    <service interface="org.opennms.features.topology.api.topo.StatusProvider" ref="linkdStatusProvider" />

    <!-- Icon definition -->
    <service>
        <interfaces>
            <value>org.opennms.features.topology.api.ConfigurableIconRepository</value>
            <value>org.osgi.service.cm.ManagedService</value>
        </interfaces>
        <service-properties>
            <entry key="service.pid" value="org.opennms.features.topology.app.icons.linkd"/>
        </service-properties>
        <bean class="org.opennms.features.topology.api.support.DefaultIconRepository" />
    </service>
</blueprint>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xsi:schemaLocation="
    http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
    http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
">
    
   <cm:property-placeholder id="ncsPlugin" persistent-id="org.opennms.features.topology.plugin.ncs" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="junoSpaceBaseUrl" value="http://localhost:8080/testing-webapp/" />
            <cm:property name="username" value="admin" />
            <cm:property name="password" value="admin" />
        </cm:default-properties>
    </cm:property-placeholder>
    
    <bean id="customHttpClientConfigurer" class="org.opennms.core.camel.CustomHttpClientConfigurer">
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
    </bean>
    
    <camelContext id="camel1" xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="properties" location="blueprint:ncsPlugin"
                                prefixToken="[[" suffixToken="]]" />
    
        <route>
            <from uri="direct:start" />
            <setHeader headerName="CamelHttpUri">
                <simple>[[junoSpaceBaseUrl]]api/space/nsas/service-management/services/${header.foreignId}?appName=${header.foreignSource}</simple>
            </setHeader>
            <to uri="https://dummyhost?httpClientConfigurer=customHttpClientConfigurer&amp;authUsername=[[username]]&amp;authPassword=[[password]]&amp;authMethod=Basic"/>
            <to uri="log:org.opennms.features.topology.plugin.ncs?level=DEBUG&amp;showAll=true" />
            <bean ref="ncsPathRouteUtil" method="getServiceName" />
            <setHeader headerName="CamelHttpUri">
                <simple>[[junoSpaceBaseUrl]]api/space/nsas/${headers.serviceType}/service-management/services/${header.foreignId}/servicepath?httpClientConfigurer=customHttpClientConfigurer&amp;deviceA=${header.deviceA}&amp;deviceZ=${header.deviceZ}</simple>
            </setHeader>
            <to uri="https://dummyhost?httpClientConfigurer=customHttpClientConfigurer&amp;authUsername=[[username]]&amp;authPassword=[[password]]&amp;authMethod=Basic"/>
            <to uri="log:org.opennms.features.topology.plugin.ncs?level=DEBUG&amp;showAll=true" />
            <bean ref="ncsPathRouteUtil" method="createPath" />
        </route>
    </camelContext>
    
	<reference id="ncsComponentRepository" interface="org.opennms.netmgt.model.ncs.NCSComponentRepository" availability="mandatory" />
	<reference id="nodeDao" interface="org.opennms.netmgt.dao.api.NodeDao" availability="mandatory" />

	<command-bundle xmlns="http://karaf.apache.org/xmlns/shell/v1.0.0">
		<command name="ncs/listcomponents">
			<action class="org.opennms.features.topology.plugins.ncs.ComponentCommand" />
		</command>
	</command-bundle>
	
	<bean id="ncsCriteriaServiceManager" class="org.opennms.features.topology.plugins.ncs.internal.NCSCriteriaServiceManager">
	   <property name="bundleContext" ref="blueprintBundleContext" />
	</bean>
	
	<bean id="ncsSearchProvider" class="org.opennms.features.topology.plugins.ncs.NCSSearchProvider">
		<property name="ncsComponentRepository" ref="ncsComponentRepository" />
		<property name="ncsEdgeProvider" ref="ncsEdgeProvider" />
		<property name="ncsCriteriaServiceManager" ref="ncsCriteriaServiceManager" />
	</bean>

	<service interface="org.opennms.features.topology.api.topo.SearchProvider" ref="ncsSearchProvider"/>

	<bean id="ncsHistoryOperation" class="org.opennms.features.topology.plugins.ncs.NCSHopCriteriaHistoryOperation">
		<property name="ncsComponentRepository" ref="ncsComponentRepository" />
		<property name="ncsEdgeProvider" ref="ncsEdgeProvider" />
	</bean>

	<service interface="org.opennms.features.topology.api.HistoryOperation" ref="ncsHistoryOperation"/>

	<bean id="ncsEdgeProvider" class="org.opennms.features.topology.plugins.ncs.NCSEdgeProvider">
		<description>This EdgeProvider exposes edges between nodes that are implied by NCSComponents.</description>
		<property name="ncsComponentRepository" ref="ncsComponentRepository" />
		<property name="nodeDao" ref="nodeDao" />
	</bean>
	
	<bean id="ncsPathEdgeProvider" class="org.opennms.features.topology.plugins.ncs.NCSPathEdgeProvider"/>

	<service interface="org.opennms.features.topology.api.topo.EdgeProvider" ref="ncsEdgeProvider"/>
	<service interface="org.opennms.features.topology.api.topo.EdgeProvider" ref="ncsPathEdgeProvider" />

    <!--NCS Edge Status Provider-->
    <reference id="alarmDao" interface="org.opennms.netmgt.dao.api.AlarmDao" availability="mandatory" />

    <bean id="ncsEdgeStatusProvider" class="org.opennms.features.topology.plugins.ncs.NCSEdgeStatusProvider">
        <property name="alarmDao" ref="alarmDao"/>
    </bean>
    <service interface="org.opennms.features.topology.api.topo.EdgeStatusProvider" ref="ncsEdgeStatusProvider" />

	<bean id="ncsPathProviderService" class="org.opennms.features.topology.plugins.ncs.NCSPathProviderService">
	   <argument ref="camel1" />
	</bean>
	
	<bean id="ncsPathRouteUtil" class="org.opennms.features.topology.plugins.ncs.support.NCSPathRouteUtil">
	   <argument ref="ncsComponentRepository"/>
       <argument ref="nodeDao"/>
	</bean>
	
	<service interface="org.opennms.features.topology.api.Operation">
	   <service-properties>
            <entry key="operation.label" value="Show NCS Path"/>
            <entry key="operation.contextMenuLocation" value=""/>
        </service-properties>
	   <bean class="org.opennms.features.topology.plugins.ncs.ShowNCSPathOperation" >
	       <property name="dao" ref="ncsComponentRepository"/>
	       <property name="nodeDao" ref="nodeDao"/>
	       <property name="ncsEdgeProvider" ref="ncsEdgeProvider"/>
	       <property name="ncsPathProvider" ref="ncsPathProviderService"/>
	       <property name="ncsCriteriaServiceManager" ref="ncsCriteriaServiceManager" />
	   </bean>
	</service>
	
	<service interface="org.opennms.features.topology.api.Operation">
       <service-properties>
            <entry key="operation.label" value="Hide NCS Path"/>
            <entry key="operation.contextMenuLocation" value=""/>
        </service-properties>
       <bean class="org.opennms.features.topology.plugins.ncs.HideNCSPathOperation">
            <property name="ncsCriteriaServiceManager" ref="ncsCriteriaServiceManager" />
       </bean>
    </service>

</blueprint>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
xsi:schemaLocation="
http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 https://svn.apache.org/repos/asf/aries/tags/blueprint-0.3.1/blueprint-cm/src/main/resources/org/apache/aries/blueprint/compendium/cm/blueprint-cm-1.1.0.xsd
http://www.osgi.org/xmlns/blueprint-ext/v1.1.0 https://svn.apache.org/repos/asf/aries/tags/blueprint-0.3.1/blueprint-core/src/main/resources/org/apache/aries/blueprint/ext/blueprint-ext.xsd">
    
    <cm:property-placeholder id="appConfig" persistent-id="org.opennms.features.topology.app" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="servletAlias" value="/topology"/>
            <cm:property name="widgetset" value="org.opennms.features.topology.widgetset.gwt.TopologyWidgetset"/>
            <cm:property name="theme" value="topo_default" />
            <cm:property name="showHeader" value="true" />
            <cm:property name="autoRefresh.enabled" value="false" />
            <cm:property name="autoRefresh.interval" value="60" />
            <cm:property name="hiddenCategoryPrefix" value="" />
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="topologyProvider" interface="org.opennms.features.topology.api.topo.GraphProvider" filter="|(label=Enhanced Linkd)(label=Linkd)"  availability="mandatory"/>

    <bean id="topologyApplication" class="org.opennms.features.topology.app.internal.TopologyUI" scope="prototype">
        <argument ref="commandManager"/>
        <argument ref="historyManager"/>
        <argument ref="veGraphContainer" />
        <argument ref="iconRepoManager"/>
        <argument>
            <bean class="org.opennms.features.topology.app.internal.DefaultSelectionManager"/>
        </argument>
        <property name="widgetManager" ref="widgetManager"/>
        <property name="headerProvider" ref="onmsHeaderProvider" />
        <property name="showHeader" value="${showHeader}" />
        <property name="serviceManager" ref="blueprintBundleContext"/>
    </bean>
    
    <bean id="veGraphContainer" class="org.opennms.features.topology.app.internal.VEProviderGraphContainer" scope="prototype">
        <argument ref="topologyProvider" />
        <argument ref="providerManager" />
        <property name="bundleContext" ref="blueprintBundleContext" />
        <property name="autoRefreshSupport" ref="defaultAutoRefreshSupport"/>
        <property name="vertexStatusProvider" ref="statusProvider"/>
    </bean>

    <!--  Header reference -->
    <reference id="onmsHeaderProvider" interface="org.opennms.web.api.OnmsHeaderProvider" availability="mandatory" />

    <bean id="defaultAutoRefreshSupport" class="org.opennms.features.topology.app.internal.DefaultAutoRefreshSupport" scope="prototype">
        <property name="interval" value="${autoRefresh.interval}"/>
        <property name="enabled" value="${autoRefresh.enabled}"/>
    </bean>

    <reference id="categoryDao" interface="org.opennms.netmgt.dao.api.CategoryDao" availability="mandatory" />
    <reference id="nodeDao" interface="org.opennms.netmgt.dao.api.NodeDao" availability="mandatory" />
    <reference id="ipInterfaceDao" interface="org.opennms.netmgt.dao.api.IpInterfaceDao" availability="mandatory" />

    <bean id="categoryHopCriteriaFactory" class="org.opennms.features.topology.app.internal.support.CategoryHopCriteriaFactory">
        <argument ref="categoryDao"/>
        <argument ref="nodeDao"/>
    </bean>

    <service id="categorySearchProvider" interface="org.opennms.features.topology.api.topo.SearchProvider">
        <bean class="org.opennms.features.topology.app.internal.CategorySearchProvider">
            <argument ref="categoryDao"/>
            <argument ref="nodeDao"/>
            <property name="hiddenCategoryPrefix" value="${hiddenCategoryPrefix}" />
        </bean>
    </service>
    
    <bean id="categoryHistoryOperation" class=" org.opennms.features.topology.app.internal.support.CategoryHopCriteriaHistoryOperation" >
        <property name="categoryHopCriteriaFactory" ref="categoryHopCriteriaFactory" />
    </bean>
    
    <service interface="org.opennms.features.topology.api.HistoryOperation" ref="categoryHistoryOperation"/>

    <bean id="ipLikeHopCriteriaFactory" class="org.opennms.features.topology.app.internal.support.IpLikeHopCriteriaFactory">
        <argument ref="ipInterfaceDao"/>
    </bean>
    
    <service id="ipLikeSearchProvider" interface="org.opennms.features.topology.api.topo.SearchProvider" >
        <bean class="org.opennms.features.topology.app.internal.IpLikeSearchProvider" >
            <argument ref="ipInterfaceDao" />
        </bean>
    </service>
    
    <bean id="AlarmHopCriteriaFactory" class="org.opennms.features.topology.app.internal.support.AlarmHopCriteriaFactory">
        <argument ref="alarmDao"/>
    </bean>
    
    <service id="AlarmSearchProvider" interface="org.opennms.features.topology.api.topo.SearchProvider" >
        <bean class="org.opennms.features.topology.app.internal.AlarmSearchProvider" >
            <argument ref="alarmDao" />
        </bean>
    </service>


    <!-- status provider -->
    <reference id="alarmDao" interface="org.opennms.netmgt.dao.api.AlarmDao" availability="mandatory" />

    <bean id="statusProvider" class="org.opennms.features.topology.app.internal.AlarmStatusProvider">
        <property name="alarmDao" ref="alarmDao"/>
    </bean>

    <bean id="topologyUIFactory" class="org.opennms.features.topology.app.internal.TopologyUIFactory" >
        <!-- Blueprint container bean -->
        <argument ref="blueprintContainer"/>
        <!-- Bean id of the Vaadin application prototype -->
        <argument value="topologyApplication"/>
    </bean>

    <service interface="org.opennms.vaadin.extender.ApplicationFactory" ref="topologyUIFactory">
        <service-properties>
            <entry key="alias" value="${servletAlias}"/>
            <entry key="init.widgetset" value="${widgetset}"/>
        </service-properties>
    </service>
    
    <bean id="topologySelector" class="org.opennms.features.topology.app.internal.operations.TopologySelector">
    	<property name="bundleContext" ref="blueprintBundleContext" />
    </bean>
    
    <reference-list interface="org.opennms.features.topology.api.topo.GraphProvider" availability="mandatory">
        <reference-listener bind-method="addGraphProvider" unbind-method="removeGraphProvider" ref="topologySelector" />
    </reference-list>

    <!-- default icon repository -->
    <service>
      <interfaces>
        <value>org.opennms.features.topology.api.IconRepository</value>
        <value>org.osgi.service.cm.ManagedService</value>
      </interfaces>
      <service-properties>
        <entry key="service.pid" value="org.opennms.features.topology.app.icons"/>
      </service-properties>
       <bean class="org.opennms.features.topology.api.support.ConfigurableIconRepository" />
    </service>

    <!-- Icon Repository Manager -->
    <bean id="iconRepoManager" class="org.opennms.features.topology.app.internal.support.IconRepositoryManager"/>
    
    <reference-list interface="org.opennms.features.topology.api.IconRepository" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="iconRepoManager" />
    </reference-list>

    <service interface="org.opennms.features.topology.api.IconRepository">
        <bean class="org.opennms.features.topology.api.support.DefaultIconRepository">
            <property name="iconMap">
                <map>
                    <entry key="default" value="generic" />
                    <entry key="group" value="cloud"/>
                    <entry key="cloud" value="cloud"/>
                    
                    <!--  TODO: move these into VMWare ToPr -->
                    <entry key="NETWORK_ICON" value="vmware-network"/>
                    <entry key="HOSTSYSTEM_ICON_ON" value="vmware-hostsystem-on"/>
                    <entry key="HOSTSYSTEM_ICON_OFF" value="vmware-hostsystem-off"/>
                    <entry key="HOSTSYSTEM_ICON_STANDBY" value="vmware-hostsystem-standby"/>
                    <entry key="HOSTSYSTEM_ICON_UNKNOWN" value="vmware-hostsystem-unknown"/>
                    <entry key="VIRTUALMACHINE_ICON_ON" value="vmware-virtualmachine-on"/>
                    <entry key="VIRTUALMACHINE_ICON_OFF" value="vmware-virtualmachine-off"/>
                    <entry key="VIRTUALMACHINE_ICON_SUSPENDED" value="vmware-virtualmachine-suspended"/>
                    <entry key="VIRTUALMACHINE_ICON_UNKNOWN" value="vmware-virtualmachine-unknown"/>
                    <entry key="DATASTORE_ICON" value="vmware-datastore"/>
                    <entry key="DATACENTER_ICON" value="vmware-datacenter"/>

					<!-- linkd icon information has been moved into the linkd ToPr's blueprint.xml file -->
                </map>
            </property>
            <property name="SVGDefs">
                <list>
                    <value>theme://svg/default_icons.svg</value>
                    <value>theme://svg/vmware_icons.svg</value>
                    <value>theme://svg/open_icons.svg</value>
                </list>
            </property>
        </bean>
    </service>
    
    <bean id="providerManager" class="org.opennms.features.topology.app.internal.ProviderManager" />
    
    <reference-list interface="org.opennms.features.topology.api.topo.EdgeProvider" availability="optional">
        <reference-listener bind-method="onEdgeProviderBind" unbind-method="onEdgeProviderUnbind" ref="providerManager"/>
    </reference-list>

    <reference-list interface="org.opennms.features.topology.api.topo.VertexProvider" availability="optional">
        <reference-listener bind-method="onVertexProviderBind" unbind-method="onVertexProviderUnbind" ref="providerManager"/>
    </reference-list>
    
    <bean id="widgetManager" class="org.opennms.features.topology.api.WidgetManager" />

    <reference-list interface="org.opennms.features.topology.api.IViewContribution" availability="optional" filter="(location=bottom)">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="widgetManager"/>
    </reference-list>

    <service interface="org.osgi.service.cm.ManagedService" >
        <service-properties>
            <entry key="service.pid" value="org.opennms.features.topology.app.menu"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.MenuConfigManagedService">
            <property name="commandManager" ref="commandManager"/>
        </bean>
    </service>
    
    <bean id="commandManager" class="org.opennms.features.topology.app.internal.CommandManager" />
    
    <reference-list interface="org.opennms.features.topology.app.internal.Command" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="commandManager">
        </reference-listener>
    </reference-list>
    
    <reference-list interface="org.opennms.features.topology.api.Operation" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="commandManager">
        </reference-listener>
    </reference-list>
    
    <reference-list interface="org.opennms.features.topology.api.CheckedOperation" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="commandManager">
        </reference-listener>
    </reference-list>

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Circle Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.CircleLayoutOperation"/>
    </service>
    
    <!--
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="FR Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.FRLayoutOperation"/>
    </service>
    -->

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="FR Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.TopoFRLayoutOperation"/>
    </service>

    <!-- D3 Layout-->
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="D3 Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.D3TopoLayoutOperation"/>
    </service>


    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Real Ultimate Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RealUltimateLayoutOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="ISOM Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.ISOMLayoutOperation"/>
    </service>
    
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="KK Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.KKLayoutOperation"/>
    </service>
    
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Manual Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.ManualLayoutOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Refresh Now?group=additions"/>
            <entry key="operation.contextMenuLocation" value=""/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RedoLayoutOperation"/>
    </service>
    
    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Create Group?group=grouping"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.CreateGroupOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation">
        <service-properties>
            <entry key="operation.contextMenuLocation" value="" />
            <entry key="operation.label" value="Set As Focal Point" />
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.SetFocusVertexOperation" />
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Add To Focus"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.AddFocusVerticesOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Remove From Focus"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RemoveFocusVerticesOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <!-- <entry key="operation.menuLocation" value="View"/> -->
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Rename Group"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RenameGroupOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <!-- <entry key="operation.menuLocation" value="View"/> -->
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Delete Group"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.DeleteGroupOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <!-- <entry key="operation.menuLocation" value="View"/> -->
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Add This Item To a Group"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.AddVertexToGroupOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <!-- <entry key="operation.menuLocation" value="View"/> -->
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Remove item from this Group"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RemoveVertexFromGroupOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Automatic Refresh?group=additions"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.AutoRefreshToggleOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Alarm Status?group=status"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.AlarmStatusToggleOperation">
            <property name="statusProvider" ref="statusProvider"/>
        </bean>
    </service>

    <!-- removed for SPC-247
    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Show Map"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.ShowMapOperation"/>
    </service>
    -->
    
    <!-- removed for SPC-249
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="Edit|Layout"/>
            <entry key="operation.label" value="Simple Layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.SimpleLayoutOperation"/>
    </service>
    -->
    
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Spring Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.SpringLayoutOperation"/>
    </service>
    
    <reference id="historyManager" interface="org.opennms.features.topology.api.HistoryManager" availability="mandatory">
    </reference>

	<bean id="topoMapsLink" class="org.opennms.features.topology.app.internal.TopoMapNavEntry">
		<property name="url" value="topology?focusNodes=%nodeid%&amp;szl=1" />
		<property name="name" value="View in Topology" />
	</bean>

	<service id="nodeMapsLinkService" interface="org.opennms.web.navigate.ConditionalPageNavEntry" ref="topoMapsLink">
		<service-properties>
			<entry key="Page" value="node" />
			<entry key="registration.export" value="true" />
		</service-properties>
	</service>

</blueprint>

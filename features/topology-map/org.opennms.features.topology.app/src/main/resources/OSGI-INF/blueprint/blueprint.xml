<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
xsi:schemaLocation="
http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
http://www.osgi.org/xmlns/blueprint-ext/v1.1.0 http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd">

    <cm:property-placeholder id="appConfig" persistent-id="org.opennms.features.topology.app" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="showHeader" value="true" />
            <cm:property name="autoRefresh.enabled" value="false" />
            <cm:property name="autoRefresh.interval" value="60" />
            <cm:property name="hiddenCategoryPrefix" value="" />
            <cm:property name="topologyServiceCacheTimeout" value="60" /> <!-- seconds -->
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="transactionOperations" interface="org.springframework.transaction.support.TransactionOperations" availability="mandatory" />
    <reference id="geolocationService" interface="org.opennms.features.geolocation.api.GeolocationService" availability="mandatory" />
    <reference id="geolocationConfiguration" interface="org.opennms.features.geolocation.api.GeolocationConfiguration" availability="mandatory" />
    <reference id="layoutDao" interface="org.opennms.netmgt.topology.persistence.api.LayoutDao" availability="mandatory" />
    <reference id="eventIpcManager" interface="org.opennms.netmgt.events.api.EventIpcManager" availability="mandatory"/>

    <bean id="topologyApplication" class="org.opennms.features.topology.app.internal.TopologyUI" scope="prototype">
        <argument ref="operationManager"/>
        <argument ref="historyManager"/>
        <argument ref="veGraphContainer" />
        <argument ref="iconRepoManager"/>
        <argument ref="layoutManager"/>
        <argument ref="transactionOperations"/>
        <property name="widgetManager" ref="widgetManager"/>
        <property name="headerProvider" ref="onmsHeaderProvider" />
        <property name="showHeader" value="${showHeader}" />
        <property name="serviceManager" ref="blueprintBundleContext"/>
    </bean>

    <bean id="veGraphContainer" class="org.opennms.features.topology.app.internal.VEProviderGraphContainer" scope="prototype">
        <property name="bundleContext" ref="blueprintBundleContext" />
        <property name="autoRefreshSupport" ref="defaultAutoRefreshSupport"/>
        <property name="topologyService" ref="topologyService" />
        <property name="layoutManager" ref="layoutManager" />
    </bean>

    <!--  Header reference -->
    <reference id="onmsHeaderProvider" interface="org.opennms.web.api.OnmsHeaderProvider" availability="mandatory" />

    <bean id="defaultAutoRefreshSupport" class="org.opennms.features.topology.app.internal.DefaultAutoRefreshSupport" scope="prototype">
        <property name="interval" value="${autoRefresh.interval}"/>
        <property name="enabled" value="${autoRefresh.enabled}"/>
    </bean>

    <reference id="categoryDao" interface="org.opennms.netmgt.dao.api.CategoryDao" availability="mandatory" />
    <reference id="nodeDao" interface="org.opennms.netmgt.dao.api.NodeDao" availability="mandatory" />
    <reference id="ipInterfaceDao" interface="org.opennms.netmgt.dao.api.IpInterfaceDao" availability="mandatory" />
    <reference id="alarmDao" interface="org.opennms.netmgt.dao.api.AlarmDao" availability="mandatory" />
    <reference id="assetRecordDao" interface="org.opennms.netmgt.dao.api.AssetRecordDao" availability="mandatory" />

    <reference id="measurementsService" interface="org.opennms.netmgt.measurements.api.MeasurementsService" availability="mandatory"/>

    <bean id="categoryHopCriteriaFactory" class="org.opennms.features.topology.app.internal.support.CategoryHopCriteriaFactory">
        <argument ref="categoryDao"/>
        <argument ref="nodeDao"/>
    </bean>

    <service id="categorySearchProvider" interface="org.opennms.features.topology.api.topo.SearchProvider">
        <bean class="org.opennms.features.topology.app.internal.CategorySearchProvider">
            <argument ref="categoryDao"/>
            <argument ref="nodeDao"/>
            <property name="hiddenCategoryPrefix" value="${hiddenCategoryPrefix}" />
        </bean>
    </service>
    
    <bean id="categoryHistoryOperation" class=" org.opennms.features.topology.app.internal.support.CategoryHopCriteriaHistoryOperation" >
        <property name="categoryHopCriteriaFactory" ref="categoryHopCriteriaFactory" />
    </bean>
    
    <service interface="org.opennms.features.topology.api.HistoryOperation" ref="categoryHistoryOperation"/>

    <bean id="ipLikeHopCriteriaFactory" class="org.opennms.features.topology.app.internal.support.IpLikeHopCriteriaFactory">
        <argument ref="ipInterfaceDao"/>
    </bean>
    
    <service id="ipLikeSearchProvider" interface="org.opennms.features.topology.api.topo.SearchProvider" >
        <bean class="org.opennms.features.topology.app.internal.IpLikeSearchProvider" >
            <argument ref="ipInterfaceDao" />
        </bean>
    </service>
    
    <bean id="AlarmHopCriteriaFactory" class="org.opennms.features.topology.app.internal.support.AlarmHopCriteriaFactory">
        <argument ref="alarmDao"/>
    </bean>
    
    <service id="AlarmSearchProvider" interface="org.opennms.features.topology.api.topo.SearchProvider" >
        <bean class="org.opennms.features.topology.app.internal.AlarmSearchProvider" >
            <argument ref="alarmDao" />
        </bean>
    </service>

    <bean id="topologyUIFactory" class="org.opennms.features.topology.app.internal.TopologyUIFactory" >
        <!-- Blueprint container bean -->
        <argument ref="blueprintContainer"/>
        <!-- Bean id of the Vaadin application prototype -->
        <argument value="topologyApplication"/>
    </bean>

    <service interface="org.opennms.vaadin.extender.ApplicationFactory" ref="topologyUIFactory">
        <service-properties>
            <entry key="alias" value="/topology"/>
            <entry key="init.widgetset" value="org.opennms.features.topology.widgetset.gwt.TopologyWidgetset"/>
        </service-properties>
    </service>
    
    <bean id="metaTopologySelector" class="org.opennms.features.topology.app.internal.operations.MetaTopologySelector">
    	<property name="bundleContext" ref="blueprintBundleContext" />
    </bean>

    <reference-list interface="org.opennms.features.topology.api.topo.MetaTopologyProvider" availability="mandatory">
        <reference-listener bind-method="addMetaTopologyProvider" unbind-method="removeMetaTopologyProvider" ref="metaTopologySelector" />
    </reference-list>

    <!-- default icon repository -->
    <service>
      <interfaces>
        <value>org.opennms.features.topology.api.ConfigurableIconRepository</value>
        <value>org.osgi.service.cm.ManagedService</value>
      </interfaces>
      <service-properties>
        <entry key="service.pid" value="org.opennms.features.topology.app.icons.default"/>
      </service-properties>
      <bean class="org.opennms.features.topology.api.support.DefaultIconRepository" />
    </service>

    <!-- Icon Repository Manager -->
    <bean id="iconRepoManager" class="org.opennms.features.topology.app.internal.support.IconRepositoryManager"/>
    <reference-list interface="org.opennms.features.topology.api.ConfigurableIconRepository" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="iconRepoManager" />
    </reference-list>
    <reference-list interface="org.opennms.features.topology.api.IconRepository" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="iconRepoManager" />
    </reference-list>

    <!-- ServiceLocator -->
    <bean id="bundleContextServiceLocator" class="org.opennms.features.topology.app.internal.service.BundleContextServiceLocator" >
        <argument ref="blueprintBundleContext" />
    </bean>

    <!-- Topology Service -->
    <bean id="topologyService" class="org.opennms.features.topology.app.internal.service.DefaultTopologyService" >
        <argument value="${topologyServiceCacheTimeout}"/>
        <property name="serviceLocator" ref="bundleContextServiceLocator"/>
    </bean>
    <service ref="topologyService" interface="org.opennms.features.topology.api.TopologyService" />

    <!-- Listener to invalidate the Topology Service Cache -->
    <bean id="topologyEventListener"
          class="org.opennms.features.topology.app.internal.service.TopologyServiceEventListener"
          init-method="init" destroy-method="destroy">
        <argument ref="topologyService"/>
        <argument ref="eventIpcManager"/>
    </bean>

    <bean id="widgetManager" class="org.opennms.features.topology.api.WidgetManager" />

    <reference-list interface="org.opennms.features.topology.api.IViewContribution" availability="optional" filter="(location=bottom)">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="widgetManager"/>
    </reference-list>

    <service interface="org.osgi.service.cm.ManagedService" >
        <service-properties>
            <entry key="service.pid" value="org.opennms.features.topology.app.menu"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.menu.MenuConfigManagedService">
            <property name="operationManager" ref="operationManager"/>
        </bean>
    </service>
    
    <bean id="operationManager" class="org.opennms.features.topology.app.internal.menu.OperationManager" />

    <!-- Set up Layout Manager -->
    <bean id="layoutManager" class="org.opennms.features.topology.app.internal.support.LayoutManager">
        <argument ref="layoutDao"/>
        <argument ref="transactionOperations"/>
    </bean>

    <reference-list interface="org.opennms.features.topology.api.Operation" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="operationManager">
        </reference-listener>
    </reference-list>
    
    <reference-list interface="org.opennms.features.topology.api.CheckedOperation" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="operationManager">
        </reference-listener>
    </reference-list>

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Circle Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.CircleLayoutOperation"/>
    </service>


    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Hierarchy Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.HierarchyLayoutOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Grid Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.GridLayoutOperation"/>
    </service>

    <!--
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="FR Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.FRLayoutOperation"/>
    </service>
    -->

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="FR Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.TopoFRLayoutOperation"/>
    </service>

    <!-- D3 Layout-->
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="D3 Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.D3TopoLayoutOperation"/>
    </service>


    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Real Ultimate Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RealUltimateLayoutOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="ISOM Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.ISOMLayoutOperation"/>
    </service>
    
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="KK Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.KKLayoutOperation"/>
    </service>
    
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Manual Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.ManualLayoutOperation">
            <argument ref="layoutManager"/>
        </bean>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Refresh Now?group=additions"/>
            <entry key="operation.contextMenuLocation" value=""/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RedoLayoutOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.label" value="Clear Focus?group=additions"/>
            <entry key="operation.contextMenuLocation" value=""/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.ClearFocusOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.menuLocation" value="Device"/>
            <entry key="operation.label" value="Change Icon" />
            <entry key="operation.contextMenuLocation" value=""/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.icons.IconSelectionOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.menuLocation" value="Device"/>
            <entry key="operation.label" value="Reset Icon" />
            <entry key="operation.contextMenuLocation" value=""/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.icons.IconResetOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation">
        <service-properties>
            <entry key="operation.contextMenuLocation" value="" />
            <entry key="operation.label" value="Set As Focal Point" />
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.SetFocusVertexOperation" />
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Add To Focus"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.AddFocusVerticesOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Remove From Focus"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RemoveFocusVerticesOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.contextMenuLocation" value=""/>
            <entry key="operation.label" value="Remove All Others From Focus"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.RemoveFocusOtherVerticesOperation"/>
    </service>

    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Automatic Refresh?group=additions"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.AutoRefreshToggleOperation"/>
    </service>

    <!-- removed for SPC-247
    <service interface="org.opennms.features.topology.api.Operation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Show Map"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.ShowMapOperation"/>
    </service>
    -->
    
    <!-- removed for SPC-249
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="Edit|Layout"/>
            <entry key="operation.label" value="Simple Layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.SimpleLayoutOperation"/>
    </service>
    -->
    
    <service interface="org.opennms.features.topology.api.CheckedOperation" >
        <service-properties>
            <entry key="operation.menuLocation" value="View"/>
            <entry key="operation.label" value="Spring Layout?group=layout"/>
        </service-properties>
        <bean class="org.opennms.features.topology.app.internal.operations.SpringLayoutOperation"/>
    </service>
    
    <reference id="historyManager" interface="org.opennms.features.topology.api.HistoryManager" availability="mandatory">
    </reference>

	<bean id="topoMapsLink" class="org.opennms.features.topology.app.internal.TopoMapNavEntry">
		<property name="name" value="View in Topology" />
	</bean>

	<service id="nodeMapsLinkService" interface="org.opennms.web.navigate.ConditionalPageNavEntry" ref="topoMapsLink">
		<service-properties>
			<entry key="Page" value="node" />
			<entry key="registration.export" value="true" />
		</service-properties>
	</service>

    <!-- Info Items -->
    <service interface="org.opennms.features.topology.api.info.InfoPanelItemProvider">
        <bean class="org.opennms.features.topology.app.internal.ui.info.DefaultVertexInfoPanelItemProvider" />
    </service>
    <service interface="org.opennms.features.topology.api.info.InfoPanelItemProvider">
        <bean class="org.opennms.features.topology.app.internal.ui.info.NodeInfoPanelItemProvider" >
            <argument ref="nodeDao"/>
        </bean>
    </service>
    <service interface="org.opennms.features.topology.api.info.InfoPanelItemProvider">
        <bean class="org.opennms.features.topology.app.internal.ui.info.DefaultEdgeInfoPanelItemProvider" />
    </service>
    <service interface="org.opennms.features.topology.api.info.InfoPanelItemProvider">
        <bean class="org.opennms.features.topology.app.internal.info.GenericInfoPanelItemProvider">
            <argument ref="nodeDao" />
            <argument ref="measurementsService"/>
        </bean>
    </service>
    <service interface="org.opennms.features.topology.api.info.InfoPanelItemProvider">
        <bean class="org.opennms.features.topology.app.internal.info.LocationInfoPanelItemProvider">
            <argument ref="geolocationService" />
            <argument ref="geolocationConfiguration" />
        </bean>
    </service>
</blueprint>

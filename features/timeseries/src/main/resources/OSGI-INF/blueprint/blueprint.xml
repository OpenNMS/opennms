<blueprint
        xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
        xsi:schemaLocation="
        http://www.osgi.org/xmlns/blueprint/v1.0.0
        https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

        http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
        http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd
">
    <cm:property-placeholder id="timeseriesProperties" persistent-id="org.opennms.timeseries" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="ring_buffer_size" value="8192" /><!-- deprecated: use bufferSize instead -->
            <cm:property name="buffer_size" value="-1" />
            <cm:property name="writer_threads" value="16" />
            <cm:property name="buffer_type" value="RINGBUFFER" />
            <cm:property name="batch_size" value="8192" />
            <cm:property name="path" value="/tmp" />
            <cm:property name="max_file_size" value="-1" />

            <cm:property name="cache.timeseriesPersisterMetaTagCache.expireAfterRead" value="300" />
            <cm:property name="cache.timeseriesPersisterMetaTagCache.maximumSize" value="8192" />
            <cm:property name="cache.timeseriesPersisterMetaTagCache.recordStats" value="true" />

            <cm:property name="cache.timeseriesSearcherCache.expireAfterRead" value="300" />
            <cm:property name="cache.timeseriesSearcherCache.maximumSize" value="8192" />
            <cm:property name="cache.timeseriesSearcherCache.recordStats" value="true" />
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="ipInterfaceDao" interface="org.opennms.netmgt.dao.api.IpInterfaceDao" availability="mandatory"/>
    <reference id="nodeDao" interface="org.opennms.netmgt.dao.api.NodeDao" availability="mandatory"/>
    <reference id="monitoredServiceDao" interface="org.opennms.netmgt.dao.api.MonitoredServiceDao" availability="mandatory"/>
    <reference id="sessionUtils" interface="org.opennms.netmgt.dao.api.SessionUtils" availability="mandatory"/>
    <reference id="snmpInterfaceDao" interface="org.opennms.netmgt.dao.api.SnmpInterfaceDao" availability="mandatory"/>
    <reference id="secureCredentialsVault" interface="org.opennms.features.scv.api.SecureCredentialsVault" availability="mandatory"/>

    <!-- Metrics -->
    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry" />
    <service ref="metricRegistry" interface="com.codahale.metrics.MetricSet">
        <service-properties>
            <entry key="name" value="org.opennms.timeseries" />
            <entry key="description" value="Timeseries Integration Layer" />
        </service-properties>
    </service>

    <bean id="metricRegistryJmxReporterBuilder" class="com.codahale.metrics.jmx.JmxReporter" factory-method="forRegistry">
        <argument ref="metricRegistry"/>
    </bean>

    <bean id="metricRegistryDomainedJmxReporterBuilder" factory-ref="metricRegistryJmxReporterBuilder" factory-method="inDomain">
        <argument value="org.opennms.timeseries"/>
    </bean>

    <bean id="metricRegistryJmxReporter"
          factory-ref="metricRegistryDomainedJmxReporterBuilder"
          factory-method="build"
          init-method="start"
          destroy-method="stop" />

    <!-- CacheConfig -->
    <bean id="timeseriesPersisterMetaTagCache" class="org.opennms.core.cache.CacheConfig">
        <argument value="timeseriesPersisterMetaTagCache" />
        <property name="expireAfterRead" value="${cache.timeseriesPersisterMetaTagCache.expireAfterRead}" />
        <property name="maximumSize" value="${cache.timeseriesPersisterMetaTagCache.maximumSize}" />
        <property name="recordStats" value="${cache.timeseriesPersisterMetaTagCache.recordStats}" />
        <property name="metricRegistry" ref="metricRegistry" />
    </bean>
    <bean id="timeseriesSearcherCache" class="org.opennms.core.cache.CacheConfig">
        <argument index="0" value="timeseriesSearcherCache" />
        <property name="expireAfterRead" value="${cache.timeseriesSearcherCache.expireAfterRead}" />
        <property name="maximumSize" value="${cache.timeseriesSearcherCache.maximumSize}" />
        <property name="recordStats" value="${cache.timeseriesSearcherCache.recordStats}" />
        <property name="metricRegistry" ref="metricRegistry" />
    </bean>

    <!-- Beans -->
    <bean id="rpcTargetHelper" class="org.opennms.core.rpc.utils.RpcTargetHelper">
        <property name="nodeDao" ref="nodeDao"/>
    </bean>

    <bean id="entityScopeProvider" class="org.opennms.core.mate.model.EntityScopeProviderImpl">
        <property name="nodeDao" ref="nodeDao"/>
        <property name="ipInterfaceDao" ref="ipInterfaceDao"/>
        <property name="snmpInterfaceDao" ref="snmpInterfaceDao"/>
        <property name="monitoredServiceDao" ref="monitoredServiceDao"/>
        <property name="sessionUtils" ref="sessionUtils"/>
        <property name="scv" ref="secureCredentialsVault"/>
    </bean>
    <service interface="org.opennms.core.mate.api.EntityScopeProvider" ref="entityScopeProvider"/>

    <bean id="timeseriesStorageManager" class="org.opennms.netmgt.timeseries.TimeseriesStorageManagerImpl" />
    <reference-list interface="org.opennms.integration.api.v1.timeseries.TimeSeriesStorage" availability="optional">
        <reference-listener bind-method="onBind" unbind-method="onUnbind" ref="timeseriesStorageManager" />
    </reference-list>

    <service interface="org.opennms.netmgt.timeseries.TimeseriesStorageManager" ref="timeseriesStorageManager"/>

    <bean id="statisticsCollector" class="org.opennms.netmgt.timeseries.stats.StatisticsCollectorImpl">
        <argument value="${writer_threads}"/>
    </bean>
    <service interface="org.opennms.netmgt.timeseries.stats.StatisticsCollector" ref="statisticsCollector" />

    <bean id="metaTagDataLoader" class="org.opennms.netmgt.timeseries.samplewrite.MetaTagDataLoader">
        <argument ref="nodeDao"/>
        <argument ref="sessionUtils"/>
        <argument ref="entityScopeProvider"/>
    </bean>

    <bean id="timeseriesWriterConfig" class="org.opennms.netmgt.timeseries.samplewrite.TimeseriesWriterConfig">
        <property name="bufferSize" value="${buffer_size}" />
        <property name="numWriterThreads" value="${writer_threads}" />
        <property name="bufferType" value="${buffer_type}" />
        <property name="ringBufferSize" value="${ring_buffer_size}" />
        <property name="batchSize" value="${batch_size}" />
        <property name="path" value="${path}" />
        <property name="maxFileSize" value="${max_file_size}" />
    </bean>

    <bean id="timeseriesPersisterFactory" class="org.opennms.netmgt.timeseries.samplewrite.TimeseriesPersisterFactory" destroy-method="destroy">
        <argument ref="timeseriesStorageManager"/>
        <argument ref="statisticsCollector"/>
        <argument ref="metaTagDataLoader"/>
        <argument ref="timeseriesPersisterMetaTagCache"/>
        <argument ref="metricRegistry"/>
        <argument ref="timeseriesWriterConfig"/>
    </bean>

    <service interface="org.opennms.netmgt.collection.api.PersisterFactory" ref="timeseriesPersisterFactory">
        <service-properties>
            <entry key="strategy" value="integration">
            </entry>
            <entry key="registration.export" value="true">
            </entry>
        </service-properties>
    </service>

</blueprint>

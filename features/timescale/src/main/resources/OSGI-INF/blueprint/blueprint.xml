<blueprint
        xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
        xsi:schemaLocation="
        http://www.osgi.org/xmlns/blueprint/v1.0.0
        https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

        http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
        http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd
">

    <cm:property-placeholder id="newtsProperties" persistent-id="org.opennms.newts.config" placeholder-prefix="[[" placeholder-suffix="]]" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="resource_shard" value="604800" />
            <cm:property name="read_consistency" value="ONE" />
            <cm:property name="write_consistency" value="ANY" />
            <cm:property name="max_batch_size" value="16" />
            <cm:property name="ring_buffer_size" value="8192" />
            <cm:property name="writer_threads" value="16" />
            <cm:property name="keyspace" value="newts" />
            <cm:property name="hostname" value="localhost" />
            <cm:property name="port" value="9042" />
            <cm:property name="ssl" value="false" />
            <cm:property name="compression" value="NONE" />
            <cm:property name="username" value="cassandra" />
            <cm:property name="password" value="cassandra" />
            <cm:property name="ttl" value="31540000" />
            <cm:property name="cache.max_entries" value="8192" />
            <cm:property name="cache.redis_hostname" value="localhost" />
            <cm:property name="cache.redis_port" value="6379" />
            <cm:property name="cache.strategy" value="org.opennms.netmgt.timeseries.integration.support.GuavaSearchableResourceMetadataCache" />
            <cm:property name="cache.priming.disable" value="false" />
            <cm:property name="cache.priming.block_ms" value="120000" /> <!-- 2 minutes -->
            <cm:property name="cache.priming.fetch_size" value="10000" />
            <cm:property name="cache.priming.fetch_more_threshold" value="1000" />
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="cassandraIndexingOptions" class="org.opennms.netmgt.timeseries.integration.support.osgi.OsgiUtils" factory-method="createIndexOptions">
        <argument value="[[max_batch_size]]" />
    </bean>
    <bean id="defaultContext" class="org.opennms.netmgt.timeseries.integration.support.osgi.OsgiUtils" factory-method="createContext" />
    <bean id="contextConfigurations" class="org.opennms.netmgt.timeseries.integration.support.ContextConfigurationFactory" factory-method="getContextConfigurations" >
        <argument value="[[resource_shard]]" />
        <argument value="[[read_consistency]]" />
        <argument value="[[write_consistency]]" />
    </bean>

    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry" />

    <bean id="metricRegistryJmxReporterBuilder" class="com.codahale.metrics.JmxReporter" factory-method="forRegistry">
        <argument ref="metricRegistry"/>
    </bean>

    <bean id="metricRegistryDomainedJmxReporterBuilder" factory-ref="metricRegistryJmxReporterBuilder" factory-method="inDomain">
        <argument value="org.opennms.timescale"/>
    </bean>

    <bean id="metricRegistryJmxReporter"
          factory-ref="metricRegistryDomainedJmxReporterBuilder"
          factory-method="build"
          init-method="start"
          destroy-method="stop" />

    <bean id="resourceIdSplitter" class="org.opennms.newts.cassandra.search.EscapableResourceIdSplitter" />

    <bean id="cassandraSession" class="org.opennms.newts.cassandra.CassandraSessionImpl">
        <argument value="[[keyspace]]" />
        <argument value="[[hostname]]" />
        <argument value="[[port]]" />
        <argument value="[[compression]]" />
        <argument value="[[username]]" />
        <argument value="[[password]]" />
        <argument value="[[ssl]]" />
    </bean>
    <service ref="cassandraSession" interface="org.opennms.newts.cassandra.CassandraSession"/>

    <!-- Instantiate and advertise a copy of the Schema Manager from newts so it can be reused with the same
    settings -->
    <bean id="schemaManager" class="org.opennms.newts.cassandra.SchemaManager">
        <argument value="[[keyspace]]" />
        <argument value="[[hostname]]" />
        <argument value="[[port]]" />
        <argument value="[[username]]" />
        <argument value="[[password]]" />
        <argument value="[[ssl]]" />
    </bean>
    <bean id="schemaManagerProxy" class="org.opennms.netmgt.timeseries.integration.proxy.SchemaManagerProxyImpl">
        <argument ref="schemaManager"/>
    </bean>
    <service ref="schemaManagerProxy" interface="org.opennms.netmgt.timeseries.integration.proxy.SchemaManagerProxy"/>
    
    <bean id="cassandraSearcher" class="org.opennms.newts.cassandra.search.CassandraSearcher" >
        <argument ref="cassandraSession" />
        <argument ref="metricRegistry" />
        <argument ref="contextConfigurations" />
    </bean>

    <!-- Factories required for cache creation -->
    <bean id="redisCacheFactory" class="org.opennms.netmgt.timeseries.integration.support.osgi.RedisCacheFactory">
        <argument value="[[cache.redis_hostname]]" />
        <argument value="[[cache.redis_port]]" />
        <argument value="[[writer_threads]]" />
        <argument ref="metricRegistry" />
        <argument ref="resourceIdSplitter" />
    </bean>
    <bean id="guavaCacheFactory" class="org.opennms.netmgt.timeseries.integration.support.osgi.GuavaCacheFactory">
        <argument value="[[cache.max_entries]]" />
        <argument ref="metricRegistry" />
    </bean>
    <bean id="resourceMetadataCache" class="org.opennms.netmgt.timeseries.integration.support.osgi.OsgiUtils" factory-method="createCache" >
        <argument index="0" value="[[cache.strategy]]"/>
        <argument index="1">
            <list>
                <ref component-id="redisCacheFactory" />
                <ref component-id="guavaCacheFactory" />
            </list>
        </argument>
    </bean>

    <bean id="cachePrimer" class="org.opennms.netmgt.timeseries.integration.support.CachePrimer" init-method="afterPropertiesSet">
        <argument value="[[cache.priming.disable]]"/>
        <argument value="[[cache.priming.block_ms]]"/>
        <argument value="[[cache.priming.fetch_size]]"/>
        <argument value="[[cache.priming.fetch_more_threshold]]"/>
        <property name="session" ref="cassandraSession" />
        <property name="context" ref="defaultContext" />
        <property name="resourceMetadataCache" ref="resourceMetadataCache" />
    </bean>

    <bean id="cassandraIndexer" class="org.opennms.newts.cassandra.search.CassandraIndexer" >
        <argument ref="cassandraSession" />
        <argument value="[[ttl]]" />
        <argument ref="resourceMetadataCache" />
        <argument ref="metricRegistry" />
        <argument ref="cassandraIndexingOptions" />
        <argument ref="resourceIdSplitter" />
        <argument ref="contextConfigurations" />
    </bean>

    <bean id="cassandraIndexerSampleProcessor" class="org.opennms.newts.cassandra.search.CassandraIndexerSampleProcessor" >
        <argument ref="cassandraIndexer" />
    </bean>

    <bean id="sampleProcessors" class="com.google.common.collect.Sets" factory-method="newHashSet" >
        <argument>
            <list>
                <ref component-id="cassandraIndexerSampleProcessor" />
            </list>
        </argument>
    </bean>

    <bean id="sampleProcessorService" class="org.opennms.netmgt.timeseries.integration.support.SimpleSampleProcessorService" >
        <argument index="0" ref="sampleProcessors" />
    </bean>

    <bean id="cassandraSampleRepository" class="org.opennms.newts.persistence.cassandra.CassandraSampleRepository">
        <argument ref="cassandraSession" />
        <argument value="[[ttl]]" />
        <argument ref="metricRegistry" />
        <argument ref="sampleProcessorService" />
        <argument ref="contextConfigurations" />
    </bean>

    <bean id="newtsWriter" class="org.opennms.netmgt.timeseries.integration.TimescaleWriter" >
        <argument value="[[max_batch_size]]" />
        <argument value="[[ring_buffer_size]]" />
        <argument value="[[writer_threads]]" />
        <argument ref="metricRegistry" />
        <property name="sampleRepository" ref="cassandraSampleRepository" />
        <property name="indexer" ref="cassandraIndexer" />
    </bean>

    <bean id="resourceStorageDao" class="org.opennms.netmgt.dao.support.TimeseriesResourceStorageDao" >
        <property name="searchableCache" ref="resourceMetadataCache" />
        <property name="searcher" ref="cassandraSearcher" />
        <property name="context" ref="defaultContext" />
        <property name="newtsWriter" ref="newtsWriter" />
        <property name="indexer" ref="cassandraIndexer" />
        <property name="sampleRepository" ref="cassandraSampleRepository" />
    </bean>
    <service interface="org.opennms.netmgt.dao.api.ResourceStorageDao" ref="resourceStorageDao" />

    <bean id="timescalePersisterFactory" class="org.opennms.netmgt.collection.persistence.timeseries.TimeseriesPersisterFactory" >
        <argument ref="defaultContext"/>
        <argument ref="newtsWriter" />
    </bean>

    <service interface="org.opennms.netmgt.collection.api.PersisterFactory" ref="timescalePersisterFactory">
        <service-properties>
            <entry key="strategy" value="newts">
            </entry>
        </service-properties>
    </service>
</blueprint>

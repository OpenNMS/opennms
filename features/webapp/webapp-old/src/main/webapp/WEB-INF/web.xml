<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app id="opennms" version="2.4"
		 xmlns="http://java.sun.com/xml/ns/j2ee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <jsp-config>
    <jsp-property-group>
        <url-pattern>*.jsp</url-pattern>
        <page-encoding>UTF-8</page-encoding>
    </jsp-property-group>
  </jsp-config>
		 
  <display-name>opennms</display-name>

  <!-- Uncomment this to set the webapp timeout to infinite.
  <session-config>
    <session-timeout>-1</session-timeout>
  </session-config>
  -->
  
  <context-param>
    <param-name>dontBlameOpenNMS</param-name>
    <param-value>false</param-value>
  </context-param>
  
  <!--  This is used by the Spring Log4jConfigListener <listener> below -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>/WEB-INF/log4j.properties</param-value>
  </context-param>

  <!--  This is used by the Spring ContextLoaderListener <listener> below -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
        /WEB-INF/applicationContext-common.xml
        classpath:/org/opennms/web/svclayer/applicationContext-svclayer.xml
        classpath:/META-INF/opennms/applicationContext-reporting.xml
        /WEB-INF/applicationContext-spring-security.xml
        /WEB-INF/applicationContext-jersey.xml
    </param-value>
  </context-param>
  
  <context-param>
    <param-name>parentContextKey</param-name>
    <param-value>daoContext</param-value>
  </context-param>
  
  <!-- RTC Subscription parameters -->  
  <!--
     *** RTC Subscription parameters have been moved ***
     - If you're using the standalone webapp, see: see WEB-INF/configuration.properties
     - If you're using the embedded jetty webapp, see: see $OPENNMS_HOME/etc/opennms.properties
  -->
  <!--
  <context-param>
    <description>The username the RTC uses when authenticating itself in an HTTP POST.</description>
    <param-name>opennms.rtc-client.http-post.username</param-name>
    <param-value>rtc</param-value>
  </context-param>
  <context-param>
    <description>The password the RTC uses when authenticating itself in an HTTP POST.</description>
    <param-name>opennms.rtc-client.http-post.password</param-name>
    <param-value>rtc</param-value>
  </context-param>
  <context-param>
    <description>The hostname/IP address of the RTCd host for sending subscribe event.</description>
    <param-name>opennms.rtc.event.proxy.host</param-name>
    <param-value>127.0.0.1</param-value>
  </context-param>
  <context-param>
    <description>The port of the RTCd host for sending subscribe event (Requires host to be configured).</description>
    <param-name>opennms.rtc.event.proxy.port</param-name>
    <param-value>5817</param-value>
  </context-param>
  <context-param>
    <description>
      The base of a URL that RTC clients use when creating a RTC subscription URL. IMPORTANT: This URL must NOT contain a slash at the end.
    </description>
    <param-name>opennms.rtc-client.http-post.base-url</param-name>
    <param-value>http://localhost:8080/opennms/rtc/post</param-value>
  </context-param>
  -->

<!-- Map System Subscription parameters -->  
  <!--
     *** Map System Subscription parameters have been moved ***
     - If you're using the standalone webapp, see: see WEB-INF/configuration.properties
     - If you're using the embedded jetty webapp, see: see $OPENNMS_HOME/etc/opennms.properties
  -->

  <!--
  <context-param>
    <description>The username the Map System uses when authenticating itself in an HTTP POST.</description>
    <param-name>opennms.map-client.http-post.username</param-name>
    <param-value>map</param-value>
  </context-param>
  <context-param>
    <description>The password the Map System uses when authenticating itself in an HTTP POST.</description>
    <param-name>opennms.map-client.http-post.password</param-name>
    <param-value>map</param-value>
  </context-param>
  <context-param>
    <description>
      The base of a URL that Map System clients use when creating a Map subscription URL. IMPORTANT: This URL must NOT contain a slash at the end.
    </description>
    <param-name>opennms.map-client.http-post.url</param-name>
    <param-value>http://localhost:8080/opennms/map/post</param-value>
  </context-param>
  -->

	<filter>
	  <!--  note the name of this filter is important and is used in the app contexts -->
	  <filter-name>springSecurityFilterChain</filter-name>
	  <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

  <filter>
    <description>Adds the refresh HTTP header to a servlet's or JSP's output so it will be automatically reloaded.</description>
    <filter-name>AddRefreshHeader-300</filter-name>
    <filter-class>org.opennms.web.AddRefreshHeaderFilter</filter-class>
    <init-param>
      <description>This parameter specifies how often to refresh the page.</description>
      <param-name>seconds</param-name>
      <param-value>300</param-value>
    </init-param>
  </filter>

  <filter>
    <description>Adds the refresh HTTP header to a servlet's or JSP's output so it will be automatically reloaded.</description>
    <filter-name>AddRefreshHeader-120</filter-name>
    <filter-class>org.opennms.web.AddRefreshHeaderFilter</filter-class>
    <init-param>
      <description>This parameter specifies how often to refresh the page.</description>
      <param-name>seconds</param-name>
      <param-value>120</param-value>
    </init-param>
  </filter>
  
  <filter>
    <description>Adds the refresh HTTP header to a servlet's or JSP's output so it will be automatically reloaded.</description>
    <filter-name>AddRefreshHeader-30</filter-name>
    <filter-class>org.opennms.web.AddRefreshHeaderFilter</filter-class>
    <init-param>
      <description>This parameter specifies how often to refresh the page.</description>
      <param-name>seconds</param-name>
      <param-value>30</param-value>
    </init-param>
  </filter>

  
  <filter>
    <description>Stores HTTP request parameters in request attributes for later access</description>
    <filter-name>StoreRequestProperties</filter-name>
    <filter-class>org.opennms.web.StoreRequestPropertiesFilter</filter-class>
    <init-param>
      <description>Into which request attribute the value of HttpServletRequest.getServletPath() is stored</description>
      <param-name>relativeServletPathAttribute</param-name>
      <param-value>relativeRequestPath</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>openSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
  </filter>
  
  <filter>
    <filter-name>eXtremeExport</filter-name>
    <filter-class>org.extremecomponents.table.filter.ExportFilter</filter-class>
  </filter>
  
  <filter-mapping>
    <filter-name>openSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>StoreRequestProperties</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/index.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/rtc/category.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/node.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/linkednode.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/interface.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/element/service.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/outage/list.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/graph/results.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-300</filter-name>
    <url-pattern>/KSC/customView.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-120</filter-name>
    <url-pattern>/event/list</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-30</filter-name>
    <url-pattern>/alarm/list.htm</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>AddRefreshHeader-30</filter-name>
    <url-pattern>/alarm/detail.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>eXtremeExport</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <listener>
    <!-- This listener handles our custom startup/shutdown behavior. -->
    <listener-class>org.opennms.web.InitializerServletContextListener</listener-class>
  </listener>

  <!--
    Log4jConfigListener must come after InitializerServletContextListener
    because the opennms.webapplogs.dir system property used in log4j.properties
    is set by InitializerServletContextListener.

    However, putting this after InitializerServletContextListener means you
    won't see any of the log messages generated in contextInitialized() in
    InitializerServletContextListener.

    So, if you're getting a 'SEVERE: Error listenerStart' or similar error from
    Tomcat, and the OpenNMS webapp logs don't appear to contain any errors, try
    manually replacing ${opennms.webapplogs.dir} in log4j.properties, and moving
    this listener above InitializerServletContextListener, so you can see the
    messages generated by InitializerServletContextListener.
  -->
  <listener>
    <listener-class>org.opennms.web.Log4jConfigListener</listener-class>
  </listener>

  <listener>
    <!-- This listener handles our custom startup/shutdown behavior. -->
    <listener-class>org.opennms.web.DependencyCheckingContextListener</listener-class>
  </listener>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!--  RESTful Web Services -->
  <servlet>
    <servlet-name>opennmsRestWebServices</servlet-name>
    <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
    <init-param>
      <param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
      <param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
    </init-param>
    <init-param>
      <param-name>com.sun.jersey.config.property.packages</param-name>
      <param-value>org.opennms.web.rest</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!--  servlet that gwt rpc requests get mapped to -->
   <servlet>
     <servlet-name>gwtDispatcher</servlet-name>
     <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
     <load-on-startup>1</load-on-startup>
   </servlet>

  <!--  servlet that map requests get mapped to -->
   <servlet>
     <servlet-name>mapDispatcher</servlet-name>
     <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
     <load-on-startup>2</load-on-startup>
   </servlet>
   
   <!--  servlet that map requests get mapped to -->
   <servlet>
     <servlet-name>availabilityDispatcher</servlet-name>
     <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
     <load-on-startup>1</load-on-startup>
   </servlet>

   <!-- WebStart servlet -->
   <servlet>
      <servlet-name>JnlpDownloadServlet</servlet-name>
      <servlet-class>jnlp.sample.servlet.JnlpDownloadServlet</servlet-class>
   </servlet>

  <servlet>
    <!-- This servlet creates availability reports. -->
    <servlet-name>availabilityXml</servlet-name>
    <servlet-class>org.opennms.web.availability.raw.RawAvailabilityServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- This servlet creates availability reports. -->
    <servlet-name>availability</servlet-name>
    <servlet-class>org.opennms.web.availability.AvailabilityServlet</servlet-class>
    <init-param>
      <param-name>report.logo</param-name>
      <param-value>/images/logo.gif</param-value>
    </init-param>
    <init-param>
      <param-name>xslt.filename</param-name>
      <param-value>etc/AvailabilityReports.xsl</param-value>
    </init-param>
    <init-param>
      <param-name>pdf.xslt.filename</param-name>
      <param-value>etc/PDFAvailReport.xsl</param-value>
    </init-param>
    <init-param>
      <param-name>svg.xslt.filename</param-name>
      <param-value>etc/SVGAvailReport.xsl</param-value>
    </init-param>
    <init-param>
      <description>Redirect to this sibling URL on success.</description>
      <param-name>redirect.success</param-name>
      <param-value>reportgenerating.jsp</param-value>
    </init-param>
    <init-param>
      <description>Redirect to this sibling URL on failure.</description>
      <param-name>redirect.failure</param-name>
      <param-value>reportfailed.jsp</param-value>
    </init-param>
    <init-param>
      <description>Redirect to this sibling URL if the user doesn't have an email address setup.</description>
      <param-name>redirect.noEmail</param-name>
      <param-value>noemail.jsp</param-value>
    </init-param>
    <init-param>
      <description>Use this script to generate an Availability report on the command line.</description>
      <param-name>script.generateReport</param-name>
      <param-value>${opennms.bin.dir}/report.sh</param-value>
    </init-param>
    <init-param>
      <description>Use this script to mail a file to a user from the command line.</description>
      <param-name>script.mailReport</param-name>
      <param-value>${opennms.bin.dir}/webreport.pl</param-value>
    </init-param>
    <init-param>
      <description>Set this to false to use the JavaMailer class instead of the script set in script.mailReport.</description>
      <param-name>script.useScript</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  
  <!-- Servlet for modify Discovery configuration service -->
  <servlet>
    <servlet-name>actionDiscovery</servlet-name>
    <servlet-class>org.opennms.web.admin.discovery.ActionDiscoveryServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>modifyDiscoveryConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.discovery.ModifyDiscoveryConfigurationServlet</servlet-class>
  </servlet>  
  
  <servlet>
    <servlet-name>importAssets</servlet-name>
    <servlet-class>org.opennms.web.asset.ImportAssetsServlet</servlet-class>
    <init-param>
      <description>Redirect to this sibling URL on success.</description>
      <param-name>redirect.success</param-name>
      <param-value>../../asset/nodelist.jsp?column=address1&amp;searchvalue=</param-value>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>exportAssets</servlet-name>
    <servlet-class>org.opennms.web.asset.ExportAssetsServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>modifyAsset</servlet-name>
    <servlet-class>org.opennms.web.asset.ModifyAssetServlet</servlet-class>
    <init-param>
      <description>Redirect to this sibling URL on success.</description>
      <param-name>redirect.success</param-name>
      <param-value>list</param-value>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>queryEvent</servlet-name>
    <servlet-class>org.opennms.web.event.EventQueryServlet</servlet-class>
    <init-param>
      <description>Redirect to this sibling URL after changing the parameter set.</description>
      <param-name>redirect.url</param-name>
      <param-value>list</param-value>
    </init-param>    
  </servlet>
  <servlet>
    <servlet-name>queryAlarm</servlet-name>
    <servlet-class>org.opennms.web.alarm.AlarmQueryServlet</servlet-class>
    <init-param>
      <description>Redirect to this sibling URL after changing the parameter set.</description>
      <param-name>redirect.url</param-name>
      <param-value>list.htm</param-value>
    </init-param>    
  </servlet>
  <servlet>
    <servlet-name>filterVulnerability</servlet-name>
    <servlet-class>org.opennms.web.vulnerability.VulnerabilityFilterServlet</servlet-class>
  </servlet>  
  
  
  <!-- Servlet for updating the notification status -->
  <servlet>
    <servlet-name>updateNotificationStatus</servlet-name>
    <servlet-class>org.opennms.web.admin.notification.UpdateNotifdStatusServlet</servlet-class>
  </servlet>
  
  <!-- Servlet for building destination paths from a wizard -->
  <servlet>
    <servlet-name>destinationWizard</servlet-name>
    <servlet-class>org.opennms.web.admin.notification.DestinationWizardServlet</servlet-class>
  </servlet>
  
  <!-- Servlet for building notifications from a wizard -->
  <servlet>
    <servlet-name>notificationWizard</servlet-name>
    <servlet-class>org.opennms.web.admin.notification.noticeWizard.NotificationWizardServlet</servlet-class>
  </servlet>
  
  <!-- Servlets for configuration of users groups and views -->
  <servlet>
    <!-- servlet for passing parameters to the user modify jsp -->
    <servlet-name>modifyUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.ModifyUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating the local user info during modification-->
    <servlet-name>updateUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.UpdateUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving the local user info during modification-->
    <servlet-name>saveUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.SaveUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for renaming the local user info during modification-->
    <servlet-name>renameUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.RenameUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new user-->
    <servlet-name>addNewUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.AddNewUserServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting a user-->
    <servlet-name>deleteUser</servlet-name>
    <servlet-class>org.opennms.web.admin.users.DeleteUserServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for adding duty schedules to a user's notification info-->
    <servlet-name>addDutySchedules</servlet-name>
    <servlet-class>org.opennms.web.admin.users.AddDutySchedulesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for removing duty schedules from a user's notification info-->
    <servlet-name>removeDutySchedules</servlet-name>
    <servlet-class>org.opennms.web.admin.users.RemoveDutySchedulesServlet</servlet-class>
  </servlet>
  
  <servlet>
  	<servlet-name>admin-roles</servlet-name>
  	<servlet-class>org.opennms.web.admin.roles.AdminRoleServlet</servlet-class>
  </servlet>
  
  <servlet>
  	<servlet-name>user-roles</servlet-name>
  	<servlet-class>org.opennms.web.admin.roles.UserRoleServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for passing parameters to the view modify jsp -->
    <servlet-name>modifyView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.ModifyViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for updating the local view info during modification-->
    <servlet-name>updateView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.UpdateViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for saving the local view info during modification-->
    <servlet-name>saveView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.SaveViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for renaming the local view info during modification-->
    <servlet-name>renameView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.RenameViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new view-->
    <servlet-name>addNewView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.AddNewViewServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting a view-->
    <servlet-name>deleteView</servlet-name>
    <servlet-class>org.opennms.web.admin.views.DeleteViewServlet</servlet-class>
  </servlet>


<!-- Servlets for user account self-service -->
  <!-- servlet for self-service password change entry point-->
  <servlet>
    <servlet-name>newPasswordEntry</servlet-name>
    <servlet-class>org.opennms.web.account.selfService.NewPasswordEntryServlet</servlet-class>
  </servlet>
   <!-- servlet for self-service password change action -->
  <servlet>   
    <servlet-name>newPasswordAction</servlet-name>
    <servlet-class>org.opennms.web.account.selfService.NewPasswordActionServlet</servlet-class>
  </servlet>
  
  <!-- Servlet mappings for user account self-service -->
  <servlet-mapping>
    <servlet-name>newPasswordEntry</servlet-name>
    <url-pattern>/account/selfService/newPasswordEntry</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>newPasswordAction</servlet-name>
    <url-pattern>/account/selfService/newPasswordAction</url-pattern>
  </servlet-mapping>
  
  <!-- Servlet mappings for REST Services -->
  <servlet-mapping>
    <servlet-name>opennmsRestWebServices</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <servlet-name>nodeLabelChange</servlet-name>
    <servlet-class>org.opennms.web.nodelabel.NodeLabelChangeServlet</servlet-class>
  </servlet>

  <servlet>
    <!-- servlet for setting critical path -->
    <servlet-name>setCriticalPath</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SetCriticalPathServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing node information -->
    <servlet-name>deleteSelNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.DeleteNodesServlet</servlet-class>
  </servlet>
  <servlet>
     <servlet-name>deleteInterface</servlet-name>
     <servlet-class>org.opennms.web.admin.nodeManagement.DeleteInterfaceServlet</servlet-class>
  </servlet>
  <servlet>
     <servlet-name>deleteService</servlet-name>
     <servlet-class>org.opennms.web.admin.nodeManagement.DeleteServiceServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing interfaces and services on a node -->
    <servlet-name>getInterfaces</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.GetInterfacesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for adding a new interface -->
    <servlet-name>addNewInterface</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.AddNewInterfaceServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for deleting nodes -->
    <servlet-name>deleteNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.DeleteGetNodesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing SNMP node information -->
    <servlet-name>snmpGetNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SnmpGetNodesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing SNMP interface information -->
    <servlet-name>snmpGetInterfaces</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SnmpGetInterfacesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for grabbing node, interface and service information -->
    <servlet-name>getNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.GetNodesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for managing and unmanaging interfaces and services -->
    <servlet-name>manageNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.ManageNodesServlet</servlet-class>
  </servlet>
  <servlet>
     <!-- servlet for managing/unmanaging interfaces and services for a single node -->
     <servlet-name>manageNode</servlet-name>
     <servlet-class>org.opennms.web.admin.nodeManagement.ManageNodeServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for managing and unmanaging interfaces and services -->
    <servlet-name>snmpManageNodes</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SnmpManageNodesServlet</servlet-class>
  </servlet>
  <servlet>
    <!-- servlet for configuring SNMP parameters -->
    <servlet-name>snmpConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.nodeManagement.SnmpConfigServlet</servlet-class>
  </servlet>
  
  <!-- servlets for editing the poller configuration files -->
  <servlet>
    <servlet-name>pollerConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.pollerConfig.PollerConfigServlet</servlet-class>
    <init-param>
      <description>Redirect to this sibling URL on success.</description>
      <param-name>redirect.success</param-name>
      <param-value>finishPollerConfig.jsp</param-value>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>finishPollerConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.pollerConfig.FinishPollerConfigServlet</servlet-class>
  </servlet>
  
  <servlet>
    <!-- servlet for managing and unmanaging interfaces and services -->
    <servlet-name>addPollerConfig</servlet-name>
    <servlet-class>org.opennms.web.admin.pollerConfig.AddPollerConfigServlet</servlet-class>
    <init-param>
      <description>Redirect to this sibling URL on success.</description>
      <param-name>redirect.success</param-name>
      <param-value>index.jsp</param-value>
    </init-param>
  </servlet>

  <!--servlet for updating the notify flag in the ifservices table -->
  <servlet>
        <servlet-name>updateServiceNotify</servlet-name>
        <servlet-class>org.opennms.web.admin.notification.ServiceNoticeUpdateServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>rtcPost</servlet-name>
    <servlet-class>org.opennms.web.category.RTCPostServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>rtcRaw</servlet-name>
    <servlet-class>org.opennms.web.category.RTCDebugServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>sendMail</servlet-name>
    <servlet-class>org.opennms.web.mail.MailerServlet</servlet-class>
    <init-param>
      <description>Redirect to this sibling URL on success.</description>
      <param-name>redirect.success</param-name>
      <param-value>../help/index.jsp</param-value>
    </init-param>
    <init-param>
      <description>Redirect to this sibling URL on success.</description>
      <param-name>mail.program</param-name>
      <param-value>/bin/mail</param-value>
    </init-param>    
  </servlet>

  <servlet>
    <servlet-name>nodeRescan</servlet-name>
    <servlet-class>org.opennms.web.element.NodeRescanServlet</servlet-class>
  </servlet>

  <!-- Servlet to set snmp interface up or down -->
  <servlet>
     <servlet-name>ManageSnmpIntf</servlet-name>
    <servlet-class>org.opennms.web.element.ManageSnmpIntfServlet</servlet-class>
  </servlet>

  <!--
  <servlet>
    <servlet-name>filterOutage</servlet-name>
    <servlet-class>org.opennms.web.outage.OutageFilterServlet</servlet-class>
  </servlet>
  -->

  <!-- servlet>
    <servlet-name>invClogin</servlet-name>
    <servlet-class>org.opennms.web.inventory.InvCloginServlet</servlet-class>
  </servlet-->
  
  <servlet>
  	<servlet-name>scheduleEditor</servlet-name>
  	<servlet-class>org.opennms.web.admin.schedule.ScheduleEditorServlet</servlet-class>
  </servlet>
  
  <servlet>
  	<servlet-name>purdyChart</servlet-name>
  	<servlet-class>org.opennms.web.graph.PurdyChartServlet</servlet-class>
  	<init-param>
  		<param-name>chart-name</param-name>
  		<param-value>sample-bar-chart</param-value>
  	</init-param>
  </servlet>

 
  <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
  </servlet>

 <!-- WebStart Servlet mapping -->
     <servlet-mapping>
        <servlet-name>JnlpDownloadServlet</servlet-name>
        <url-pattern>/webstart/*</url-pattern>
     </servlet-mapping>

  <!-- desktop graph servlet mapping -->
  <!-- desktop survey report servlet mapping -->  
  
  <servlet-mapping>
  	<servlet-name>purdyChart</servlet-name>
  	<url-pattern>/charts</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
  	<servlet-name>scheduleEditor</servlet-name>
  	<url-pattern>/admin/schedule/schedule-editor</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>availabilityXml</servlet-name>
    <url-pattern>/availability/availabilityRaw</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>availability</servlet-name>
    <url-pattern>/availability/availability</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>queryEvent</servlet-name>
    <url-pattern>/event/query</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>queryAlarm</servlet-name>
    <url-pattern>/alarm/query</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>filterVulnerability</servlet-name>
    <url-pattern>/vulnerability/list</url-pattern>
  </servlet-mapping>    
  
  <!--servlet mapping for update notification status servlet -->
  <servlet-mapping>
    <servlet-name>updateNotificationStatus</servlet-name>
    <url-pattern>/admin/updateNotificationStatus</url-pattern>
  </servlet-mapping>
  
  <!-- servlet mapping for the destination wizard servlet -->
  <servlet-mapping>
    <servlet-name>destinationWizard</servlet-name>
    <url-pattern>/admin/notification/destinationWizard</url-pattern>
  </servlet-mapping>
  
  <!-- servlet mapping for the notification wizard servlet -->
  <servlet-mapping>
    <servlet-name>notificationWizard</servlet-name>
    <url-pattern>/admin/notification/noticeWizard/notificationWizard</url-pattern>
  </servlet-mapping>
    
  <!-- servlet mapping for configuring users groups and views -->
  <!-- user configuration servlets -->
  <!-- converted to Controller -->
  <servlet-mapping>
    <servlet-name>modifyUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/modifyUser</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>updateUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/updateUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/saveUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>renameUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/renameUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addNewUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/addNewUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteUser</servlet-name>
    <url-pattern>/admin/userGroupView/users/deleteUser</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addDutySchedules</servlet-name>
    <url-pattern>/admin/userGroupView/users/addDutySchedules</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>removeDutySchedules</servlet-name>
    <url-pattern>/admin/userGroupView/users/removeDutySchedules</url-pattern>
  </servlet-mapping>
  <!-- end of user configuration servlets -->
  
  <!-- group configuration servlets -->
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/admin/userGroupView/groups/modifyGroup</url-pattern>
  </servlet-mapping>
  <!-- end of group configuration servlets -->
  
  <servlet-mapping>
    <servlet-name>admin-roles</servlet-name>
    <url-pattern>/admin/userGroupView/roles</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>user-roles</servlet-name>
    <url-pattern>/roles</url-pattern>
  </servlet-mapping>

  <!-- view configuration servlets -->
  <servlet-mapping>
    <servlet-name>modifyView</servlet-name>
    <url-pattern>/admin/userGroupView/views/modifyView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>updateView</servlet-name>
    <url-pattern>/admin/userGroupView/views/updateView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>saveView</servlet-name>
    <url-pattern>/admin/userGroupView/views/saveView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>renameView</servlet-name>
    <url-pattern>/admin/userGroupView/views/renameView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addNewView</servlet-name>
    <url-pattern>/admin/userGroupView/views/addNewView</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteView</servlet-name>
    <url-pattern>/admin/userGroupView/views/deleteView</url-pattern>
  </servlet-mapping>
  <!-- end of group configuration servlets -->
  
  <!-- end of user groups and views configuration servlets -->

  <servlet-mapping>
    <servlet-name>nodeLabelChange</servlet-name>
    <url-pattern>/admin/nodeLabelChange</url-pattern>
  </servlet-mapping>
  
    <!--servlet mapping for restart discovery servlet-->
  <servlet-mapping>
    <servlet-name>actionDiscovery</servlet-name>
    <url-pattern>/admin/discovery/actionDiscovery</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>modifyDiscoveryConfig</servlet-name>
    <url-pattern>/admin/discovery/modifyDiscoveryConfig</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>modifyAsset</servlet-name>
    <url-pattern>/asset/modifyAsset</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>importAssets</servlet-name>
    <url-pattern>/admin/asset/import/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>exportAssets</servlet-name>
    <url-pattern>/admin/asset/assets.csv</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>getInterfaces</servlet-name>
    <url-pattern>/admin/nodemanagement/getInterfaces</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addNewInterface</servlet-name>
    <url-pattern>/admin/addNewInterface</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>setCriticalPath</servlet-name>
    <url-pattern>/admin/setCriticalPath</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteSelNodes</servlet-name>
    <url-pattern>/admin/deleteSelNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>deleteNodes</servlet-name>
    <url-pattern>/admin/deleteNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
     <servlet-name>deleteInterface</servlet-name>
     <url-pattern>/admin/deleteInterface</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  	<servlet-name>deleteService</servlet-name>
  	<url-pattern>/admin/deleteService</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpGetNodes</servlet-name>
    <url-pattern>/admin/snmpGetNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpGetInterfaces</servlet-name>
    <url-pattern>/admin/snmpGetInterfaces</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>getNodes</servlet-name>
    <url-pattern>/admin/getNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>manageNodes</servlet-name>
    <url-pattern>/admin/manageNodes</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
     <servlet-name>manageNode</servlet-name>
     <url-pattern>/admin/manageNode</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpManageNodes</servlet-name>
    <url-pattern>/admin/changeCollectStatus</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>snmpConfig</servlet-name>
    <url-pattern>/admin/snmpConfig</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>pollerConfig</servlet-name>
    <url-pattern>/admin/pollerConfig/pollerConfig</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>finishPollerConfig</servlet-name>
    <url-pattern>/admin/pollerConfig/finishPollerConfig</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>addPollerConfig</servlet-name>
    <url-pattern>/admin/pollerConfig/addPollerConfig</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
        <servlet-name>updateServiceNotify</servlet-name>
        <url-pattern>/admin/updateServiceNotify</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>rtcPost</servlet-name>
    <url-pattern>/rtc/post/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>rtcRaw</servlet-name>
    <url-pattern>/rtc/raw</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sendMail</servlet-name>
    <url-pattern>/mail/send</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>nodeRescan</servlet-name>
    <url-pattern>/element/rescan</url-pattern>
  </servlet-mapping>
  
   <servlet-mapping>
    <servlet-name>ManageSnmpIntf</servlet-name>
    <url-pattern>/element/ManageSnmpIntf</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>gwtDispatcher</servlet-name>
    <url-pattern>*.gwt</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>mapDispatcher</servlet-name>
    <url-pattern>*.map</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>availabilityDispatcher</servlet-name>
    <url-pattern>/report/availability/view/*</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>*.htm</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/alarm/acknowledge</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/alarm/acknowledgeByFilter</url-pattern>
  </servlet-mapping>  
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/alarm/changeSeverity</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/event/acknowledge</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/event/acknowledgeByFilter</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/event/list</url-pattern>
  </servlet-mapping>    
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/event/detail.jsp</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/notification/browse</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/notification/acknowledge</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/outage/list</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/outage/detail.jsp</url-pattern>
  </servlet-mapping>

  <!-- Although this will be matched by the above *.htm url-pattern,
       this servlet-mapping needs to be here because wildcard url-pattern
       elements don't seem to work as a welcome-page entry. -->
  <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/frontPage.htm</url-pattern>
  </servlet-mapping>
    
  <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/graph/graph.png</url-pattern>
  </servlet-mapping>

  <error-page>
    <exception-type>org.opennms.web.category.CategoryNotFoundException</exception-type>
    <location>/errors/categorynotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.MissingParameterException</exception-type>
    <location>/errors/missingparam.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.event.EventIdNotFoundException</exception-type>
    <location>/errors/eventidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.alarm.AlarmIdNotFoundException</exception-type>
    <location>/errors/alarmidnotfound.jsp</location>
  </error-page>
    <error-page>
    <exception-type>org.opennms.web.element.ElementIdNotFoundException</exception-type>
    <location>/errors/elementidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.notification.NoticeIdNotFoundException</exception-type>
    <location>/errors/noticeidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.outage.OutageIdNotFoundException</exception-type>
    <location>/errors/outageidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>java.lang.SecurityException</exception-type>
    <location>/errors/sealingviolation.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.controller.statisticsReports.StatisticsReportIdNotFoundException</exception-type>
    <location>/errors/statisticsreportidnotfound.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.opennms.web.vulnerability.VulnerabilityIdNotFoundException</exception-type>
    <location>/errors/vulnerabilityidnotfound.jsp</location>
  </error-page>  
  <error-page>
    <exception-type>org.opennms.netmgt.model.events.EventProxyException</exception-type>
    <location>/errors/eventproxyexception.jsp</location>
  </error-page>  
  <error-page>
    <exception-type>org.opennms.web.admin.nodeManagement.NoManagedInterfacesException</exception-type>
    <location>/errors/nomanagedinterfaces.jsp</location>
  </error-page>
  <error-page>
    <exception-type>java.lang.Throwable</exception-type>
    <location>/errors/unknownexception.jsp</location>
  </error-page>  
  
  <!-- the welcome-file elements need to point at a file that exists or
       a non-wildcard url-pattern in a servlet-mapping element. -->
  <welcome-file-list>
    <welcome-file>frontPage.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>


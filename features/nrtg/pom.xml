<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.opennms</groupId>
    <artifactId>org.opennms.features</artifactId>
    <version>22.0.0-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.opennms.features</groupId>
  <artifactId>nrtg</artifactId>
  <packaging>pom</packaging>
  <name>OpenNMS :: Features :: NRTG</name>
  <description>
    Near Real Time Graphing (NRTG) is the main module which contains the
    parts of the NRTG project. NRTG is a distributable scalable system to
    perform performance data collection. The meaning of near real time
    means it is just a polling for performance metrics in inverval of
    seconds instead of minutes. It is displayed in the OpenNMS web
    application and used to help to diagnose problems. To run this project
    a running JMS/AMPQ message broker is required on localhost. The
    recommended system is version 5.6 of ActiveMQ.
  </description>
  <properties>
    <jdkLevel>1.6</jdkLevel>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <cglib.version>2.2.2</cglib.version>
    <flexjson.version>2.0</flexjson.version>
  </properties>
  <modules>
    <module>system-exports</module>
    <module>commander</module>
    <module>api</module>
    <module>broker</module>
    <module>nrtbroker-jms</module>
    <module>nrtbroker-local</module>
    <module>nrtcollector</module>
    <module>protocolcollector</module>
    <module>web</module>
    <module>features</module>
    <module>jar</module>
  </modules>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${bundle.symbolicName}</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>
            <!-- assume public classes are in the top package, and private classes are under ".internal" -->
            <Export-Package>!${bundle.namespace}.standalone.*,!${bundle.namespace}.internal.*,${bundle.namespace}.*;version="${project.version}"</Export-Package>
            <Private-Package>${bundle.namespace}.internal.*</Private-Package>
            <!-- | each module can override these defaults in their osgi.bnd file -->
            <_include>-osgi.bnd</_include>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
            <Bundle-Activator>${bundle.activator}</Bundle-Activator>
          </instructions>
        </configuration>
        <extensions>true</extensions>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>net.sf.flexjson</groupId>
        <artifactId>flexjson</artifactId>
        <version>${flexjson.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.opennms.features.nrtg</groupId>
    <artifactId>features</artifactId>
    <version>22.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opennms.osgi.features.nrtg</groupId>
  <artifactId>osgi-nrtg-commander</artifactId>
  <name>OpenNMS :: Features :: NRTG :: Features :: Commander</name>
  <description>
    The Commander is a dummy implementation to generate CollectionJobs and
    publish them via JMS-Queues. It's able to run in parallel and in
    multiple instances. A appropriate implementation would be a schedule
    based system. That interpretes the datacollection configuration and
    generates corresponding CollectionJobs. The CollectionJobs would be
    published in the same way this dummy implementation does.
  </description>
  <packaging>pom</packaging>
  <build>
    <plugins>
      <plugin>
        <groupId>org.opennms.maven.plugins</groupId>
        <artifactId>features-maven-plugin</artifactId>
        <configuration>
          <repositories>
            <repository>mvn:org.opennms.osgi.features.nrtg/osgi-nrtg-api/${project.version}/xml/features</repository>
            <repository>mvn:org.opennms.osgi.features.nrtg/osgi-nrtg-broker/${project.version}/xml/features</repository>
          </repositories>
          <features>
            <feature>osgi-nrtg-api</feature>
            <feature>osgi-nrtg-broker</feature>
            <feature>spring-jms/${springVersion}</feature>
            <feature>spring/${springVersion}</feature>
          </features>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>

    <dependency>
      <groupId>org.opennms.osgi.features.nrtg</groupId>
      <artifactId>osgi-nrtg-api</artifactId>
      <version>${project.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.opennms.osgi.features.nrtg</groupId>
      <artifactId>osgi-nrtg-broker</artifactId>
      <version>${project.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>provided</scope>
    </dependency>

    <!-- main app -->
    <dependency>
      <groupId>org.opennms.features.nrtg</groupId>
      <artifactId>nrtg-commander</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.features.nrtg.protocolcollector</groupId>
      <artifactId>nrtg-protocolcollector-snmp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.snmp</groupId>
      <artifactId>org.opennms.core.snmp.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.core.snmp</groupId>
      <artifactId>org.opennms.core.snmp.implementations.snmp4j</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms</groupId>
      <artifactId>opennms-util</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opennms.core</groupId>
      <artifactId>org.opennms.core.lib</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>dnsjava</groupId>
      <artifactId>dnsjava</artifactId>
      <version>${dnsjavaVersion}</version>
    </dependency>
  </dependencies>
</project>

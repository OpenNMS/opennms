################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

#
# Comma separated list of features repositories to register by default
#
#featuresRepositories = \
#    mvn:org.apache.karaf.features/standard/${karafVersion}/xml/features, \
#    mvn:org.apache.karaf.features/enterprise/${karafVersion}/xml/features, \
#    mvn:org.apache.karaf.features/spring/${karafVersion}/xml/features, \
#    mvn:org.apache.karaf.features/framework/${karafVersion}/xml/features

# OPENNMS: Override Karaf's standard-${karafVersion}-features.xml with our customized version with the HTTP bridge code
# and override Karaf's spring-${karafVersion}-features.xml and spring-legacy-${karafVersion}-features.xml with our versions
# that point to the modified standard features.
# OPENNMS: Include the main product features file generated by the mvn:org.opennms.karaf/opennms project
featuresRepositories = \
    mvn:org.opennms.container/org.opennms.container.karaf/${project.version}/xml/features, \
    mvn:org.opennms.container/org.opennms.container.karaf/${project.version}/xml/spring, \
    mvn:org.opennms.container/org.opennms.container.karaf/${project.version}/xml/spring-legacy, \
    mvn:org.opennms.karaf/opennms/${project.version}/xml/features

#
# Comma separated list of features to install at startup
#
#featuresBoot = \
#    instance, \
#    package, \
#    log, \
#    ssh, \
#    aries-blueprint, \
#    framework, \
#    system, \
#    feature, \
#    shell, \
#    management, \
#    service, \
#    jaas, \
#    shell-compat, \
#    deployer, \
#    diagnostic, \
#    wrap, \
#    bundle, \
#    config, \
#    kar

# OPENNMS: Parenthetize standard Karaf boot features, add OpenNMS product features
# SMOKE TEST: Add opennms-es-rest to the feature list
featuresBoot = ( \
    instance, \
    package, \
    log, \
    ssh, \
    aries-blueprint, \
    framework, \
    system, \
    feature, \
    shell, \
    management, \
    service, \
    jaas, \
    shell-compat, \
    deployer, \
    diagnostic, \
    wrap, \
    bundle, \
    config, \
    kar \
  ), \
  http,\
  http-whiteboard,\
  opennms-es-rest,\
  opennms-jaas-login-module,\
  datachoices, \
  opennms-collection-commands, \
  opennms-events-commands, \
  opennms-icmp-commands, \
  opennms-snmp-commands, \
  opennms-topology-runtime-browsers,\
  opennms-topology-runtime-linkd,\
  opennms-topology-runtime-vmware,\
  opennms-topology-runtime-application,\
  opennms-topology-runtime-bsm,\
  opennms-provisioning-shell,\
  opennms-poller-shell,\
  opennms-topology-runtime-graphml,\
  opennms-topology-runtime-asset,\
  osgi-nrtg-local,\
  vaadin-node-maps,\
  vaadin-snmp-events-and-metrics, \
  vaadin-dashboard, \
  dashlet-summary, \
  dashlet-alarms, \
  dashlet-bsm, \
  dashlet-map, \
  dashlet-image, \
  dashlet-charts, \
  dashlet-grafana, \
  dashlet-rtc, \
  dashlet-rrd, \
  dashlet-ksc, \
  dashlet-topology, \
  dashlet-url, \
  dashlet-surveillance, \
  vaadin-surveillance-views, \
  vaadin-jmxconfiggenerator, \
  vaadin-opennms-pluginmanager, \
  vaadin-adminpage, \
  org.opennms.features.bsm.shell-commands, \
  internal-plugins-descriptor, \
  geolocation, \
  ifttt-integration

#
# Resource repositories (OBR) that the features resolver can use
# to resolve requirements/capabilities
#
# The format of the resourceRepositories is 
# resourceRepositories=[xml:url|json:url],...
# for Instance:
#
#resourceRepositories=xml:http://host/path/to/index.xml
# or
#resourceRepositories=json:http://host/path/to/index.json
#

#
# Defines if the boot features are started in asynchronous mode (in a dedicated thread)
#
featuresBootAsynchronous=false

#
# Service requirements enforcement
#
# By default, the feature resolver checks the service requirements/capabilities of
# bundles for new features (xml schema >= 1.3.0) in order to automatically installs
# the required bundles.
# The following flag can have those values:
#   - disable: service requirements are completely ignored
#   - default: service requirements are ignored for old features
#   - enforce: service requirements are always verified
#
# OPENNMS: We need to disable this so that Pax Web doesn't complain about bring run
# inside our Felix bridge HTTP service (which does not implement the Pax Web services)
serviceRequirements=disable

#
# Store cfg file for config element in feature
#
#configCfgStore=true
